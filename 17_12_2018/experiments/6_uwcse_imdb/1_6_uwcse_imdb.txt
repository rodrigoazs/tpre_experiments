Starting experiment #1 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L) )
%   | | | then return 0.4071685429426485;  // std dev = 3,554, 51,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, M), projectmember(N, M) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, P) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3470378239884017;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( publication(E, G), tempadvisedby(H, G) )
%   | | then return 0.2437379295135511;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.48540281491794895;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), ta(N, A, P) )
%   | | | then return 0.41642849982537694;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.31201240418820314;  // std dev = 4,662, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( tempadvisedby(R, Q), publication(S, R) )
%   | | | then return 0.2390253257491676;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3636453865394401;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.2554524423348888;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then return 0.23400603980416532;  // std dev = 0,496, 80,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=38 */
%   | | else return 0.5510588234700767;  // std dev = 0,876, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.18878032799723635;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.31623000525888334;  // std dev = 1,475, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1562274083544432;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.20878533243596462;  // std dev = 0,488, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( tempadvisedby(A, N), publication(P, A) )
%   | | then return 0.19956621655278314;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( advisedby(A, Q), tempadvisedby(R, Q) )
%   | | | then return 0.26868160057964974;  // std dev = 3,672, 54,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.30052876913860804;  // std dev = 4,117, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.16130363345659277;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.2019441949115056;  // std dev = 0,494, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( publication(G, A), advisedby(A, H) )
%   | then if ( tempadvisedby(I, H) )
%   | | then if ( publication(G, I) )
%   | | | then return 0.025898128634379087;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21946045473715997;  // std dev = 2,869, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3375682533596707;  // std dev = 0,475, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J) )
%   | | then if ( tempadvisedby(K, J), publication(L, K) )
%   | | | then return 0.16002473868282358;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.31257103582299617;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, M), publication(N, M) )
%   | | | then return 0.2238454966801545;  // std dev = 2,859, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.14279966400190738;  // std dev = 2,502, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F) )
%   | then return 0.0756181597016262;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1404362314623403;  // std dev = 0,493, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( tempadvisedby(I, G) )
%   | | then if ( publication(H, I) )
%   | | | then return 0.020356603941431167;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17188768443894703;  // std dev = 2,869, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.26132516490480734;  // std dev = 0,475, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J), advisedby(K, J) )
%   | | then if ( ta(L, K, M), ta(N, A, M) )
%   | | | then return 0.09580984258835246;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1936976341728333;  // std dev = 3,483, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, P), publication(Q, P) )
%   | | | then return 0.1729523682541348;  // std dev = 4,181, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.11577610943463984;  // std dev = 3,255, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.12933786108918902;  // std dev = 0,492, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return -0.015266954085031696;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11352733243761863;  // std dev = 2,633, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( publication(L, A), tempadvisedby(A, M) )
%   | | | then return 0.0024783799136255022;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1626683439106115;  // std dev = 1,635, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( advisedby(A, N), publication(P, A) )
%   | then return 0.14672876962792825;  // std dev = 0,492, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( advisedby(A, Q), projectmember(R, Q) )
%   | | then return 0.08395485272310435;  // std dev = 0,475, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( advisedby(A, S), tempadvisedby(T, S) )
%   | | | then return 0.1534654970421311;  // std dev = 2,340, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.11700479749793789;  // std dev = 3,807, 59,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.0019294616718164754;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.032659572385640746;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.12479956113628254;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( advisedby(A, G), projectmember(H, G) )
%   | then if ( advisedby(A, I), publication(J, I) )
%   | | then return 0.5682070567554856;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05035621185206688;  // std dev = 0,484, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( advisedby(A, K), ta(L, A, M) )
%   | | then if ( ta(L, N, M), tempadvisedby(N, P) )
%   | | | then return 0.1977604237269566;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06765637843222488;  // std dev = 4,284, 75,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=34 */
%   | | else if ( publication(Q, A), ta(R, A, S) )
%   | | | then return 0.16660411599087555;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10042549536291319;  // std dev = 6,415, 169,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=88 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then if ( advisedby(A, F), ta(H, G, D) )
%   | | then return 0.13463787135627436;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.03303547218118626;  // std dev = 0,487, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else return 0.09171137765338122;  // std dev = 0,485, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(I, A), advisedby(A, J) )
%   | then if ( publication(I, J) )
%   | | then if ( advisedby(K, J), ta(L, K, M) )
%   | | | then return 0.08426366384671205;  // std dev = 2,914, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.03901257837581278;  // std dev = 1,325, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.1784995549063107;  // std dev = 0,465, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, N), projectmember(P, N) )
%   | | then return 0.14986149077154617;  // std dev = 1,063, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( advisedby(A, Q), tempadvisedby(R, Q) )
%   | | | then return 0.08089558399988316;  // std dev = 3,788, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.0624724092957207;  // std dev = 5,229, 112,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=55 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), tempadvisedby(G, F) )
%   | then return 0.05379379617721064;  // std dev = 0,492, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.021526024216711622;  // std dev = 0,482, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( tempadvisedby(A, H) )
%   | then if ( tempadvisedby(I, H), publication(J, I) )
%   | | then if ( ta(K, I, L) )
%   | | | then return -0.009817708802668978;  // std dev = 1,551, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0459747287583448;  // std dev = 1,647, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.08872276675127128;  // std dev = 0,488, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | else if ( advisedby(A, M) )
%   | | then if ( advisedby(N, M), publication(P, N) )
%   | | | then return 0.054382416178367185;  // std dev = 5,364, 118,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=62 */
%   | | | else return 0.08407122273334729;  // std dev = 2,241, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( publication(Q, A) )
%   | | | then return 0.08867788058562931;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.009859876343230224;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return 8.066907831062823E-4;  // std dev = 0,488, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.034836191167839536;  // std dev = 0,497, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.06675534587311638;  // std dev = 0,488, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   else if ( publication(H, A) )
%   | then if ( advisedby(A, I), publication(H, I) )
%   | | then if ( advisedby(J, I), ta(K, J, L) )
%   | | | then return 0.03807389778352964;  // std dev = 3,938, 64,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | | else return -0.04282733757742583;  // std dev = 1,325, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.08008428698938962;  // std dev = 0,481, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( advisedby(A, M) )
%   | | then if ( tempadvisedby(N, M), publication(P, M) )
%   | | | then return 0.06193305767954866;  // std dev = 3,357, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.013425865191099512;  // std dev = 3,120, 40,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | else return -0.00750066902395111;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;advisedby(A, M), projectmember(N, M).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;false,false,false;advisedby(A, P).;false;false
0;false,true,true;ta(K, J, L).;false;false
0;true,false;tempadvisedby(A, G).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;false;advisedby(A, H), publication(I, H).;true;true
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, Q).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
1;true,false;publication(E, G), tempadvisedby(H, G).;false;false
1;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
1;false,true;advisedby(K, I), publication(J, K).;true;false
1;false;advisedby(A, I), publication(J, I).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;tempadvisedby(A, N), publication(P, A).;false;true
2;true;ta(C, E, D), advisedby(E, F).;true;true
2;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
2;true,true;sameperson(A, E).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false;tempadvisedby(A, J).;true;true
3;true;publication(E, A), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, M), publication(N, M).;false;false
3;false,true,true;publication(G, I).;false;false
3;false,false,true;tempadvisedby(K, J), publication(L, K).;false;false
3;false;publication(G, A), advisedby(A, H).;true;true
3;false,true;tempadvisedby(I, H).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
4;true;tempadvisedby(A, F).;false;false
4;false,false,false;advisedby(A, P), publication(Q, P).;false;false
4;false,true,true;publication(H, I).;false;false
4;false,false,true;ta(L, K, M), ta(N, A, M).;false;false
4;false;advisedby(A, G), publication(H, A).;true;true
4;false,true;tempadvisedby(I, G).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
5;false,false,false;advisedby(A, S), tempadvisedby(T, S).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;true
5;true,false,false;publication(L, A), tempadvisedby(A, M).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;false;advisedby(A, N), publication(P, A).;false;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;advisedby(A, K), ta(L, A, M).;true;true
6;true;publication(C, D).;true;false
6;false,false,false;publication(Q, A), ta(R, A, S).;false;false
6;true,true;ta(E, A, F).;false;false
6;false,false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
6;false;advisedby(A, G), projectmember(H, G).;true;true
6;false,true;advisedby(A, I), publication(J, I).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,false;tempadvisedby(A, N), projectmember(P, N).;false;true
7;true;publication(E, F), tempadvisedby(G, F).;true;false
7;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
7;true,true;advisedby(A, F), ta(H, G, D).;false;false
7;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
7;false;publication(I, A), advisedby(A, J).;true;true
7;false,true;publication(I, J).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;advisedby(A, M).;true;true
8;true;advisedby(A, F), tempadvisedby(G, F).;false;false
8;false,false,false;publication(Q, A).;false;false
8;false,true,true;ta(K, I, L).;false;false
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;false;tempadvisedby(A, H).;true;true
8;false,true;tempadvisedby(I, H), publication(J, I).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;advisedby(A, M).;true;false
9;true;tempadvisedby(D, C), publication(E, D).;true;false
9;false,true,true;advisedby(J, I), ta(K, J, L).;false;false
9;true,true;ta(F, D, G).;false;false
9;false,false,true;tempadvisedby(N, M), publication(P, M).;false;false
9;false;publication(H, A).;true;true
9;false,true;advisedby(A, I), publication(H, I).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(H, G) )
%   | then if ( workedunder(I, G), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.0849937455905463;  // std dev = 0,798, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.0920459433977766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.23935700108516403;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19852082828804782;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then return -0.08463679078745934;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16880983112775336;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07830602720680804;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07283771686569031;  // std dev = 5,89e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(F, A) )
%   | then if ( workedunder(A, G), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14642805445214568;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.351463
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.846 seconds
Total inference time: 1.085 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 11], 'false,true,false': [0.0, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(C, E), workedunder(F, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(I, G), workedunder(H, I)', 'false': 'workedunder(A, G), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [4.21e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11], 'true,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [4.21e-08, 0, 11], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.0, 0, 11], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [0.798, 11, 11], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(A, E), workedunder(F, E)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.58e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(C, D), workedunder(E, D)', 'false': 'workedunder(F, A), workedunder(A, G)', 'true,true': 'workedunder(A, D)'}, {'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [1.49e-08, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(E, D)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(F, A)', 'false,true': 'workedunder(A, G), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 11], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [5.89e-09, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true,false': [nan, -1.6148698540002277e-16], 'true': [nan, -1.6148698540002277e-16], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 1.6148698540002277e-16], 'false': [2.523234146875356e-18, nan], 'true,false': [1.6148698540002277e-16, nan]}, {'': [0.11145008534151403, nan], 'true': [-2.0185873175002846e-16, 5.046468293750712e-18]}, {'': [nan, 0.06736877561142739], 'false,false': [0.0, 1.6148698540002277e-16], 'false,false,true': [nan, 0.0], 'false': [nan, 0.06736877561142739], 'false,false,false': [nan, 1.6148698540002277e-16]}, {'': [-6.055761952500853e-17, 0.0], 'false,false': [0.0, nan], 'true': [nan, -6.055761952500853e-17], 'false': [nan, 0.0]}, {'': [0.028960720834012178, nan]}, {'': [nan, 0.027456977902990783], 'false,false': [nan, 6.055761952500853e-17], 'false,true': [-3.784851220313033e-18, nan], 'false': [-3.784851220313033e-18, 6.055761952500853e-17], 'false,false,false': [6.055761952500853e-17, nan]}, {'': [2.0185873175002847e-17, -1.261617073437678e-18], 'false,false': [-1.261617073437678e-18, nan], 'true': [2.0185873175002847e-17, nan], 'false': [nan, -1.261617073437678e-18], 'true,true': [nan, 2.0185873175002847e-17]}, {'': [2.0185873175002847e-17, 2.523234146875356e-18], 'true': [nan, 2.0185873175002847e-17], 'false': [2.523234146875356e-18, nan], 'false,true': [nan, 2.523234146875356e-18]}, {'': [3.1540426835941946e-18, -5.046468293750712e-18], 'true': [nan, 3.1540426835941946e-18], 'false': [-5.046468293750712e-18, nan], 'false,true': [nan, -5.046468293750712e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(A, G).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.99 seconds
Total inference time: 0.53 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:01
{'Inference time': 0.53, 'parameter': {'Inference time': 1.085, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'CLL': -0.351463, 'AUC PR': 0.8, 'Recall': 1.0, 'AUC ROC': 0.875, 'Learning time': 1.846}, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'CLL': -0.352709, 'AUC PR': 0.8, 'Recall': 1.0, 'AUC ROC': 0.875, 'Learning time': 2.8360000000000003}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;advisedby(A, M), projectmember(N, M).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;false,false,false;advisedby(A, P).;false;false
0;false,true,true;ta(K, J, L).;false;false
0;true,false;tempadvisedby(A, G).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;false;advisedby(A, H), publication(I, H).;true;true
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, Q).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
1;true,false;publication(E, G), tempadvisedby(H, G).;false;false
1;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
1;false,true;advisedby(K, I), publication(J, K).;true;false
1;false;advisedby(A, I), publication(J, I).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;tempadvisedby(A, N), publication(P, A).;false;true
2;true;ta(C, E, D), advisedby(E, F).;true;true
2;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
2;true,true;sameperson(A, E).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false;tempadvisedby(A, J).;true;true
3;true;publication(E, A), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, M), publication(N, M).;false;false
3;false,true,true;publication(G, I).;false;false
3;false,false,true;tempadvisedby(K, J), publication(L, K).;false;false
3;false;publication(G, A), advisedby(A, H).;true;true
3;false,true;tempadvisedby(I, H).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
4;true;tempadvisedby(A, F).;false;false
4;false,false,false;advisedby(A, P), publication(Q, P).;false;false
4;false,true,true;publication(H, I).;false;false
4;false,false,true;ta(L, K, M), ta(N, A, M).;false;false
4;false;advisedby(A, G), publication(H, A).;true;true
4;false,true;tempadvisedby(I, G).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
5;false,false,false;advisedby(A, S), tempadvisedby(T, S).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;true
5;true,false,false;publication(L, A), tempadvisedby(A, M).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;false;advisedby(A, N), publication(P, A).;false;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;advisedby(A, K), ta(L, A, M).;true;true
6;true;publication(C, D).;true;false
6;false,false,false;publication(Q, A), ta(R, A, S).;false;false
6;true,true;ta(E, A, F).;false;false
6;false,false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
6;false;advisedby(A, G), projectmember(H, G).;true;true
6;false,true;advisedby(A, I), publication(J, I).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,false;tempadvisedby(A, N), projectmember(P, N).;false;true
7;true;publication(E, F), tempadvisedby(G, F).;true;false
7;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
7;true,true;advisedby(A, F), ta(H, G, D).;false;false
7;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
7;false;publication(I, A), advisedby(A, J).;true;true
7;false,true;publication(I, J).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;advisedby(A, M).;true;true
8;true;advisedby(A, F), tempadvisedby(G, F).;false;false
8;false,false,false;publication(Q, A).;false;false
8;false,true,true;ta(K, I, L).;false;false
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;false;tempadvisedby(A, H).;true;true
8;false,true;tempadvisedby(I, H), publication(J, I).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;advisedby(A, M).;true;false
9;true;tempadvisedby(D, C), publication(E, D).;true;false
9;false,true,true;advisedby(J, I), ta(K, J, L).;false;false
9;true,true;ta(F, D, G).;false;false
9;false,false,true;tempadvisedby(N, M), publication(P, M).;false;false
9;false;publication(H, A).;true;true
9;false,true;advisedby(A, I), publication(H, I).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(H, G) )
%   | then if ( workedunder(I, G), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.08391087641099375;  // std dev = 1,226, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.0919554842138842;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.20953781621100837;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16868535375783297;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then return -0.08455993709271782;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13878447841363067;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07823997317641573;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07278036876592021;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(F, A) )
%   | then if ( workedunder(A, G), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11623125909741781;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.322522
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.718 seconds
Total inference time: 1.071 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.961, 1, 12], 'false,true,false': [0.0, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(C, E), workedunder(F, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(I, G), workedunder(H, I)', 'false': 'workedunder(A, G), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)'}, {'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.961, 1, 12], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.961, 1, 12], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.226, 12, 12], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(A, E), workedunder(F, E)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(C, D), workedunder(E, D)', 'false': 'workedunder(F, A), workedunder(A, G)', 'true,true': 'workedunder(A, D)'}, {'false,false,true': [6.45e-09, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(E, D)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [3.73e-09, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(F, A)', 'false,true': 'workedunder(A, G), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.961, 1, 12], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [3.73e-09, 11, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.07100591715976314], 'false': [-1.0092936587501423e-17, nan], 'true,false': [nan, 0.07100591715976314]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 0.07100591715976333], 'false': [2.523234146875356e-18, nan], 'true,false': [0.07100591715976333, nan]}, {'': [0.13533629047183346, nan], 'true': [0.07100591715976351, 5.046468293750712e-18]}, {'': [nan, 0.09731751852547606], 'false,false': [0.0, 0.0710059171597632], 'false,false,true': [nan, 0.0], 'false': [nan, 0.09731751852547606], 'false,false,false': [nan, 0.0710059171597632]}, {'': [0.07100591715976336, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.07100591715976336], 'false': [nan, 0.0]}, {'': [0.06265589574996693, nan]}, {'': [nan, 0.06102828161910185], 'false,false': [nan, 0.07100591715976332], 'false,true': [0.0, nan], 'false': [0.0, 0.07100591715976332], 'false,false,false': [0.07100591715976332, nan]}, {'': [0.07100591715976336, 3.784851220313033e-18], 'false,false': [3.784851220313033e-18, nan], 'true': [0.07100591715976336, nan], 'false': [nan, 3.784851220313033e-18], 'true,true': [nan, 0.07100591715976336]}, {'': [0.07100591715976332, 1.261617073437678e-18], 'true': [nan, 0.07100591715976332], 'false': [1.261617073437678e-18, nan], 'false,true': [nan, 1.261617073437678e-18]}, {'': [1.261617073437678e-18, 0.07100591715976332], 'true': [nan, 1.261617073437678e-18], 'false': [0.07100591715976332, nan], 'false,true': [nan, 0.07100591715976332]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(A, G).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.409 seconds
Total inference time: 0.573 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:06
{'Inference time': 0.573, 'parameter': {'Inference time': 1.071, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'CLL': -0.322522, 'AUC PR': 0.813953, 'Recall': 1.0, 'AUC ROC': 0.885714, 'Learning time': 1.718}, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'CLL': -0.320018, 'AUC PR': 0.813953, 'Recall': 1.0, 'AUC ROC': 0.885714, 'Learning time': 3.127}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;advisedby(A, M), projectmember(N, M).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;false,false,false;advisedby(A, P).;false;false
0;false,true,true;ta(K, J, L).;false;false
0;true,false;tempadvisedby(A, G).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;false;advisedby(A, H), publication(I, H).;true;true
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, Q).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
1;true,false;publication(E, G), tempadvisedby(H, G).;false;false
1;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
1;false,true;advisedby(K, I), publication(J, K).;true;false
1;false;advisedby(A, I), publication(J, I).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;tempadvisedby(A, N), publication(P, A).;false;true
2;true;ta(C, E, D), advisedby(E, F).;true;true
2;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
2;true,true;sameperson(A, E).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false;tempadvisedby(A, J).;true;true
3;true;publication(E, A), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, M), publication(N, M).;false;false
3;false,true,true;publication(G, I).;false;false
3;false,false,true;tempadvisedby(K, J), publication(L, K).;false;false
3;false;publication(G, A), advisedby(A, H).;true;true
3;false,true;tempadvisedby(I, H).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
4;true;tempadvisedby(A, F).;false;false
4;false,false,false;advisedby(A, P), publication(Q, P).;false;false
4;false,true,true;publication(H, I).;false;false
4;false,false,true;ta(L, K, M), ta(N, A, M).;false;false
4;false;advisedby(A, G), publication(H, A).;true;true
4;false,true;tempadvisedby(I, G).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
5;false,false,false;advisedby(A, S), tempadvisedby(T, S).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;true
5;true,false,false;publication(L, A), tempadvisedby(A, M).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;false;advisedby(A, N), publication(P, A).;false;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;advisedby(A, K), ta(L, A, M).;true;true
6;true;publication(C, D).;true;false
6;false,false,false;publication(Q, A), ta(R, A, S).;false;false
6;true,true;ta(E, A, F).;false;false
6;false,false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
6;false;advisedby(A, G), projectmember(H, G).;true;true
6;false,true;advisedby(A, I), publication(J, I).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,false;tempadvisedby(A, N), projectmember(P, N).;false;true
7;true;publication(E, F), tempadvisedby(G, F).;true;false
7;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
7;true,true;advisedby(A, F), ta(H, G, D).;false;false
7;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
7;false;publication(I, A), advisedby(A, J).;true;true
7;false,true;publication(I, J).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;advisedby(A, M).;true;true
8;true;advisedby(A, F), tempadvisedby(G, F).;false;false
8;false,false,false;publication(Q, A).;false;false
8;false,true,true;ta(K, I, L).;false;false
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;false;tempadvisedby(A, H).;true;true
8;false,true;tempadvisedby(I, H), publication(J, I).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;advisedby(A, M).;true;false
9;true;tempadvisedby(D, C), publication(E, D).;true;false
9;false,true,true;advisedby(J, I), ta(K, J, L).;false;false
9;true,true;ta(F, D, G).;false;false
9;false,false,true;tempadvisedby(N, M), publication(P, M).;false;false
9;false;publication(H, A).;true;true
9;false,true;advisedby(A, I), publication(H, I).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(H, G) )
%   | then if ( workedunder(I, G), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3029206894518932;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2279628397230807;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09281113695383897;  // std dev = 2,354, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.09270135692417089;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.14826830795057272;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11241116071955215;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then return -0.08519330675011703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08595735780965401;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07878410101743259;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07325259859736293;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(F, A) )
%   | then if ( workedunder(A, G), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.06625163134300038;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.272375
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.74 seconds
Total inference time: 1.267 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [2.245, 7, 18], 'false,true,false': [0.0, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(C, E), workedunder(F, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(I, G), workedunder(H, I)', 'false': 'workedunder(A, G), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)'}, {'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [2.245, 7, 18], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [2.245, 7, 18], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [2.354, 18, 18], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(A, E), workedunder(F, E)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(C, D), workedunder(E, D)', 'false': 'workedunder(F, A), workedunder(A, G)', 'true,true': 'workedunder(A, D)'}, {'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(E, D)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(F, A)', 'false,true': 'workedunder(A, G), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [2.245, 7, 18], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [3.73e-09, 11, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.2015999999999996], 'false': [-1.0092936587501423e-17, nan], 'true,false': [nan, 0.2015999999999996]}, {'': [0.2016000000000001, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 0.2016000000000001], 'false': [2.523234146875356e-18, nan], 'true,false': [0.2016000000000001, nan]}, {'': [0.1945443430451362, nan], 'true': [0.20160000000000053, 5.046468293750712e-18]}, {'': [nan, 0.17472172462829386], 'false,false': [0.0, 0.2016000000000004], 'false,false,true': [nan, 0.0], 'false': [nan, 0.17472172462829386], 'false,false,false': [nan, 0.2016000000000004]}, {'': [0.2016000000000001, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.2016000000000001], 'false': [nan, 0.0]}, {'': [0.15394031595736635, nan]}, {'': [nan, 0.15232118389830843], 'false,false': [nan, 0.20160000000000003], 'false,true': [-2.523234146875356e-18, nan], 'false': [-2.523234146875356e-18, 0.20160000000000003], 'false,false,false': [0.20160000000000003, nan]}, {'': [0.20160000000000003, 0.0], 'false,false': [0.0, nan], 'true': [0.20160000000000003, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.20160000000000003]}, {'': [0.2016, -1.261617073437678e-18], 'true': [nan, 0.2016], 'false': [-1.261617073437678e-18, nan], 'false,true': [nan, -1.261617073437678e-18]}, {'': [1.261617073437678e-18, 0.20159999999999992], 'true': [nan, 1.261617073437678e-18], 'false': [0.20159999999999992, nan], 'false,true': [nan, 0.20159999999999992]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(A, G).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.474 seconds
Total inference time: 0.543 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:12
{'Inference time': 0.543, 'parameter': {'Inference time': 1.267, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'CLL': -0.272375, 'AUC PR': 0.935484, 'Recall': 1.0, 'AUC ROC': 0.965517, 'Learning time': 1.74}, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'CLL': -0.264596, 'AUC PR': 0.935484, 'Recall': 1.0, 'AUC ROC': 0.965517, 'Learning time': 3.214}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;advisedby(A, M), projectmember(N, M).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;false,false,false;advisedby(A, P).;false;false
0;false,true,true;ta(K, J, L).;false;false
0;true,false;tempadvisedby(A, G).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;false;advisedby(A, H), publication(I, H).;true;true
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, Q).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
1;true,false;publication(E, G), tempadvisedby(H, G).;false;false
1;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
1;false,true;advisedby(K, I), publication(J, K).;true;false
1;false;advisedby(A, I), publication(J, I).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;tempadvisedby(A, N), publication(P, A).;false;true
2;true;ta(C, E, D), advisedby(E, F).;true;true
2;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
2;true,true;sameperson(A, E).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false;tempadvisedby(A, J).;true;true
3;true;publication(E, A), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, M), publication(N, M).;false;false
3;false,true,true;publication(G, I).;false;false
3;false,false,true;tempadvisedby(K, J), publication(L, K).;false;false
3;false;publication(G, A), advisedby(A, H).;true;true
3;false,true;tempadvisedby(I, H).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
4;true;tempadvisedby(A, F).;false;false
4;false,false,false;advisedby(A, P), publication(Q, P).;false;false
4;false,true,true;publication(H, I).;false;false
4;false,false,true;ta(L, K, M), ta(N, A, M).;false;false
4;false;advisedby(A, G), publication(H, A).;true;true
4;false,true;tempadvisedby(I, G).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
5;false,false,false;advisedby(A, S), tempadvisedby(T, S).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;true
5;true,false,false;publication(L, A), tempadvisedby(A, M).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;false;advisedby(A, N), publication(P, A).;false;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;advisedby(A, K), ta(L, A, M).;true;true
6;true;publication(C, D).;true;false
6;false,false,false;publication(Q, A), ta(R, A, S).;false;false
6;true,true;ta(E, A, F).;false;false
6;false,false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
6;false;advisedby(A, G), projectmember(H, G).;true;true
6;false,true;advisedby(A, I), publication(J, I).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,false;tempadvisedby(A, N), projectmember(P, N).;false;true
7;true;publication(E, F), tempadvisedby(G, F).;true;false
7;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
7;true,true;advisedby(A, F), ta(H, G, D).;false;false
7;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
7;false;publication(I, A), advisedby(A, J).;true;true
7;false,true;publication(I, J).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;advisedby(A, M).;true;true
8;true;advisedby(A, F), tempadvisedby(G, F).;false;false
8;false,false,false;publication(Q, A).;false;false
8;false,true,true;ta(K, I, L).;false;false
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;false;tempadvisedby(A, H).;true;true
8;false,true;tempadvisedby(I, H), publication(J, I).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;advisedby(A, M).;true;false
9;true;tempadvisedby(D, C), publication(E, D).;true;false
9;false,true,true;advisedby(J, I), ta(K, J, L).;false;false
9;true,true;ta(F, D, G).;false;false
9;false,false,true;tempadvisedby(N, M), publication(P, M).;false;false
9;false;publication(H, A).;true;true
9;false,true;advisedby(A, I), publication(H, I).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(H, G) )
%   | then if ( workedunder(I, G), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.08710547468208353;  // std dev = 0,971, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.0922225800678476;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.1699568055648703;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13128943076582072;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then return -0.08478682953449611;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10287419696914575;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07843495903450498;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0729496378729847;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(F, A) )
%   | then if ( workedunder(A, G), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.08160330498622399;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.306342
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.107 seconds
Total inference time: 1.031 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.894, 1, 4], 'false,true,false': [0.0, 3, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(C, E), workedunder(F, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(I, G), workedunder(H, I)', 'false': 'workedunder(A, G), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true,false,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)'}, {'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false': [2.63e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.894, 1, 4], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.894, 1, 4], 'false,false,true': [1.32e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [0.971, 4, 4], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(A, E), workedunder(F, E)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(C, D), workedunder(E, D)', 'false': 'workedunder(F, A), workedunder(A, G)', 'true,true': 'workedunder(A, D)'}, {'false,false,true': [1.86e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(E, D)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(F, A)', 'false,true': 'workedunder(A, G), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.894, 1, 4], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0]}]]
[{'': [0.15999999999999986, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.15999999999999986], 'false': [0.0, nan], 'true,false': [nan, 0.15999999999999986]}, {'': [0.16, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.16], 'false': [0.0, nan], 'true,false': [0.16, nan]}, {'': [0.17200226808539504, nan], 'true': [0.15999999999999998, 2.3129646346357427e-18]}, {'': [nan, 0.14475994169199066], 'false,false': [-1.1564823173178713e-18, 0.15999999999999998], 'false,false,true': [nan, -1.1564823173178713e-18], 'false': [nan, 0.14475994169199066], 'false,false,false': [nan, 0.15999999999999998]}, {'': [0.16, 2.3129646346357427e-18], 'false,false': [2.3129646346357427e-18, nan], 'true': [nan, 0.16], 'false': [nan, 2.3129646346357427e-18]}, {'': [0.11781035319965033, nan]}, {'': [nan, 0.11611047584001939], 'false,false': [nan, 0.16], 'false,true': [-1.1564823173178713e-18, nan], 'false': [-1.1564823173178713e-18, 0.16], 'false,false,false': [0.16, nan]}, {'': [0.16, 1.1564823173178713e-18], 'false,false': [1.1564823173178713e-18, nan], 'true': [0.16, nan], 'false': [nan, 1.1564823173178713e-18], 'true,true': [nan, 0.16]}, {'': [0.16, 0.0], 'true': [nan, 0.16], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.16], 'true': [nan, 0.0], 'false': [0.16, nan], 'false,true': [nan, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(A, G).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.81 seconds
Total inference time: 0.538 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:16
{'Inference time': 0.538, 'parameter': {'Inference time': 1.031, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'CLL': -0.306342, 'AUC PR': 0.843137, 'Recall': 1.0, 'AUC ROC': 0.906977, 'Learning time': 1.107}, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'CLL': -0.300536, 'AUC PR': 0.843137, 'Recall': 1.0, 'AUC ROC': 0.906977, 'Learning time': 1.917}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;advisedby(A, M), projectmember(N, M).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;false,false,false;advisedby(A, P).;false;false
0;false,true,true;ta(K, J, L).;false;false
0;true,false;tempadvisedby(A, G).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;false;advisedby(A, H), publication(I, H).;true;true
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, Q).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
1;true,false;publication(E, G), tempadvisedby(H, G).;false;false
1;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
1;false,true;advisedby(K, I), publication(J, K).;true;false
1;false;advisedby(A, I), publication(J, I).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;tempadvisedby(A, N), publication(P, A).;false;true
2;true;ta(C, E, D), advisedby(E, F).;true;true
2;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
2;true,true;sameperson(A, E).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false;tempadvisedby(A, J).;true;true
3;true;publication(E, A), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, M), publication(N, M).;false;false
3;false,true,true;publication(G, I).;false;false
3;false,false,true;tempadvisedby(K, J), publication(L, K).;false;false
3;false;publication(G, A), advisedby(A, H).;true;true
3;false,true;tempadvisedby(I, H).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
4;true;tempadvisedby(A, F).;false;false
4;false,false,false;advisedby(A, P), publication(Q, P).;false;false
4;false,true,true;publication(H, I).;false;false
4;false,false,true;ta(L, K, M), ta(N, A, M).;false;false
4;false;advisedby(A, G), publication(H, A).;true;true
4;false,true;tempadvisedby(I, G).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
5;false,false,false;advisedby(A, S), tempadvisedby(T, S).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;true
5;true,false,false;publication(L, A), tempadvisedby(A, M).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;false;advisedby(A, N), publication(P, A).;false;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;advisedby(A, K), ta(L, A, M).;true;true
6;true;publication(C, D).;true;false
6;false,false,false;publication(Q, A), ta(R, A, S).;false;false
6;true,true;ta(E, A, F).;false;false
6;false,false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
6;false;advisedby(A, G), projectmember(H, G).;true;true
6;false,true;advisedby(A, I), publication(J, I).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,false;tempadvisedby(A, N), projectmember(P, N).;false;true
7;true;publication(E, F), tempadvisedby(G, F).;true;false
7;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
7;true,true;advisedby(A, F), ta(H, G, D).;false;false
7;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
7;false;publication(I, A), advisedby(A, J).;true;true
7;false,true;publication(I, J).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;advisedby(A, M).;true;true
8;true;advisedby(A, F), tempadvisedby(G, F).;false;false
8;false,false,false;publication(Q, A).;false;false
8;false,true,true;ta(K, I, L).;false;false
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;false;tempadvisedby(A, H).;true;true
8;false,true;tempadvisedby(I, H), publication(J, I).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;advisedby(A, M).;true;false
9;true;tempadvisedby(D, C), publication(E, D).;true;false
9;false,true,true;advisedby(J, I), ta(K, J, L).;false;false
9;true,true;ta(F, D, G).;false;false
9;false,false,true;tempadvisedby(N, M), publication(P, M).;false;false
9;false;publication(H, A).;true;true
9;false,true;advisedby(A, I), publication(H, I).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(H, G) )
%   | then if ( workedunder(I, G), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.13637023346435792;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5002131558403854;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.37769095781541506;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.12109080086507203;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.0925030210673109;  // std dev = 0,403, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.1180810726871328;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.2749693064602384;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.22364953150626432;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then return -0.10632803812788187;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18722041466032546;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0966391804806873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08852517668472613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(F, A) )
%   | then if ( workedunder(A, G), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16038129881197583;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306096
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.229 seconds
Total inference time: 1.002 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(C, E), workedunder(F, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(I, G), workedunder(H, I)', 'false': 'workedunder(A, G), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(A, C)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.668, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.0, 0, 2], 'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.0, 0, 2], 'false,false,true': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [0.403, 2, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(A, E), workedunder(F, E)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(C, D), workedunder(E, D)', 'false': 'workedunder(F, A), workedunder(A, G)', 'true,true': 'workedunder(A, D)'}, {'false,false,true': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(E, D)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(F, A)', 'false,true': 'workedunder(A, G), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 2], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 2, 0]}]]
[{'': [0.0, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.11145008534151418, nan], 'true': [nan, 0.11145008534151418]}, {'': [nan, 0.1013096028846786], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false': [nan, 0.1013096028846786], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.04051610769524332, nan]}, {'': [nan, 0.038622150136973066], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan]}, {'': [0.0, 0.0], 'false,false': [0.0, nan], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(A, G).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299128
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.769 seconds
Total inference time: 0.637 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:20
{'Inference time': 0.637, 'parameter': {'Inference time': 1.002, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'CLL': -0.306096, 'AUC PR': 0.833333, 'Recall': 1.0, 'AUC ROC': 0.9, 'Learning time': 1.229}, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'CLL': -0.299128, 'AUC PR': 0.833333, 'Recall': 1.0, 'AUC ROC': 0.9, 'Learning time': 1.9980000000000002}


