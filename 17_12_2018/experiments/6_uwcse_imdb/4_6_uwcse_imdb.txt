Starting experiment #4 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3470378239884017;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, H), publication(I, G) )
%   | | then if ( ta(J, A, H), advisedby(G, K) )
%   | | | then return 0.5532233474812823;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.30817948105956333;  // std dev = 3,231, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( ta(C, L, M), advisedby(L, N) )
%   | | | then return 0.2660727356527874;  // std dev = 3,184, 41,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.36600945273329455;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( advisedby(A, P), projectmember(Q, P) )
%   | then return 0.2515992537546687;  // std dev = 0,492, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, R) )
%   | | then return 0.3502996093132786;  // std dev = 0,497, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | else if ( tempadvisedby(A, S) )
%   | | | then return 0.341703897177739;  // std dev = 2,823, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.22712056384440568;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), tempadvisedby(G, F) )
%   | then return 0.20190801967578395;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( advisedby(A, H) )
%   | | then return 0.19686465629754826;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.4231825069192076;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), ta(N, A, P) )
%   | | | then return 0.3556497804397374;  // std dev = 1,752, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.25594004259918185;  // std dev = 4,659, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.3696297901606994;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( projectmember(R, Q) )
%   | | | then return 0.34871869607839284;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26328904819871;  // std dev = 3,959, 63,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | else return 0.21012206996596935;  // std dev = 0,494, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.2057842769707719;  // std dev = 0,494, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.14447195901622892;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.2668416186084808;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09293891454756953;  // std dev = 1,104, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( publication(L, A), tempadvisedby(A, M) )
%   | then return 0.12871239738974813;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( advisedby(A, N), tempadvisedby(P, N) )
%   | | then if ( publication(Q, N), ta(R, P, S) )
%   | | | then return 0.2577629308465287;  // std dev = 2,801, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.15936861208663597;  // std dev = 2,971, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( publication(T, A), advisedby(A, U) )
%   | | | then return 0.3382405773665817;  // std dev = 1,961, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.21540090921652516;  // std dev = 3,589, 52,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( tempadvisedby(A, F), publication(C, F) )
%   | then return 0.030024062041141015;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then if ( tempadvisedby(H, G) )
%   | | | then return 0.14326648610151152;  // std dev = 2,893, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.031019991091895644;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.21880347434432088;  // std dev = 0,493, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, I), publication(J, A) )
%   | then if ( tempadvisedby(K, I), publication(J, K) )
%   | | then return -0.027418756178199517;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.20398513547868485;  // std dev = 0,493, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( tempadvisedby(A, L) )
%   | | then if ( tempadvisedby(M, L), publication(N, M) )
%   | | | then return 0.09364137848777919;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.21483330410751764;  // std dev = 3,378, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.1490333758068362;  // std dev = 0,494, 109,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=54 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.12983551624589865;  // std dev = 0,492, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return -0.02336463264530053;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10456355901911128;  // std dev = 2,634, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.11974883082535093;  // std dev = 0,491, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), tempadvisedby(M, L) )
%   | then if ( publication(N, L), ta(P, M, Q) )
%   | | then if ( advisedby(R, L), ta(P, R, S) )
%   | | | then return 0.09628909028561827;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.19423362738501274;  // std dev = 2,286, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( projectmember(T, L), publication(U, A) )
%   | | | then return 0.1752792241658263;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0750124793190039;  // std dev = 2,789, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else return 0.144692498184234;  // std dev = 0,493, 76,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.16241865752787357;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( tempadvisedby(A, E), publication(F, A) )
%   | then if ( publication(F, E) )
%   | | then if ( ta(G, A, H) )
%   | | | then return -0.002522840072225955;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.017965793825870248;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.08916620552875376;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(A, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return 0.03810002516655412;  // std dev = 1,850, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.13704154548481076;  // std dev = 3,188, 42,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | else if ( advisedby(A, L), publication(M, L) )
%   | | | then return 0.09790551822090039;  // std dev = 6,128, 154,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=79 */
%   | | | else return 0.07365970302707457;  // std dev = 3,574, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then return 0.02772491687902354;  // std dev = 0,490, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( ta(E, A, F) )
%   | then if ( ta(E, G, F), advisedby(G, H) )
%   | | then if ( sameperson(A, G) )
%   | | | then return 0.06140315001557674;  // std dev = 4,412, 80,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=38 */
%   | | | else return 0.31709792164781014;  // std dev = 0,898, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(E, I, J), advisedby(I, K) )
%   | | | then return 0.031187658059104072;  // std dev = 2,915, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.08374347570052122;  // std dev = 1,637, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( advisedby(A, L), tempadvisedby(M, L) )
%   | | then if ( publication(N, L), ta(P, M, Q) )
%   | | | then return 0.0996636722403551;  // std dev = 2,785, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.045420260564199205;  // std dev = 2,966, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.14457105796116662;  // std dev = 2,202, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.07090838017091151;  // std dev = 3,427, 48,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.008167386190929863;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.00712238584772551;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.06070722300846838;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( advisedby(A, G), projectmember(H, G) )
%   | then if ( advisedby(A, I), publication(J, I) )
%   | | then return 0.5204213538242367;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.017496917247816532;  // std dev = 0,484, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( ta(K, A, L), advisedby(A, M) )
%   | | then if ( advisedby(N, M), publication(P, N) )
%   | | | then return 0.028637138190423496;  // std dev = 4,217, 73,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | | | else return 0.10825519539777054;  // std dev = 1,066, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(A, Q), advisedby(R, Q) )
%   | | | then return 0.0733504645729613;  // std dev = 3,651, 55,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.05435788130584989;  // std dev = 5,370, 119,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=62 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), professor(F) )
%   | then return 0.018528834982662275;  // std dev = 0,491, 42,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else return 0.07376186571737336;  // std dev = 0,480, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( publication(H, G) )
%   | | then if ( advisedby(I, G), ta(J, I, K) )
%   | | | then return 0.04895419060130454;  // std dev = 2,911, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.07965521653731551;  // std dev = 1,324, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.15803683278602781;  // std dev = 0,463, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, L) )
%   | | then if ( tempadvisedby(M, L), publication(N, M) )
%   | | | then return 0.00673389460495513;  // std dev = 2,266, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.07145923618865813;  // std dev = 3,344, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( advisedby(A, P), tempadvisedby(Q, P) )
%   | | | then return 0.05228364345269387;  // std dev = 3,771, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.011165464596847507;  // std dev = 3,461, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;true,false,true;ta(J, A, H), advisedby(G, K).;false;false
1;false,false,false;tempadvisedby(A, S).;false;false
1;false;advisedby(A, P), projectmember(Q, P).;false;true
1;true,false;ta(C, G, H), publication(I, G).;true;true
1;true,false,false;ta(C, L, M), advisedby(L, N).;false;false
1;false,false;advisedby(A, R).;false;true
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
2;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
2;false,false,true;projectmember(R, Q).;false;false
2;true,false;advisedby(A, H).;false;false
2;false;advisedby(A, I), publication(J, I).;true;true
2;false,false;tempadvisedby(A, Q).;true;false
2;false,true;advisedby(K, I), publication(J, K).;true;false
2;true;publication(C, F), tempadvisedby(G, F).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false,false;publication(T, A), advisedby(A, U).;false;false
3;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
3;true,false;ta(C, G, H), advisedby(G, I).;false;true
3;false;publication(L, A), tempadvisedby(A, M).;false;true
3;false,false;advisedby(A, N), tempadvisedby(P, N).;true;true
3;false,false,true;publication(Q, N), ta(R, P, S).;false;false
3;true;ta(C, E, D), advisedby(E, F).;false;true
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
4;true,false,true;tempadvisedby(H, G).;false;false
4;true,false;advisedby(A, G).;true;false
4;false;advisedby(A, I), publication(J, A).;true;true
4;false,false;tempadvisedby(A, L).;true;false
4;false,true;tempadvisedby(K, I), publication(J, K).;false;false
4;true;tempadvisedby(A, F), publication(C, F).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,true,false;projectmember(T, L), publication(U, A).;false;false
5;false,true,true;advisedby(R, L), ta(P, R, S).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;false
5;false;advisedby(A, L), tempadvisedby(M, L).;true;false
5;false,true;publication(N, L), ta(P, M, Q).;true;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
6;false,true,true;ta(G, A, H).;false;false
6;false,false,true;tempadvisedby(J, I), publication(K, J).;false;false
6;false;tempadvisedby(A, E), publication(F, A).;true;true
6;false,false;tempadvisedby(A, I).;true;true
6;false,true;publication(F, E).;true;false
6;false,false,false;advisedby(A, L), publication(M, L).;false;false
7;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
7;false,true,false;ta(E, I, J), advisedby(I, K).;false;false
7;false,true,true;sameperson(A, G).;false;false
7;false,false,true;publication(N, L), ta(P, M, Q).;false;false
7;false;ta(E, A, F).;true;true
7;false,false;advisedby(A, L), tempadvisedby(M, L).;true;true
7;false,true;ta(E, G, F), advisedby(G, H).;true;true
7;false,false,false;publication(R, A).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q), advisedby(R, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
9;false,true,true;advisedby(I, G), ta(J, I, K).;false;false
9;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
9;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;false;advisedby(A, G), publication(H, A).;true;true
9;false,false;tempadvisedby(A, L).;true;true
9;false,true;publication(H, G).;true;false
9;true;publication(E, F), professor(F).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2970143868412816;  // std dev = 1,982, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.6558459784192013;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16180800894656572;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1781017839416223;  // std dev = 1,497, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.45286262642827835;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16403006668140588;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10102147813847283;  // std dev = 1,143, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.1555719128353786;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3223495259487468;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, A) )
%   | | then return 0.2562893983071733;  // std dev = 2,36e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.13621099618043717;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.12096383743884441;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21054654811312237;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1776748530305218;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10867975660794152;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.356574
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.101 seconds
Total inference time: 1.113 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 11], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,false': [1.982, 11, 11], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true': [2.98e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.497, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(G, A)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,true,false': [1.29e-08, 11, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.143, 11, 11]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.49e-08, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.05e-08, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.36e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [1.29e-08, 0, 11], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'true': 'workedunder(C, D), actor(D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 11], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true,false': [nan, -1.6148698540002277e-16], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, -1.6148698540002277e-16]}, {'': [nan, 0.17847162811629394], 'false': [0.17847162811629388, nan], 'false,true': [nan, 0.17847162811629388]}, {'': [8.074349270001139e-17, 5.046468293750712e-18], 'false': [5.046468293750712e-18, nan], 'false,true': [nan, 5.046468293750712e-18], 'true': [8.074349270001139e-17, nan]}, {'': [0.10185411746601693, nan]}, {'': [-4.0371746350005693e-17, 1.5139404881252134e-17], 'true,false': [nan, -4.0371746350005693e-17], 'false': [nan, 1.5139404881252134e-17], 'false,false': [1.5139404881252134e-17, nan], 'false,false,true': [nan, 1.5139404881252134e-17], 'true': [nan, -4.0371746350005693e-17]}, {'': [0.05942821918555934, nan]}, {'': [1.0092936587501423e-17, 2.0185873175002847e-17], 'false': [nan, 2.0185873175002847e-17], 'false,false': [nan, 2.0185873175002847e-17], 'false,false,false': [nan, 2.0185873175002847e-17]}, {'': [nan, 0.03851413991823248], 'false': [0.03851413991823247, nan], 'false,true': [5.0464682937507114e-17, -5.046468293750712e-18]}, {'': [nan, 0.027474783932203425], 'false': [-7.569702440626067e-18, 1.5139404881252134e-17], 'false,false': [nan, 1.5139404881252134e-17], 'false,true': [-7.569702440626067e-18, nan], 'false,false,false': [nan, 1.5139404881252134e-17]}, {'': [-1.5139404881252134e-17, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan], 'false,false,true': [nan, -5.046468293750712e-18], 'true': [nan, -1.5139404881252134e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(E, A).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.056 seconds
Total inference time: 0.53 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:42:51
{'Recall': 1.0, 'Learning time': 3.157, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.352709, 'parameter': {'Recall': 1.0, 'Learning time': 2.101, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.356574, 'AUC ROC': 0.875, 'Inference time': 1.113}, 'AUC ROC': 0.875, 'Inference time': 0.53}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;true,false,true;ta(J, A, H), advisedby(G, K).;false;false
1;false,false,false;tempadvisedby(A, S).;false;false
1;false;advisedby(A, P), projectmember(Q, P).;false;true
1;true,false;ta(C, G, H), publication(I, G).;true;true
1;true,false,false;ta(C, L, M), advisedby(L, N).;false;false
1;false,false;advisedby(A, R).;false;true
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
2;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
2;false,false,true;projectmember(R, Q).;false;false
2;true,false;advisedby(A, H).;false;false
2;false;advisedby(A, I), publication(J, I).;true;true
2;false,false;tempadvisedby(A, Q).;true;false
2;false,true;advisedby(K, I), publication(J, K).;true;false
2;true;publication(C, F), tempadvisedby(G, F).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false,false;publication(T, A), advisedby(A, U).;false;false
3;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
3;true,false;ta(C, G, H), advisedby(G, I).;false;true
3;false;publication(L, A), tempadvisedby(A, M).;false;true
3;false,false;advisedby(A, N), tempadvisedby(P, N).;true;true
3;false,false,true;publication(Q, N), ta(R, P, S).;false;false
3;true;ta(C, E, D), advisedby(E, F).;false;true
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
4;true,false,true;tempadvisedby(H, G).;false;false
4;true,false;advisedby(A, G).;true;false
4;false;advisedby(A, I), publication(J, A).;true;true
4;false,false;tempadvisedby(A, L).;true;false
4;false,true;tempadvisedby(K, I), publication(J, K).;false;false
4;true;tempadvisedby(A, F), publication(C, F).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,true,false;projectmember(T, L), publication(U, A).;false;false
5;false,true,true;advisedby(R, L), ta(P, R, S).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;false
5;false;advisedby(A, L), tempadvisedby(M, L).;true;false
5;false,true;publication(N, L), ta(P, M, Q).;true;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
6;false,true,true;ta(G, A, H).;false;false
6;false,false,true;tempadvisedby(J, I), publication(K, J).;false;false
6;false;tempadvisedby(A, E), publication(F, A).;true;true
6;false,false;tempadvisedby(A, I).;true;true
6;false,true;publication(F, E).;true;false
6;false,false,false;advisedby(A, L), publication(M, L).;false;false
7;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
7;false,true,false;ta(E, I, J), advisedby(I, K).;false;false
7;false,true,true;sameperson(A, G).;false;false
7;false,false,true;publication(N, L), ta(P, M, Q).;false;false
7;false;ta(E, A, F).;true;true
7;false,false;advisedby(A, L), tempadvisedby(M, L).;true;true
7;false,true;ta(E, G, F), advisedby(G, H).;true;true
7;false,false,false;publication(R, A).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q), advisedby(R, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
9;false,true,true;advisedby(I, G), ta(J, I, K).;false;false
9;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
9;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;false;advisedby(A, G), publication(H, A).;true;true
9;false,false;tempadvisedby(A, L).;true;true
9;false,true;publication(H, G).;true;false
9;true;publication(E, F), professor(F).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.29881865438287963;  // std dev = 2,140, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.5956741381003415;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16205286419737067;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.18124293657340532;  // std dev = 1,742, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.40884037541232365;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1646756462461812;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10154728112696922;  // std dev = 1,463, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.15617463765721928;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2849256207992032;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, A) )
%   | | then return 0.22203279368078926;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.13667972314320284;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.12133748739921944;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17766167325668616;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.14543634736358485;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10898387868848616;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.335562
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.67 seconds
Total inference time: 1.221 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.961, 1, 12], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,false': [2.14, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.742, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(G, A)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,true,false': [7.45e-09, 11, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.463, 12, 12]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.961, 1, 12], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'true': 'workedunder(C, D), actor(D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12], 'false,false,true,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'true,false': [nan, 0.07100591715976314], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.07100591715976314]}, {'': [nan, 0.1907686737562356], 'false': [0.19076867375623552, nan], 'false,true': [nan, 0.19076867375623552]}, {'': [0.07100591715976333, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0], 'true': [0.07100591715976333, nan]}, {'': [0.12645378409069916, nan]}, {'': [0.07100591715976326, 5.046468293750712e-18], 'true,false': [nan, 0.07100591715976326], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'false,false,true': [nan, 5.046468293750712e-18], 'true': [nan, 0.07100591715976326]}, {'': [0.08916977962150484, nan]}, {'': [-5.046468293750712e-18, 0.07100591715976333], 'false': [nan, 0.07100591715976333], 'false,false': [nan, 0.07100591715976333], 'false,false,false': [nan, 0.07100591715976333]}, {'': [nan, 0.07040681236925894], 'false': [0.07040681236925891, nan], 'false,true': [0.0710059171597633, -2.523234146875356e-18]}, {'': [nan, 0.06065645378172916], 'false': [-2.523234146875356e-18, 0.07100591715976329], 'false,false': [nan, 0.07100591715976329], 'false,true': [-2.523234146875356e-18, nan], 'false,false,false': [nan, 0.07100591715976329]}, {'': [0.0710059171597633, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'false,false,true': [nan, 5.046468293750712e-18], 'true': [nan, 0.0710059171597633]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(E, A).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.463 seconds
Total inference time: 0.649 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:42:57
{'Recall': 1.0, 'Learning time': 3.133, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.320018, 'parameter': {'Recall': 1.0, 'Learning time': 1.67, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.335562, 'AUC ROC': 0.885714, 'Inference time': 1.221}, 'AUC ROC': 0.885714, 'Inference time': 0.649}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;true,false,true;ta(J, A, H), advisedby(G, K).;false;false
1;false,false,false;tempadvisedby(A, S).;false;false
1;false;advisedby(A, P), projectmember(Q, P).;false;true
1;true,false;ta(C, G, H), publication(I, G).;true;true
1;true,false,false;ta(C, L, M), advisedby(L, N).;false;false
1;false,false;advisedby(A, R).;false;true
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
2;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
2;false,false,true;projectmember(R, Q).;false;false
2;true,false;advisedby(A, H).;false;false
2;false;advisedby(A, I), publication(J, I).;true;true
2;false,false;tempadvisedby(A, Q).;true;false
2;false,true;advisedby(K, I), publication(J, K).;true;false
2;true;publication(C, F), tempadvisedby(G, F).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false,false;publication(T, A), advisedby(A, U).;false;false
3;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
3;true,false;ta(C, G, H), advisedby(G, I).;false;true
3;false;publication(L, A), tempadvisedby(A, M).;false;true
3;false,false;advisedby(A, N), tempadvisedby(P, N).;true;true
3;false,false,true;publication(Q, N), ta(R, P, S).;false;false
3;true;ta(C, E, D), advisedby(E, F).;false;true
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
4;true,false,true;tempadvisedby(H, G).;false;false
4;true,false;advisedby(A, G).;true;false
4;false;advisedby(A, I), publication(J, A).;true;true
4;false,false;tempadvisedby(A, L).;true;false
4;false,true;tempadvisedby(K, I), publication(J, K).;false;false
4;true;tempadvisedby(A, F), publication(C, F).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,true,false;projectmember(T, L), publication(U, A).;false;false
5;false,true,true;advisedby(R, L), ta(P, R, S).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;false
5;false;advisedby(A, L), tempadvisedby(M, L).;true;false
5;false,true;publication(N, L), ta(P, M, Q).;true;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
6;false,true,true;ta(G, A, H).;false;false
6;false,false,true;tempadvisedby(J, I), publication(K, J).;false;false
6;false;tempadvisedby(A, E), publication(F, A).;true;true
6;false,false;tempadvisedby(A, I).;true;true
6;false,true;publication(F, E).;true;false
6;false,false,false;advisedby(A, L), publication(M, L).;false;false
7;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
7;false,true,false;ta(E, I, J), advisedby(I, K).;false;false
7;false,true,true;sameperson(A, G).;false;false
7;false,false,true;publication(N, L), ta(P, M, Q).;false;false
7;false;ta(E, A, F).;true;true
7;false,false;advisedby(A, L), tempadvisedby(M, L).;true;true
7;false,true;ta(E, G, F), advisedby(G, H).;true;true
7;false,false,false;publication(R, A).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q), advisedby(R, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
9;false,true,true;advisedby(I, G), ta(J, I, K).;false;false
9;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
9;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;false;advisedby(A, G), publication(H, A).;true;true
9;false,false;tempadvisedby(A, L).;true;true
9;false,true;publication(H, G).;true;false
9;true;publication(E, F), professor(F).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3036065954523843;  // std dev = 2,821, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.43468426925455816;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16270407948312035;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.191822590534415;  // std dev = 2,608, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.29242147522756295;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16670999812174656;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10840908496905355;  // std dev = 2,461, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.15876754526334327;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1927537790640691;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, A) )
%   | | then return 0.14510609697048987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return -0.1386922508600553;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.122939170383654;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11008550261035782;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08423300974648323;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1102857285010126;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.297236
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.129 seconds
Total inference time: 1.169 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [2.245, 7, 18], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,false': [2.821, 18, 18], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true': [2.245, 7, 18], 'true,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.608, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(G, A)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.461, 18, 18]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.05e-08, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [9.13e-09, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [2.245, 7, 18], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'true': 'workedunder(C, D), actor(D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18], 'false,false,true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'true,false': [nan, 0.2015999999999996], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.2015999999999996]}, {'': [nan, 0.22099738300738758], 'false': [0.22099738300738728, nan], 'false,true': [nan, 0.22099738300738728]}, {'': [0.20159999999999986, 5.046468293750712e-18], 'false': [5.046468293750712e-18, nan], 'false,true': [nan, 5.046468293750712e-18], 'true': [0.20159999999999986, nan]}, {'': [0.18895488036883698, nan]}, {'': [0.2016000000000001, -1.0092936587501423e-17], 'true,false': [nan, 0.2016000000000001], 'false': [nan, -1.0092936587501423e-17], 'false,false': [-1.0092936587501423e-17, nan], 'false,false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.2016000000000001]}, {'': [0.1682145567185593, nan]}, {'': [1.0092936587501423e-17, 0.2015999999999999], 'false': [nan, 0.2015999999999999], 'false,false': [nan, 0.2015999999999999], 'false,false,false': [nan, 0.2015999999999999]}, {'': [nan, 0.1570902107358183], 'false': [0.15709021073581825, nan], 'false,true': [0.20160000000000008, 7.569702440626067e-18]}, {'': [nan, 0.15152209645956072], 'false': [-2.523234146875356e-18, 0.2016], 'false,false': [nan, 0.2016], 'false,true': [-2.523234146875356e-18, nan], 'false,false,false': [nan, 0.2016]}, {'': [0.20159999999999997, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [2.523234146875356e-18, nan], 'false,false,true': [nan, 2.523234146875356e-18], 'true': [nan, 0.20159999999999997]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(E, A).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.404 seconds
Total inference time: 0.698 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:43:03
{'Recall': 1.0, 'Learning time': 3.533, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.264596, 'parameter': {'Recall': 1.0, 'Learning time': 2.129, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.297236, 'AUC ROC': 0.965517, 'Inference time': 1.169}, 'AUC ROC': 0.965517, 'Inference time': 0.698}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;true,false,true;ta(J, A, H), advisedby(G, K).;false;false
1;false,false,false;tempadvisedby(A, S).;false;false
1;false;advisedby(A, P), projectmember(Q, P).;false;true
1;true,false;ta(C, G, H), publication(I, G).;true;true
1;true,false,false;ta(C, L, M), advisedby(L, N).;false;false
1;false,false;advisedby(A, R).;false;true
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
2;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
2;false,false,true;projectmember(R, Q).;false;false
2;true,false;advisedby(A, H).;false;false
2;false;advisedby(A, I), publication(J, I).;true;true
2;false,false;tempadvisedby(A, Q).;true;false
2;false,true;advisedby(K, I), publication(J, K).;true;false
2;true;publication(C, F), tempadvisedby(G, F).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false,false;publication(T, A), advisedby(A, U).;false;false
3;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
3;true,false;ta(C, G, H), advisedby(G, I).;false;true
3;false;publication(L, A), tempadvisedby(A, M).;false;true
3;false,false;advisedby(A, N), tempadvisedby(P, N).;true;true
3;false,false,true;publication(Q, N), ta(R, P, S).;false;false
3;true;ta(C, E, D), advisedby(E, F).;false;true
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
4;true,false,true;tempadvisedby(H, G).;false;false
4;true,false;advisedby(A, G).;true;false
4;false;advisedby(A, I), publication(J, A).;true;true
4;false,false;tempadvisedby(A, L).;true;false
4;false,true;tempadvisedby(K, I), publication(J, K).;false;false
4;true;tempadvisedby(A, F), publication(C, F).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,true,false;projectmember(T, L), publication(U, A).;false;false
5;false,true,true;advisedby(R, L), ta(P, R, S).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;false
5;false;advisedby(A, L), tempadvisedby(M, L).;true;false
5;false,true;publication(N, L), ta(P, M, Q).;true;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
6;false,true,true;ta(G, A, H).;false;false
6;false,false,true;tempadvisedby(J, I), publication(K, J).;false;false
6;false;tempadvisedby(A, E), publication(F, A).;true;true
6;false,false;tempadvisedby(A, I).;true;true
6;false,true;publication(F, E).;true;false
6;false,false,false;advisedby(A, L), publication(M, L).;false;false
7;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
7;false,true,false;ta(E, I, J), advisedby(I, K).;false;false
7;false,true,true;sameperson(A, G).;false;false
7;false,false,true;publication(N, L), ta(P, M, Q).;false;false
7;false;ta(E, A, F).;true;true
7;false,false;advisedby(A, L), tempadvisedby(M, L).;true;true
7;false,true;ta(E, G, F), advisedby(G, H).;true;true
7;false,false,false;publication(R, A).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q), advisedby(R, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
9;false,true,true;advisedby(I, G), ta(J, I, K).;false;false
9;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
9;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;false;advisedby(A, G), publication(H, A).;true;true
9;false,false;tempadvisedby(A, L).;true;true
9;false,true;publication(H, G).;true;false
9;true;publication(E, F), professor(F).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30172034469051234;  // std dev = 1,295, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.498492746475355;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16244727624482774;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.18729114333702548;  // std dev = 1,148, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.33851028557264023;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16585589682022264;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10474473306284292;  // std dev = 1,048, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.15757302014560617;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22827118165083776;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, A) )
%   | | then return 0.17351202753319056;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.13776588890883956;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.12220244620436162;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13387928610211502;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10479429292752847;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10968727918968109;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.326403
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.277 seconds
Total inference time: 0.949 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.894, 1, 4], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,false': [1.295, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.148, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(G, A)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.048, 4, 4]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.894, 1, 4], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,true': 'workedunder(H, G), workedunder(I, H)', 'true': 'workedunder(C, D), actor(D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,false,true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.15999999999999986, 0.0], 'true,false': [nan, 0.15999999999999986], 'false': [0.0, nan], 'false,true': [nan, 0.0], 'true': [nan, 0.15999999999999986]}, {'': [nan, 0.2094819537330438], 'false': [0.20948195373304385, nan], 'false,true': [nan, 0.20948195373304385]}, {'': [0.15999999999999992, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0], 'true': [0.15999999999999992, nan]}, {'': [0.16487698050829605, nan]}, {'': [0.16, -4.625929269271485e-18], 'true,false': [nan, 0.16], 'false': [nan, -4.625929269271485e-18], 'false,false': [-4.625929269271485e-18, nan], 'false,false,true': [nan, -4.625929269271485e-18], 'true': [nan, 0.16]}, {'': [0.13717276243905005, nan]}, {'': [-4.625929269271485e-18, 0.15999999999999998], 'false': [nan, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}, {'': [nan, 0.12270951748386522], 'false': [0.12270951748386522, nan], 'false,true': [0.16, -2.3129646346357427e-18]}, {'': [nan, 0.11536980944244202], 'false': [2.3129646346357427e-18, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,true': [2.3129646346357427e-18, nan], 'false,false,false': [nan, 0.15999999999999998]}, {'': [0.15999999999999998, -2.3129646346357427e-18], 'false': [nan, -2.3129646346357427e-18], 'false,false': [-2.3129646346357427e-18, nan], 'false,false,true': [nan, -2.3129646346357427e-18], 'true': [nan, 0.15999999999999998]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(E, A).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.083 seconds
Total inference time: 0.626 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:43:07
{'Recall': 1.0, 'Learning time': 2.36, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.300536, 'parameter': {'Recall': 1.0, 'Learning time': 1.277, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.326403, 'AUC ROC': 0.906977, 'Inference time': 0.949}, 'AUC ROC': 0.906977, 'Inference time': 0.626}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;true,false,true;ta(J, A, H), advisedby(G, K).;false;false
1;false,false,false;tempadvisedby(A, S).;false;false
1;false;advisedby(A, P), projectmember(Q, P).;false;true
1;true,false;ta(C, G, H), publication(I, G).;true;true
1;true,false,false;ta(C, L, M), advisedby(L, N).;false;false
1;false,false;advisedby(A, R).;false;true
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
2;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
2;false,false,true;projectmember(R, Q).;false;false
2;true,false;advisedby(A, H).;false;false
2;false;advisedby(A, I), publication(J, I).;true;true
2;false,false;tempadvisedby(A, Q).;true;false
2;false,true;advisedby(K, I), publication(J, K).;true;false
2;true;publication(C, F), tempadvisedby(G, F).;false;true
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;false,false,false;publication(T, A), advisedby(A, U).;false;false
3;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
3;true,false;ta(C, G, H), advisedby(G, I).;false;true
3;false;publication(L, A), tempadvisedby(A, M).;false;true
3;false,false;advisedby(A, N), tempadvisedby(P, N).;true;true
3;false,false,true;publication(Q, N), ta(R, P, S).;false;false
3;true;ta(C, E, D), advisedby(E, F).;false;true
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
4;true,false,true;tempadvisedby(H, G).;false;false
4;true,false;advisedby(A, G).;true;false
4;false;advisedby(A, I), publication(J, A).;true;true
4;false,false;tempadvisedby(A, L).;true;false
4;false,true;tempadvisedby(K, I), publication(J, K).;false;false
4;true;tempadvisedby(A, F), publication(C, F).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,true,false;projectmember(T, L), publication(U, A).;false;false
5;false,true,true;advisedby(R, L), ta(P, R, S).;false;false
5;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;true;false
5;false;advisedby(A, L), tempadvisedby(M, L).;true;false
5;false,true;publication(N, L), ta(P, M, Q).;true;true
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
6;false,true,true;ta(G, A, H).;false;false
6;false,false,true;tempadvisedby(J, I), publication(K, J).;false;false
6;false;tempadvisedby(A, E), publication(F, A).;true;true
6;false,false;tempadvisedby(A, I).;true;true
6;false,true;publication(F, E).;true;false
6;false,false,false;advisedby(A, L), publication(M, L).;false;false
7;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
7;false,true,false;ta(E, I, J), advisedby(I, K).;false;false
7;false,true,true;sameperson(A, G).;false;false
7;false,false,true;publication(N, L), ta(P, M, Q).;false;false
7;false;ta(E, A, F).;true;true
7;false,false;advisedby(A, L), tempadvisedby(M, L).;true;true
7;false,true;ta(E, G, F), advisedby(G, H).;true;true
7;false,false,false;publication(R, A).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;advisedby(N, M), publication(P, N).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q), advisedby(R, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
9;false,true,true;advisedby(I, G), ta(J, I, K).;false;false
9;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
9;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;false;advisedby(A, G), publication(H, A).;true;true
9;false,false;tempadvisedby(A, L).;true;true
9;false,true;publication(H, G).;true;false
9;true;publication(E, F), professor(F).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(A, E), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(E, D) )
%   | then return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.18192146118801372;  // std dev = 0,637, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.15924596236498129;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.45485606368381726;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10355270510823433;  // std dev = 0,485, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.15193010576791544;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(A, E), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3231183873827137;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.13337142515306893;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25681366951537243;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then if ( movie(C, D) )
%   | then return -0.11869527037196823;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21091652686038254;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then return 0.03555803631136589;  // std dev = 0,285, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.317152
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.788 seconds
Total inference time: 0.846 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(A, E), movie(C, E)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,false,false': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'false': 'movie(E, F)', 'false,true': 'workedunder(F, G)'}, {'true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(E, D)'}, {'true,true': [0.668, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.637, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,false,false': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.485, 2, 2]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E), movie(F, A)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), movie(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 2], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'true': 'movie(C, D)', 'false': 'workedunder(A, E), movie(F, E)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)'}, {'true,true': [0.285, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.25, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.11145008534151418, nan], 'true': [0.11145008534151418, nan]}, {'': [0.10130960288467858, nan]}, {'': [0.09428032459930984, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.058862327373501014, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.020274322310790252, nan], 'true': [0.020274322310790252, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
1;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
4;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
6;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
7;;genre(A, B) :- workedunder(A, C), movie(D, A).;true;true
8;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306709
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.742 seconds
Total inference time: 0.552 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:43:11
{'Recall': 1.0, 'Learning time': 1.53, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.306709, 'parameter': {'Recall': 1.0, 'Learning time': 0.788, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.317152, 'AUC ROC': 0.9, 'Inference time': 0.846}, 'AUC ROC': 0.9, 'Inference time': 0.552}


