Starting experiment #2 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, I, K) )
%   | | | then return 0.4071685429426485;  // std dev = 3,554, 51,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, L) )
%   | | then if ( tempadvisedby(M, L), publication(N, M) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41134042446121344;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(P, A) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F) )
%   | then return 0.24415759818152227;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.14573025403358983;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.38382549212882794;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.41642849982537694;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.31201240418820314;  // std dev = 4,662, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, P) )
%   | | then if ( tempadvisedby(Q, P), publication(R, Q) )
%   | | | then return 0.24811816884741297;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3535696551594697;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.26147489333905416;  // std dev = 0,496, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.25343346894464436;  // std dev = 0,496, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.18800887543860748;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.31054658910299116;  // std dev = 1,469, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14147733594084333;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.1967692213912891;  // std dev = 0,488, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, N) )
%   | | then if ( publication(P, A), tempadvisedby(Q, N) )
%   | | | then return 0.2511333555534054;  // std dev = 2,827, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.31985525460711445;  // std dev = 3,637, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tempadvisedby(A, R) )
%   | | | then return 0.2901574191657108;  // std dev = 2,803, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.18925198196127;  // std dev = 1,704, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.06623286327163376;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.17640464613217868;  // std dev = 0,496, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( tempadvisedby(I, G) )
%   | | then if ( publication(H, I) )
%   | | | then return 0.029621801406199372;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2190353464678301;  // std dev = 2,868, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3352650619357443;  // std dev = 0,475, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J), advisedby(K, J) )
%   | | then if ( ta(L, A, M), ta(N, K, M) )
%   | | | then return 0.13578792217141145;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.23846494308386088;  // std dev = 3,498, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, P), publication(Q, P) )
%   | | | then return 0.2142635936350777;  // std dev = 4,182, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.16547178614983726;  // std dev = 3,271, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F) )
%   | then if ( tempadvisedby(G, F) )
%   | | then if ( ta(H, G, E) )
%   | | | then return 0.20141859684234564;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12621005482704623;  // std dev = 2,616, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return 0.02813698164890524;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(C, I), tempadvisedby(J, I) )
%   | | then return 0.11979292584791328;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.33384609743692756;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(K, A), advisedby(A, L) )
%   | then return 0.19125811924857933;  // std dev = 0,493, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( tempadvisedby(A, M), projectmember(N, M) )
%   | | then return 0.24353375750140485;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(A, P), publication(Q, A) )
%   | | | then return 0.10481001929570333;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.15904756095097494;  // std dev = 6,364, 165,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=83 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then if ( tempadvisedby(G, F), ta(C, G, H) )
%   | | | then return 0.05636187187387807;  // std dev = 1,555, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12115719112929868;  // std dev = 4,135, 70,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | else return 0.40921491511157787;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.08935679983635879;  // std dev = 0,494, 51,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   else if ( advisedby(A, I), tempadvisedby(J, I) )
%   | then if ( publication(K, I), ta(L, J, M) )
%   | | then if ( publication(K, A), publication(K, J) )
%   | | | then return -0.01899833117992981;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18870614311735895;  // std dev = 2,650, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( ta(N, J, P) )
%   | | | then return 0.01192842561209756;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08684011700916071;  // std dev = 2,726, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else return 0.14500676955289163;  // std dev = 0,493, 76,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then return 0.015464750533215235;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.0961813052053696;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tempadvisedby(A, E), advisedby(F, E) )
%   | then if ( ta(G, F, H), ta(G, A, I) )
%   | | then return 0.024693848780239964;  // std dev = 0,496, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(J, F), ta(K, F, L) )
%   | | | then return 0.16954588580404426;  // std dev = 2,351, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.07963304108584326;  // std dev = 2,435, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( publication(M, A) )
%   | | then if ( advisedby(A, N), publication(M, N) )
%   | | | then return 0.08102101729383723;  // std dev = 4,164, 71,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.14568052845013651;  // std dev = 2,707, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | else if ( advisedby(A, P), tempadvisedby(Q, P) )
%   | | | then return 0.10319356647814316;  // std dev = 3,812, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.06616542021263959;  // std dev = 3,528, 51,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | then return 0.0789293021767297;  // std dev = 0,482, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( publication(C, I), tempadvisedby(I, J) )
%   | | then return 0.12345387118194584;  // std dev = 1,213, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( advisedby(A, K), tempadvisedby(L, K) )
%   | | | then return 0.04362965773744935;  // std dev = 2,266, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 8.66428961891219E-4;  // std dev = 1,536, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( advisedby(A, M) )
%   | then if ( advisedby(N, M), publication(P, N) )
%   | | then if ( ta(Q, N, R), publication(S, M) )
%   | | | then return 0.09273070126555817;  // std dev = 3,826, 60,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return 0.05156487374088979;  // std dev = 3,761, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return 0.11984062192929;  // std dev = 0,486, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | else if ( tempadvisedby(A, T) )
%   | | then return 0.07904206174326238;  // std dev = 0,491, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else return 0.0384843953725224;  // std dev = 0,490, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), professor(F) )
%   | then return 0.03375785900387568;  // std dev = 0,492, 42,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else return 0.07968357388888131;  // std dev = 0,478, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( tempadvisedby(I, G) )
%   | | then if ( publication(J, I) )
%   | | | then return 0.09061030365181094;  // std dev = 1,765, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.02105136953343544;  // std dev = 2,393, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0.13521343018347753;  // std dev = 0,473, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, K) )
%   | | then if ( projectmember(L, K) )
%   | | | then return 0.11768459686035504;  // std dev = 1,055, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05505253142216502;  // std dev = 3,907, 63,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | else if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | | then return 0.056987473034732485;  // std dev = 3,809, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.0347898788223569;  // std dev = 3,467, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.4916573356599443;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.021206310625144657;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( advisedby(A, G), ta(H, A, I) )
%   | then if ( advisedby(J, G), publication(K, J) )
%   | | then if ( publication(K, G), ta(L, J, M) )
%   | | | then return 0.06219226467415085;  // std dev = 3,229, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.04376069934088696;  // std dev = 2,674, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.10403156655980672;  // std dev = 1,082, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tempadvisedby(A, N), publication(P, A) )
%   | | then if ( publication(P, N) )
%   | | | then return -0.017689226321215848;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04254357603416627;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(Q, A) )
%   | | | then return 0.061571558075898244;  // std dev = 3,722, 58,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.041231896328387835;  // std dev = 5,312, 116,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=59 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;tempadvisedby(A, L).;true;true
0;true;advisedby(A, F), publication(E, F).;false;false
0;false,false,false;publication(P, A).;false;false
0;false,true,true;ta(J, I, K).;false;false
0;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, P).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
1;true,false;tempadvisedby(A, G), publication(E, G).;false;false
1;false,false,true;tempadvisedby(Q, P), publication(R, Q).;false;false
1;false,true;advisedby(J, H), publication(I, J).;true;false
1;false;advisedby(A, H), publication(I, H).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;advisedby(A, N).;true;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
3;true;tempadvisedby(A, F), publication(E, F).;false;false
3;false,false,false;advisedby(A, P), publication(Q, P).;false;false
3;false,true,true;publication(H, I).;false;false
3;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
3;false;advisedby(A, G), publication(H, A).;true;true
3;false,true;tempadvisedby(I, G).;true;false
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false;tempadvisedby(A, M), projectmember(N, M).;false;true
4;true;advisedby(A, F).;true;true
4;false,false,false;tempadvisedby(A, P), publication(Q, A).;false;false
4;true,true;tempadvisedby(G, F).;true;false
4;true,false;publication(C, I), tempadvisedby(J, I).;false;false
4;true,true,true;ta(H, G, E).;false;false
4;false;publication(K, A), advisedby(A, L).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;true;ta(C, E, D), advisedby(E, F).;true;false
5;false,true,true;publication(K, A), publication(K, J).;false;false
5;true,true;sameperson(A, E).;true;false
5;true,true,true;tempadvisedby(G, F), ta(C, G, H).;false;false
5;false,true,false;ta(N, J, P).;false;false
5;false;advisedby(A, I), tempadvisedby(J, I).;true;false
5;false,true;publication(K, I), ta(L, J, M).;true;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;publication(M, A).;true;true
6;true;publication(C, D).;false;false
6;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
6;false,false,true;advisedby(A, N), publication(M, N).;false;false
6;false,true,false;publication(J, F), ta(K, F, L).;false;false
6;false;tempadvisedby(A, E), advisedby(F, E).;true;true
6;false,true;ta(G, F, H), ta(G, A, I).;false;true
7;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
7;false,false;tempadvisedby(A, T).;false;false
7;true;ta(D, F, G), tempadvisedby(F, H).;false;true
7;false,true,true;ta(Q, N, R), publication(S, M).;false;false
7;true,false;publication(C, I), tempadvisedby(I, J).;false;true
7;true,false,false;advisedby(A, K), tempadvisedby(L, K).;false;false
7;false;advisedby(A, M).;true;true
7;false,true;advisedby(N, M), publication(P, N).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;tempadvisedby(A, K).;true;true
8;true;publication(E, F), professor(F).;false;false
8;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
8;false,true,true;publication(J, I).;false;false
8;false,false,true;projectmember(L, K).;false;false
8;false;advisedby(A, G), publication(H, A).;true;true
8;false,true;tempadvisedby(I, G).;true;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
9;false,false;tempadvisedby(A, N), publication(P, A).;true;true
9;true;advisedby(A, E), publication(F, E).;false;false
9;false,false,false;publication(Q, A).;false;false
9;false,true,true;publication(K, G), ta(L, J, M).;false;false
9;false,false,true;publication(P, N).;false;false
9;false;advisedby(A, G), ta(H, A, I).;true;true
9;false,true;advisedby(J, G), publication(K, J).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.2215250292763393;  // std dev = 1,566, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5002131558403854;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.13637023346435795;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.377690957815415;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I), workedunder(J, I) )
%   | | then return -0.12109080086507204;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.2937891549544798;  // std dev = 1,83e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10878311281985807;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09867673075523296;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(A, I), workedunder(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23670306731689034;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.19662176647325139;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09024135367407572;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1674002366234207;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G) )
%   | | | then return -0.08310158542572774;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.07698502820207676;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.14534772496134982;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.353262
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.613 seconds
Total inference time: 1.016 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [4.21e-08, 0, 11], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.566, 11, 11], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.0, 0, 11], 'false,false,true': [1.86e-09, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, I), workedunder(J, I)', 'true': 'workedunder(A, D)', 'false': 'workedunder(G, A), workedunder(A, H)', 'true,false': 'workedunder(C, E), workedunder(F, E)'}, {'false,false,true': [9.13e-09, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [1.49e-08, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)', 'true,true': 'workedunder(E, D)'}, {'true,true,true': [1.83e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(A, I), workedunder(H, I)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, F)'}, {'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.05e-08, 0, 11], 'false,true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(D, E)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [3.73e-09, 11, 0], 'true,true': [0.0, 0, 11], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G)', 'true': 'workedunder(C, D), actor(D)', 'false,false,true': 'workedunder(H, G)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'false,false,true,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [1.29e-08, 0, 11], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false,false': 'workedunder(J, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [3.73e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.27e-09, 0, 11], 'false,true': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true': [nan, -1.6148698540002277e-16], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 1.6148698540002277e-16], 'false': [2.523234146875356e-18, nan], 'true,false': [nan, 1.6148698540002277e-16]}, {'': [0.11145008534151403, nan]}, {'': [0.0, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'true': [nan, 0.0], 'false': [nan, 5.046468293750712e-18]}, {'': [2.0185873175002847e-17, 7.569702440626067e-18], 'false,false': [7.569702440626067e-18, nan], 'true': [nan, 2.0185873175002847e-17], 'false': [nan, 7.569702440626067e-18], 'true,false': [2.0185873175002847e-17, nan]}, {'': [0.04051610769524334, nan], 'true': [3.027880976250427e-17, 2.523234146875356e-18], 'true,true': [3.027880976250427e-17, nan]}, {'': [nan, 0.028119902238724556], 'false,false': [1.0092936587501423e-17, nan], 'false,false,true': [nan, 1.0092936587501423e-17], 'false': [0.0, 1.0092936587501423e-17], 'false,true': [nan, 0.0]}, {'': [-5.046468293750712e-18, 1.261617073437678e-18], 'true': [-5.046468293750712e-18, nan], 'false': [1.261617073437678e-18, nan], 'false,true': [nan, 1.261617073437678e-18]}, {'': [1.5139404881252134e-17, -2.523234146875356e-18], 'false,false': [-2.523234146875356e-18, nan], 'true': [nan, 1.5139404881252134e-17], 'false,false,true': [-2.523234146875356e-18, nan], 'false': [nan, -2.523234146875356e-18]}, {'': [1.261617073437678e-18, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'true': [1.261617073437678e-18, nan], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(C, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.005 seconds
Total inference time: 0.524 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:54:54
{'Inference time': 0.524, 'parameter': {'Inference time': 1.016, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'CLL': -0.353262, 'AUC PR': 0.8, 'Recall': 1.0, 'AUC ROC': 0.875, 'Learning time': 1.613}, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'CLL': -0.352709, 'AUC PR': 0.8, 'Recall': 1.0, 'AUC ROC': 0.875, 'Learning time': 2.618}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;tempadvisedby(A, L).;true;true
0;true;advisedby(A, F), publication(E, F).;false;false
0;false,false,false;publication(P, A).;false;false
0;false,true,true;ta(J, I, K).;false;false
0;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, P).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
1;true,false;tempadvisedby(A, G), publication(E, G).;false;false
1;false,false,true;tempadvisedby(Q, P), publication(R, Q).;false;false
1;false,true;advisedby(J, H), publication(I, J).;true;false
1;false;advisedby(A, H), publication(I, H).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;advisedby(A, N).;true;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
3;true;tempadvisedby(A, F), publication(E, F).;false;false
3;false,false,false;advisedby(A, P), publication(Q, P).;false;false
3;false,true,true;publication(H, I).;false;false
3;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
3;false;advisedby(A, G), publication(H, A).;true;true
3;false,true;tempadvisedby(I, G).;true;false
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false;tempadvisedby(A, M), projectmember(N, M).;false;true
4;true;advisedby(A, F).;true;true
4;false,false,false;tempadvisedby(A, P), publication(Q, A).;false;false
4;true,true;tempadvisedby(G, F).;true;false
4;true,false;publication(C, I), tempadvisedby(J, I).;false;false
4;true,true,true;ta(H, G, E).;false;false
4;false;publication(K, A), advisedby(A, L).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;true;ta(C, E, D), advisedby(E, F).;true;false
5;false,true,true;publication(K, A), publication(K, J).;false;false
5;true,true;sameperson(A, E).;true;false
5;true,true,true;tempadvisedby(G, F), ta(C, G, H).;false;false
5;false,true,false;ta(N, J, P).;false;false
5;false;advisedby(A, I), tempadvisedby(J, I).;true;false
5;false,true;publication(K, I), ta(L, J, M).;true;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;publication(M, A).;true;true
6;true;publication(C, D).;false;false
6;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
6;false,false,true;advisedby(A, N), publication(M, N).;false;false
6;false,true,false;publication(J, F), ta(K, F, L).;false;false
6;false;tempadvisedby(A, E), advisedby(F, E).;true;true
6;false,true;ta(G, F, H), ta(G, A, I).;false;true
7;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
7;false,false;tempadvisedby(A, T).;false;false
7;true;ta(D, F, G), tempadvisedby(F, H).;false;true
7;false,true,true;ta(Q, N, R), publication(S, M).;false;false
7;true,false;publication(C, I), tempadvisedby(I, J).;false;true
7;true,false,false;advisedby(A, K), tempadvisedby(L, K).;false;false
7;false;advisedby(A, M).;true;true
7;false,true;advisedby(N, M), publication(P, N).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;tempadvisedby(A, K).;true;true
8;true;publication(E, F), professor(F).;false;false
8;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
8;false,true,true;publication(J, I).;false;false
8;false,false,true;projectmember(L, K).;false;false
8;false;advisedby(A, G), publication(H, A).;true;true
8;false,true;tempadvisedby(I, G).;true;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
9;false,false;tempadvisedby(A, N), publication(P, A).;true;true
9;true;advisedby(A, E), publication(F, E).;false;false
9;false,false,false;publication(Q, A).;false;false
9;false,true,true;publication(K, G), ta(L, J, M).;false;false
9;false,false,true;publication(P, N).;false;false
9;false;advisedby(A, G), ta(H, A, I).;true;true
9;false,true;advisedby(J, G), publication(K, J).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22604488330790526;  // std dev = 1,802, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.45675549767123047;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.13690342743409517;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.3433050670813882;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I), workedunder(J, I) )
%   | | then return -0.12151573373300312;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.2626624083339769;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10912890140512534;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09896312453850857;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(A, I), workedunder(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20644729228399653;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.16645424554100566;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0904821518943658;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13712315817757154;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G) )
%   | | | then return -0.0833066861683618;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.07716169745973146;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.11495867585442715;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.324154
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.525 seconds
Total inference time: 0.859 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.961, 1, 12], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.802, 12, 12], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.961, 1, 12], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, I), workedunder(J, I)', 'true': 'workedunder(A, D)', 'false': 'workedunder(G, A), workedunder(A, H)', 'true,false': 'workedunder(C, E), workedunder(F, E)'}, {'false,false,true': [5.27e-09, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)', 'true,true': 'workedunder(E, D)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [9.13e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(A, I), workedunder(H, I)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, F)'}, {'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.961, 1, 12], 'false,true,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(D, E)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'true,true': [0.961, 1, 12], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G)', 'true': 'workedunder(C, D), actor(D)', 'false,false,true': 'workedunder(H, G)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'false,false,true,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false,false': 'workedunder(J, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [3.73e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'true': [nan, 0.07100591715976314], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 0.07100591715976333], 'false': [2.523234146875356e-18, nan], 'true,false': [nan, 0.07100591715976333]}, {'': [0.13533629047183346, nan]}, {'': [0.0710059171597634, -7.569702440626067e-18], 'false,false': [-7.569702440626067e-18, nan], 'true': [nan, 0.0710059171597634], 'false': [nan, -7.569702440626067e-18]}, {'': [0.07100591715976344, 2.523234146875356e-18], 'false,false': [2.523234146875356e-18, nan], 'true': [nan, 0.07100591715976344], 'false': [nan, 2.523234146875356e-18], 'true,false': [0.07100591715976344, nan]}, {'': [0.0727787524435609, nan], 'true': [0.07100591715976337, 7.569702440626067e-18], 'true,true': [0.07100591715976337, nan]}, {'': [nan, 0.061618482466101944], 'false,false': [0.0710059171597633, nan], 'false,false,true': [nan, 0.0710059171597633], 'false': [2.523234146875356e-18, 0.0710059171597633], 'false,true': [nan, 2.523234146875356e-18]}, {'': [0.07100591715976327, -3.784851220313033e-18], 'true': [0.07100591715976327, nan], 'false': [-3.784851220313033e-18, nan], 'false,true': [nan, -3.784851220313033e-18]}, {'': [0.07100591715976332, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.07100591715976332], 'false,false,true': [0.0, nan], 'false': [nan, 0.0]}, {'': [1.261617073437678e-18, 0.07100591715976332], 'false,false': [nan, 0.07100591715976332], 'true': [1.261617073437678e-18, nan], 'false': [nan, 0.07100591715976332], 'false,false,false': [0.07100591715976332, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(C, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.387 seconds
Total inference time: 0.591 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:54:59
{'Inference time': 0.591, 'parameter': {'Inference time': 0.859, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'CLL': -0.324154, 'AUC PR': 0.813953, 'Recall': 1.0, 'AUC ROC': 0.885714, 'Learning time': 1.525}, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'CLL': -0.320018, 'AUC PR': 0.813953, 'Recall': 1.0, 'AUC ROC': 0.885714, 'Learning time': 2.912}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;tempadvisedby(A, L).;true;true
0;true;advisedby(A, F), publication(E, F).;false;false
0;false,false,false;publication(P, A).;false;false
0;false,true,true;ta(J, I, K).;false;false
0;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, P).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
1;true,false;tempadvisedby(A, G), publication(E, G).;false;false
1;false,false,true;tempadvisedby(Q, P), publication(R, Q).;false;false
1;false,true;advisedby(J, H), publication(I, J).;true;false
1;false;advisedby(A, H), publication(I, H).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;advisedby(A, N).;true;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
3;true;tempadvisedby(A, F), publication(E, F).;false;false
3;false,false,false;advisedby(A, P), publication(Q, P).;false;false
3;false,true,true;publication(H, I).;false;false
3;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
3;false;advisedby(A, G), publication(H, A).;true;true
3;false,true;tempadvisedby(I, G).;true;false
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false;tempadvisedby(A, M), projectmember(N, M).;false;true
4;true;advisedby(A, F).;true;true
4;false,false,false;tempadvisedby(A, P), publication(Q, A).;false;false
4;true,true;tempadvisedby(G, F).;true;false
4;true,false;publication(C, I), tempadvisedby(J, I).;false;false
4;true,true,true;ta(H, G, E).;false;false
4;false;publication(K, A), advisedby(A, L).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;true;ta(C, E, D), advisedby(E, F).;true;false
5;false,true,true;publication(K, A), publication(K, J).;false;false
5;true,true;sameperson(A, E).;true;false
5;true,true,true;tempadvisedby(G, F), ta(C, G, H).;false;false
5;false,true,false;ta(N, J, P).;false;false
5;false;advisedby(A, I), tempadvisedby(J, I).;true;false
5;false,true;publication(K, I), ta(L, J, M).;true;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;publication(M, A).;true;true
6;true;publication(C, D).;false;false
6;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
6;false,false,true;advisedby(A, N), publication(M, N).;false;false
6;false,true,false;publication(J, F), ta(K, F, L).;false;false
6;false;tempadvisedby(A, E), advisedby(F, E).;true;true
6;false,true;ta(G, F, H), ta(G, A, I).;false;true
7;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
7;false,false;tempadvisedby(A, T).;false;false
7;true;ta(D, F, G), tempadvisedby(F, H).;false;true
7;false,true,true;ta(Q, N, R), publication(S, M).;false;false
7;true,false;publication(C, I), tempadvisedby(I, J).;false;true
7;true,false,false;advisedby(A, K), tempadvisedby(L, K).;false;false
7;false;advisedby(A, M).;true;true
7;false,true;advisedby(N, M), publication(P, N).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;tempadvisedby(A, K).;true;true
8;true;publication(E, F), professor(F).;false;false
8;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
8;false,true,true;publication(J, I).;false;false
8;false,false,true;projectmember(L, K).;false;false
8;false;advisedby(A, G), publication(H, A).;true;true
8;false,true;tempadvisedby(I, G).;true;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
9;false,false;tempadvisedby(A, N), publication(P, A).;true;true
9;true;advisedby(A, E), publication(F, E).;false;false
9;false,false,false;publication(Q, A).;false;false
9;false,true,true;publication(K, G), ta(L, J, M).;false;false
9;false,false,true;publication(P, N).;false;false
9;false;advisedby(A, G), ta(H, A, I).;true;true
9;false,true;advisedby(J, G), publication(K, J).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23976942954603;  // std dev = 2,646, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.34003398980794736;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.13853322814260766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.25734494947429226;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I), workedunder(J, I) )
%   | | then return -0.12281276528082398;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.19310437536269215;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11018309181253085;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09983535026065292;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(A, I), workedunder(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1453641726202693;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.11027533949535538;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09121487366250958;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08437381415289343;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G) )
%   | | | then return -0.0839303136814653;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.07769852348473513;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.06506478418020765;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.273738
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.035 seconds
Total inference time: 0.988 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [2.245, 7, 18], 'false,true,false': [5.27e-09, 11, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [2.646, 18, 18], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [2.245, 7, 18], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, I), workedunder(J, I)', 'true': 'workedunder(A, D)', 'false': 'workedunder(G, A), workedunder(A, H)', 'true,false': 'workedunder(C, E), workedunder(F, E)'}, {'false,false,true': [5.27e-09, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)', 'true,true': 'workedunder(E, D)'}, {'true,true,true': [2.245, 7, 18], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(A, I), workedunder(H, I)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, F)'}, {'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.245, 7, 18], 'false,true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(D, E)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'true,true': [2.245, 7, 18], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G)', 'true': 'workedunder(C, D), actor(D)', 'false,false,true': 'workedunder(H, G)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'false,false,true,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false,false': 'workedunder(J, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'true': [nan, 0.2015999999999996], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17]}, {'': [0.2016000000000001, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'true': [nan, 0.2016000000000001], 'false': [2.523234146875356e-18, nan], 'true,false': [nan, 0.2016000000000001]}, {'': [0.1945443430451362, nan]}, {'': [0.20160000000000022, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan], 'true': [nan, 0.20160000000000022], 'false': [nan, -5.046468293750712e-18]}, {'': [0.20159999999999997, 2.523234146875356e-18], 'false,false': [2.523234146875356e-18, nan], 'true': [nan, 0.20159999999999997], 'false': [nan, 2.523234146875356e-18], 'true,false': [0.20159999999999997, nan]}, {'': [0.1595180587423067, nan], 'true': [0.2016, 2.523234146875356e-18], 'true,true': [0.2016, nan]}, {'': [nan, 0.15275753985785792], 'false,false': [0.2016000000000001, nan], 'false,false,true': [nan, 0.2016000000000001], 'false': [-3.784851220313033e-18, 0.2016000000000001], 'false,true': [nan, -3.784851220313033e-18]}, {'': [0.20160000000000008, 2.523234146875356e-18], 'true': [0.20160000000000008, nan], 'false': [2.523234146875356e-18, nan], 'false,true': [nan, 2.523234146875356e-18]}, {'': [0.2016, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.2016], 'false,false,true': [0.0, nan], 'false': [nan, 0.0]}, {'': [-2.523234146875356e-18, 0.20159999999999997], 'false,false': [nan, 0.20159999999999997], 'true': [-2.523234146875356e-18, nan], 'false': [nan, 0.20159999999999997], 'false,false,false': [0.20159999999999997, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(C, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.359 seconds
Total inference time: 0.516 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:55:04
{'Inference time': 0.516, 'parameter': {'Inference time': 0.988, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'CLL': -0.273738, 'AUC PR': 0.935484, 'Recall': 1.0, 'AUC ROC': 0.965517, 'Learning time': 2.035}, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'CLL': -0.264596, 'AUC PR': 0.935484, 'Recall': 1.0, 'AUC ROC': 0.965517, 'Learning time': 3.394}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;tempadvisedby(A, L).;true;true
0;true;advisedby(A, F), publication(E, F).;false;false
0;false,false,false;publication(P, A).;false;false
0;false,true,true;ta(J, I, K).;false;false
0;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, P).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
1;true,false;tempadvisedby(A, G), publication(E, G).;false;false
1;false,false,true;tempadvisedby(Q, P), publication(R, Q).;false;false
1;false,true;advisedby(J, H), publication(I, J).;true;false
1;false;advisedby(A, H), publication(I, H).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;advisedby(A, N).;true;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
3;true;tempadvisedby(A, F), publication(E, F).;false;false
3;false,false,false;advisedby(A, P), publication(Q, P).;false;false
3;false,true,true;publication(H, I).;false;false
3;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
3;false;advisedby(A, G), publication(H, A).;true;true
3;false,true;tempadvisedby(I, G).;true;false
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false;tempadvisedby(A, M), projectmember(N, M).;false;true
4;true;advisedby(A, F).;true;true
4;false,false,false;tempadvisedby(A, P), publication(Q, A).;false;false
4;true,true;tempadvisedby(G, F).;true;false
4;true,false;publication(C, I), tempadvisedby(J, I).;false;false
4;true,true,true;ta(H, G, E).;false;false
4;false;publication(K, A), advisedby(A, L).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;true;ta(C, E, D), advisedby(E, F).;true;false
5;false,true,true;publication(K, A), publication(K, J).;false;false
5;true,true;sameperson(A, E).;true;false
5;true,true,true;tempadvisedby(G, F), ta(C, G, H).;false;false
5;false,true,false;ta(N, J, P).;false;false
5;false;advisedby(A, I), tempadvisedby(J, I).;true;false
5;false,true;publication(K, I), ta(L, J, M).;true;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;publication(M, A).;true;true
6;true;publication(C, D).;false;false
6;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
6;false,false,true;advisedby(A, N), publication(M, N).;false;false
6;false,true,false;publication(J, F), ta(K, F, L).;false;false
6;false;tempadvisedby(A, E), advisedby(F, E).;true;true
6;false,true;ta(G, F, H), ta(G, A, I).;false;true
7;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
7;false,false;tempadvisedby(A, T).;false;false
7;true;ta(D, F, G), tempadvisedby(F, H).;false;true
7;false,true,true;ta(Q, N, R), publication(S, M).;false;false
7;true,false;publication(C, I), tempadvisedby(I, J).;false;true
7;true,false,false;advisedby(A, K), tempadvisedby(L, K).;false;false
7;false;advisedby(A, M).;true;true
7;false,true;advisedby(N, M), publication(P, N).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;tempadvisedby(A, K).;true;true
8;true;publication(E, F), professor(F).;false;false
8;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
8;false,true,true;publication(J, I).;false;false
8;false,false,true;projectmember(L, K).;false;false
8;false;advisedby(A, G), publication(H, A).;true;true
8;false,true;tempadvisedby(I, G).;true;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
9;false,false;tempadvisedby(A, N), publication(P, A).;true;true
9;true;advisedby(A, E), publication(F, E).;false;false
9;false,false,false;publication(Q, A).;false;false
9;false,true,true;publication(K, G), ta(L, J, M).;false;false
9;false,false,true;publication(P, N).;false;false
9;false;advisedby(A, G), ta(H, A, I).;true;true
9;false,true;advisedby(J, G), publication(K, J).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23409923944267316;  // std dev = 1,173, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.38655270713914897;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.13785792350709075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.2907959857459462;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I), workedunder(J, I) )
%   | | then return -0.12227568030698387;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.21882075071123416;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1097467955537839;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09947452584816373;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(A, I), workedunder(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1666914575795228;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.12890794473519335;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09091187638483685;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10110607749039531;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G) )
%   | | | then return -0.08367251524149187;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.07747667185527354;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.08026602310343707;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.307733
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.164 seconds
Total inference time: 1.024 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.894, 1, 4], 'false,true,false': [0.0, 3, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.173, 4, 4], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.894, 1, 4], 'false,false,true': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, I), workedunder(J, I)', 'true': 'workedunder(A, D)', 'false': 'workedunder(G, A), workedunder(A, H)', 'true,false': 'workedunder(C, E), workedunder(F, E)'}, {'false,false,true': [2.63e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(C, A)', 'true,true': 'workedunder(E, D)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [2.63e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(A, I), workedunder(H, I)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, F)'}, {'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.894, 1, 4], 'false,true,false': [2.63e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(D, E)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'true,true': [0.894, 1, 4], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G)', 'true': 'workedunder(C, D), actor(D)', 'false,false,true': 'workedunder(H, G)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'false,false,true,true': [2.63e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false,false': 'workedunder(J, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}]]
[{'': [0.15999999999999986, 0.0], 'true': [nan, 0.15999999999999986], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.16, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.16], 'false': [0.0, nan], 'true,false': [nan, 0.16]}, {'': [0.17200226808539504, nan]}, {'': [0.15999999999999998, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.15999999999999998], 'false': [nan, 0.0]}, {'': [0.15999999999999998, 2.3129646346357427e-18], 'false,false': [2.3129646346357427e-18, nan], 'true': [nan, 0.15999999999999998], 'false': [nan, 2.3129646346357427e-18], 'true,false': [0.15999999999999998, nan]}, {'': [0.1253023357324878, nan], 'true': [0.15999999999999998, 2.3129646346357427e-18], 'true,true': [0.15999999999999998, nan]}, {'': [nan, 0.1166041400157877], 'false,false': [0.16, nan], 'false,false,true': [nan, 0.16], 'false': [2.3129646346357427e-18, 0.16], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.15999999999999998, -1.1564823173178713e-18], 'true': [0.15999999999999998, nan], 'false': [-1.1564823173178713e-18, nan], 'false,true': [nan, -1.1564823173178713e-18]}, {'': [0.16, 2.3129646346357427e-18], 'false,false': [2.3129646346357427e-18, nan], 'true': [nan, 0.16], 'false,false,true': [2.3129646346357427e-18, nan], 'false': [nan, 2.3129646346357427e-18]}, {'': [0.0, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'true': [0.0, nan], 'false': [nan, 0.15999999999999998], 'false,false,false': [0.15999999999999998, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(C, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.879 seconds
Total inference time: 0.649 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:55:08
{'Inference time': 0.649, 'parameter': {'Inference time': 1.024, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'CLL': -0.307733, 'AUC PR': 0.843137, 'Recall': 1.0, 'AUC ROC': 0.906977, 'Learning time': 1.164}, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'CLL': -0.300536, 'AUC PR': 0.843137, 'Recall': 1.0, 'AUC ROC': 0.906977, 'Learning time': 2.043}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,false;tempadvisedby(A, L).;true;true
0;true;advisedby(A, F), publication(E, F).;false;false
0;false,false,false;publication(P, A).;false;false
0;false,true,true;ta(J, I, K).;false;false
0;false,false,true;tempadvisedby(M, L), publication(N, M).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
1;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
1;false,false;tempadvisedby(A, P).;true;false
1;true;advisedby(A, F).;false;true
1;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
1;true,false;tempadvisedby(A, G), publication(E, G).;false;false
1;false,false,true;tempadvisedby(Q, P), publication(R, Q).;false;false
1;false,true;advisedby(J, H), publication(I, J).;true;false
1;false;advisedby(A, H), publication(I, H).;true;true
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;false,false;advisedby(A, N).;true;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
2;false;advisedby(A, L), projectmember(M, L).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
3;true;tempadvisedby(A, F), publication(E, F).;false;false
3;false,false,false;advisedby(A, P), publication(Q, P).;false;false
3;false,true,true;publication(H, I).;false;false
3;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
3;false;advisedby(A, G), publication(H, A).;true;true
3;false,true;tempadvisedby(I, G).;true;false
4;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
4;false,false;tempadvisedby(A, M), projectmember(N, M).;false;true
4;true;advisedby(A, F).;true;true
4;false,false,false;tempadvisedby(A, P), publication(Q, A).;false;false
4;true,true;tempadvisedby(G, F).;true;false
4;true,false;publication(C, I), tempadvisedby(J, I).;false;false
4;true,true,true;ta(H, G, E).;false;false
4;false;publication(K, A), advisedby(A, L).;false;true
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;true;ta(C, E, D), advisedby(E, F).;true;false
5;false,true,true;publication(K, A), publication(K, J).;false;false
5;true,true;sameperson(A, E).;true;false
5;true,true,true;tempadvisedby(G, F), ta(C, G, H).;false;false
5;false,true,false;ta(N, J, P).;false;false
5;false;advisedby(A, I), tempadvisedby(J, I).;true;false
5;false,true;publication(K, I), ta(L, J, M).;true;true
6;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
6;false,false;publication(M, A).;true;true
6;true;publication(C, D).;false;false
6;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
6;false,false,true;advisedby(A, N), publication(M, N).;false;false
6;false,true,false;publication(J, F), ta(K, F, L).;false;false
6;false;tempadvisedby(A, E), advisedby(F, E).;true;true
6;false,true;ta(G, F, H), ta(G, A, I).;false;true
7;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
7;false,false;tempadvisedby(A, T).;false;false
7;true;ta(D, F, G), tempadvisedby(F, H).;false;true
7;false,true,true;ta(Q, N, R), publication(S, M).;false;false
7;true,false;publication(C, I), tempadvisedby(I, J).;false;true
7;true,false,false;advisedby(A, K), tempadvisedby(L, K).;false;false
7;false;advisedby(A, M).;true;true
7;false,true;advisedby(N, M), publication(P, N).;true;false
8;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;false,false;tempadvisedby(A, K).;true;true
8;true;publication(E, F), professor(F).;false;false
8;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
8;false,true,true;publication(J, I).;false;false
8;false,false,true;projectmember(L, K).;false;false
8;false;advisedby(A, G), publication(H, A).;true;true
8;false,true;tempadvisedby(I, G).;true;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
9;false,false;tempadvisedby(A, N), publication(P, A).;true;true
9;true;advisedby(A, E), publication(F, E).;false;false
9;false,false,false;publication(Q, A).;false;false
9;false,true,true;publication(K, G), ta(L, J, M).;false;false
9;false,false,true;publication(P, N).;false;false
9;false;advisedby(A, G), ta(H, A, I).;true;true
9;false,true;advisedby(J, G), publication(K, J).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5002131558403854;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.13637023346435792;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(C, E), workedunder(F, E) )
%   | | then return 0.37769095781541506;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I), workedunder(J, I) )
%   | | then return -0.12109080086507203;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.0925030210673109;  // std dev = 0,403, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1180810726871328;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(A, I), workedunder(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2749693064602384;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.22364953150626432;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then if ( workedunder(G, F), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10632803812788187;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), actor(D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18722041466032546;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then if ( workedunder(H, G) )
%   | | | then return -0.0966391804806873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.08852517668472613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0.16038129881197583;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306096
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.97 seconds
Total inference time: 1.508 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'true': 'workedunder(A, D)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'false': 'workedunder(A, F), workedunder(G, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [0.668, 2, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'true,false': [0.0, 0, 2], 'false,false,true': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, I), workedunder(J, I)', 'true': 'workedunder(A, D)', 'false': 'workedunder(G, A), workedunder(A, H)', 'true,false': 'workedunder(C, E), workedunder(F, E)'}, {'false,false,true': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(A, C)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.403, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(A, I), workedunder(H, I)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, F)'}, {'true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(D, E)', 'false': 'workedunder(A, F)', 'false,true': 'workedunder(G, F), workedunder(H, G)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(A, G)', 'true': 'workedunder(C, D), actor(D)', 'false,false,true': 'workedunder(H, G)', 'false': 'workedunder(A, E), workedunder(F, A)'}, {'false,false,true,true': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false,false': 'workedunder(J, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.0], 'false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.11145008534151418, nan]}, {'': [0.0, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.0, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.04051610769524332, nan], 'true': [nan, 0.04051610769524332]}, {'': [nan, 0.038622150136973066], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'false': [0.0, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.0], 'false,false,true': [0.0, nan], 'false': [nan, 0.0]}, {'': [0.0, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(C, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(C, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299128
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.714 seconds
Total inference time: 0.631 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:55:13
{'Inference time': 0.631, 'parameter': {'Inference time': 1.508, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'CLL': -0.306096, 'AUC PR': 0.833333, 'Recall': 1.0, 'AUC ROC': 0.9, 'Learning time': 0.97}, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'CLL': -0.299128, 'AUC PR': 0.833333, 'Recall': 1.0, 'AUC ROC': 0.9, 'Learning time': 1.684}


