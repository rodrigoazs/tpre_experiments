Starting experiment #5 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.28314893509951233;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then if ( sameperson(A, G) )
%   | | | then return 0.38314893509951164;  // std dev = 3,158, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.2905813675319448;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( tempadvisedby(A, N), publication(P, A) )
%   | | then return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( advisedby(A, Q), tempadvisedby(R, Q) )
%   | | | then return 0.3766674536180297;  // std dev = 3,672, 54,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.40887357278067166;  // std dev = 4,132, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.2450743157714587;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.35519707099132014;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( tempadvisedby(A, I), advisedby(J, I) )
%   | | | then return 0.2859513040722538;  // std dev = 2,909, 34,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.22953575029412626;  // std dev = 2,028, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( advisedby(A, K), projectmember(L, K) )
%   | then return 0.24811816884741297;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, M) )
%   | | then if ( publication(N, A), tempadvisedby(P, M) )
%   | | | then return 0.3058603229927818;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.3769191004505966;  // std dev = 3,633, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tempadvisedby(A, Q) )
%   | | | then return 0.3361289822110313;  // std dev = 2,818, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.21743867661951122;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.09392021521268475;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then return 0.2060467463462682;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else return 0.30687147445501184;  // std dev = 0,490, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.3583911141737438;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.25026372451551226;  // std dev = 4,661, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.3868458565108436;  // std dev = 0,480, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.1645287305228247;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( tempadvisedby(A, R) )
%   | | | then return 0.2717573472668095;  // std dev = 4,094, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | | else return 0.22997719586450727;  // std dev = 2,807, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), tempadvisedby(G, F) )
%   | then if ( ta(H, G, E), advisedby(A, F) )
%   | | then return 0.2437840326644836;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.14620299252515;  // std dev = 0,491, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else return 0.2252880707288985;  // std dev = 0,489, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(I, A), advisedby(A, J) )
%   | then if ( tempadvisedby(K, J) )
%   | | then if ( publication(I, K) )
%   | | | then return 0.03749784621493324;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22491774073458426;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.328257962239354;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, L), projectmember(M, L) )
%   | | then return 0.3034195176812521;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( advisedby(A, N), publication(P, N) )
%   | | | then return 0.2145091106215794;  // std dev = 4,194, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.18791612454231962;  // std dev = 4,977, 101,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=48 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.04751410161262174;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(E, G), tempadvisedby(G, H) )
%   | | then if ( advisedby(A, H) )
%   | | | then return 0.11494572097901132;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3491537646375747;  // std dev = 0,837, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13237394980949962;  // std dev = 0,491, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   else if ( tempadvisedby(A, I), publication(J, A) )
%   | then return 0.10062266225944898;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( publication(K, A) )
%   | | then if ( advisedby(A, L), publication(K, L) )
%   | | | then return 0.16828493835646702;  // std dev = 3,223, 42,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.2582443021699287;  // std dev = 1,856, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( tempadvisedby(A, M) )
%   | | | then return 0.184695769517182;  // std dev = 3,866, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.14517321160528468;  // std dev = 5,081, 105,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=52 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then return 0.06909159494056816;  // std dev = 0,490, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( tempadvisedby(A, E) )
%   | then if ( tempadvisedby(F, E), ta(G, F, H) )
%   | | then if ( publication(I, F) )
%   | | | then return 0.02104917526227968;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15509076229265437;  // std dev = 2,872, 34,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | else if ( tempadvisedby(J, E), publication(K, J) )
%   | | | then return 0.10123850073666764;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2144701780577196;  // std dev = 1,748, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( advisedby(A, L), publication(M, L) )
%   | | then if ( advisedby(N, L), publication(M, N) )
%   | | | then return 0.11890263224167572;  // std dev = 5,727, 133,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=66 */
%   | | | else return 0.2073017197826838;  // std dev = 2,208, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( publication(P, A) )
%   | | | then return 0.1436786420450477;  // std dev = 2,136, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.06954942916853056;  // std dev = 2,850, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then if ( publication(D, C) )
%   | then return 0.02968416986660699;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.10073049371892918;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( ta(E, A, F), advisedby(A, G) )
%   | then if ( advisedby(H, G), publication(I, H) )
%   | | then if ( ta(J, H, K), publication(I, G) )
%   | | | then return 0.1146245156477593;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.015293292939134678;  // std dev = 2,735, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0.2198346041831661;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(L, A) )
%   | | then if ( publication(L, M), advisedby(N, M) )
%   | | | then return 0.10629148251374232;  // std dev = 3,615, 53,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.20018413562566023;  // std dev = 1,372, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.10812052931205955;  // std dev = 3,852, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.07872459888732043;  // std dev = 3,984, 65,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.07627587820406545;  // std dev = 0,490, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else return 0.04580673760641699;  // std dev = 0,495, 51,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( tempadvisedby(I, G), ta(J, I, K) )
%   | | then if ( publication(H, I), publication(H, A) )
%   | | | then return -0.05930593572365609;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1467674568577693;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( publication(H, L), tempadvisedby(M, L) )
%   | | | then return 0.07444610436614497;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return -0.15611658605060585;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, N), projectmember(P, N) )
%   | | then return 0.016453138903329105;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( tempadvisedby(A, Q), publication(R, A) )
%   | | | then return 0.05047984291573361;  // std dev = 1,308, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08514204019482256;  // std dev = 3,310, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.10663529779602524;  // std dev = 0,478, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( advisedby(A, E), ta(F, A, G) )
%   | then if ( tempadvisedby(H, E), publication(I, E) )
%   | | then if ( publication(I, A), ta(J, H, G) )
%   | | | then return 0.09381738593978395;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.039342828141859916;  // std dev = 3,452, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | else if ( publication(K, A) )
%   | | | then return -0.04213543428910114;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.037139420671345014;  // std dev = 1,859, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( advisedby(A, L), publication(M, A) )
%   | | then if ( tempadvisedby(N, L) )
%   | | | then return 0.04004965852537551;  // std dev = 2,813, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.13317517336274448;  // std dev = 1,926, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( advisedby(A, P), tempadvisedby(Q, P) )
%   | | | then return 0.07692651023416343;  // std dev = 2,333, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.0487919403972137;  // std dev = 5,287, 115,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=57 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.08124873099252666;  // std dev = 0,477, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F), advisedby(A, G) )
%   | then if ( tempadvisedby(H, G), ta(E, H, I) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.02584712740855619;  // std dev = 1,306, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1163640867073447;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(K, G), publication(L, G) )
%   | | | then return 0.045630798056647486;  // std dev = 3,314, 45,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.004349401098096851;  // std dev = 2,340, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( advisedby(A, M), publication(N, A) )
%   | | then if ( publication(N, M) )
%   | | | then return 0.039669523916650386;  // std dev = 3,202, 42,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.14308410988397716;  // std dev = 1,167, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.04817629371714679;  // std dev = 4,208, 73,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.031089978694638656;  // std dev = 3,961, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D).;true;true
0;true,false,true;sameperson(A, G).;false;false
0;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
0;false;advisedby(A, L), projectmember(M, L).;false;true
0;true,false;ta(C, G, D), advisedby(G, H).;true;true
0;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
0;false,false;tempadvisedby(A, N), publication(P, A).;false;true
0;true;publication(E, A), advisedby(A, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;tempadvisedby(A, Q).;false;false
1;true,false,false;tempadvisedby(A, I), advisedby(J, I).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, K), projectmember(L, K).;false;true
1;false,false;advisedby(A, M).;true;true
1;false,false,true;publication(N, A), tempadvisedby(P, M).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;advisedby(A, G).;false;false
2;false;advisedby(A, H), publication(I, H).;true;true
2;false,false;advisedby(A, P), projectmember(Q, P).;false;true
2;false,true;advisedby(J, H), publication(I, J).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;true
3;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
3;false,true,true;publication(I, K).;false;false
3;true,true;ta(H, G, E), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, N), publication(P, N).;false;false
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;false,true;tempadvisedby(K, J).;true;false
3;true;publication(C, F), tempadvisedby(G, F).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;true,false,true;advisedby(A, H).;false;false
4;false,false,false;tempadvisedby(A, M).;false;false
4;true,false;publication(E, G), tempadvisedby(G, H).;true;false
4;false;tempadvisedby(A, I), publication(J, A).;false;true
4;false,false;publication(K, A).;true;true
4;false,false,true;advisedby(A, L), publication(K, L).;false;false
4;true;tempadvisedby(A, F), publication(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
5;false,true,false;tempadvisedby(J, E), publication(K, J).;false;false
5;false,true,true;publication(I, F).;false;false
5;false,false,true;advisedby(N, L), publication(M, N).;false;false
5;false;tempadvisedby(A, E).;true;true
5;false,false;advisedby(A, L), publication(M, L).;true;true
5;false,true;tempadvisedby(F, E), ta(G, F, H).;true;true
5;false,false,false;publication(P, A).;false;false
6;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
6;false,true,true;ta(J, H, K), publication(I, G).;false;false
6;false,false,true;publication(L, M), advisedby(N, M).;false;false
6;false,false,false;tempadvisedby(A, P).;false;false
6;false;ta(E, A, F), advisedby(A, G).;true;true
6;false,false;publication(L, A).;true;true
6;false,true;advisedby(H, G), publication(I, H).;true;false
6;true;publication(D, C).;false;false
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;publication(H, L), tempadvisedby(M, L).;false;false
7;false,true,true;publication(H, I), publication(H, A).;false;false
7;false,false,false;tempadvisedby(A, Q), publication(R, A).;false;false
7;false;advisedby(A, G), publication(H, G).;true;true
7;false,false;advisedby(A, N), projectmember(P, N).;false;true
7;false,true;tempadvisedby(I, G), ta(J, I, K).;true;true
7;true;ta(C, E, D), advisedby(E, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
8;false,true,false;publication(K, A).;false;false
8;false,true,true;publication(I, A), ta(J, H, G).;false;false
8;false,false,true;tempadvisedby(N, L).;false;false
8;false;advisedby(A, E), ta(F, A, G).;true;true
8;false,false;advisedby(A, L), publication(M, A).;true;true
8;false,true;tempadvisedby(H, E), publication(I, E).;true;true
8;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
9;false,true,false;tempadvisedby(K, G), publication(L, G).;false;false
9;false,true,true;publication(J, A).;false;false
9;false,false,true;publication(N, M).;false;false
9;false;ta(E, A, F), advisedby(A, G).;true;true
9;false,false;advisedby(A, M), publication(N, A).;true;true
9;false,true;tempadvisedby(H, G), ta(E, H, I).;true;true
9;false,false,false;tempadvisedby(A, P).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, C), workedunder(E, F) )
%   | | then if ( workedunder(A, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then if ( workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05192513599097015;  // std dev = 0,587, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07685001471586363;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16965570496360174;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07157218773227715;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14707549467295578;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.350817
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.873 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 11, 0], 'false,true,false': [0.0, 0, 11], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [4.21e-08, 0, 11], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(F, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.0, 0, 11], 'false,false,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(A, F), workedunder(A, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J), workedunder(J, K)'}, {'false,false,false,false': [4.21e-08, 0, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,true': 'workedunder(A, F)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(E, C), workedunder(E, F)', 'false': 'workedunder(A, G), workedunder(A, H)', 'false,false': 'workedunder(A, I)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(F, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.11e-08, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'true': 'workedunder(C, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F)', 'false,false,false': 'workedunder(A, G)'}, {'false,false,false,false': [0.0, 0, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.587, 11, 11]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.63e-09, 11, 0]}]]
[{'': [-1.0092936587501423e-17, -1.6148698540002277e-16], 'false': [-1.6148698540002277e-16, nan], 'false,true': [nan, -1.6148698540002277e-16]}, {'': [2.523234146875356e-18, 1.6148698540002277e-16], 'false': [1.6148698540002277e-16, nan]}, {'': [5.046468293750712e-18, -2.0185873175002846e-16], 'false,false,false': [nan, -2.0185873175002846e-16], 'true,false': [5.046468293750712e-18, nan], 'false': [nan, -2.0185873175002846e-16], 'false,false': [nan, -2.0185873175002846e-16], 'true': [nan, 5.046468293750712e-18]}, {'': [0.0, 1.6148698540002277e-16], 'true': [nan, 0.0], 'false': [nan, 1.6148698540002277e-16], 'false,false': [nan, 1.6148698540002277e-16], 'false,false,false': [nan, 1.6148698540002277e-16]}, {'': [0.0, -6.055761952500853e-17], 'true,false,true': [0.0, nan], 'false,false,false': [nan, -6.055761952500853e-17], 'true,false': [0.0, nan], 'false': [nan, -6.055761952500853e-17], 'false,false': [nan, -6.055761952500853e-17], 'true': [nan, 0.0]}, {'': [2.523234146875356e-18, 4.0371746350005693e-17], 'false': [nan, 4.0371746350005693e-17], 'false,false': [nan, 4.0371746350005693e-17], 'false,false,false': [nan, 4.0371746350005693e-17]}, {'': [0.0, -2.5232341468753557e-17], 'false,false,false': [nan, -2.5232341468753557e-17], 'false': [nan, -2.5232341468753557e-17], 'false,false': [nan, -2.5232341468753557e-17], 'true': [nan, 0.0]}, {'': [0.015667869803427634, nan]}, {'': [0.0, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [nan, -5.046468293750712e-18], 'false,false,false': [nan, -5.046468293750712e-18]}, {'': [6.30808536718839e-19, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
1;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, C).;true;true
3;;genre(A, B) :- workedunder(A, C).;true;true
4;;genre(A, B) :- workedunder(A, C).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
9;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.681 seconds
Total inference time: 0.396 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 04:37:13
{'Recall': 1.0, 'Learning time': 1.554, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.352709, 'parameter': {'Recall': 1.0, 'Learning time': 0.873, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.350817, 'AUC ROC': 0.875, 'Inference time': 0.728}, 'AUC ROC': 0.875, 'Inference time': 0.396}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D).;true;true
0;true,false,true;sameperson(A, G).;false;false
0;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
0;false;advisedby(A, L), projectmember(M, L).;false;true
0;true,false;ta(C, G, D), advisedby(G, H).;true;true
0;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
0;false,false;tempadvisedby(A, N), publication(P, A).;false;true
0;true;publication(E, A), advisedby(A, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;tempadvisedby(A, Q).;false;false
1;true,false,false;tempadvisedby(A, I), advisedby(J, I).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, K), projectmember(L, K).;false;true
1;false,false;advisedby(A, M).;true;true
1;false,false,true;publication(N, A), tempadvisedby(P, M).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;advisedby(A, G).;false;false
2;false;advisedby(A, H), publication(I, H).;true;true
2;false,false;advisedby(A, P), projectmember(Q, P).;false;true
2;false,true;advisedby(J, H), publication(I, J).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;true
3;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
3;false,true,true;publication(I, K).;false;false
3;true,true;ta(H, G, E), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, N), publication(P, N).;false;false
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;false,true;tempadvisedby(K, J).;true;false
3;true;publication(C, F), tempadvisedby(G, F).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;true,false,true;advisedby(A, H).;false;false
4;false,false,false;tempadvisedby(A, M).;false;false
4;true,false;publication(E, G), tempadvisedby(G, H).;true;false
4;false;tempadvisedby(A, I), publication(J, A).;false;true
4;false,false;publication(K, A).;true;true
4;false,false,true;advisedby(A, L), publication(K, L).;false;false
4;true;tempadvisedby(A, F), publication(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
5;false,true,false;tempadvisedby(J, E), publication(K, J).;false;false
5;false,true,true;publication(I, F).;false;false
5;false,false,true;advisedby(N, L), publication(M, N).;false;false
5;false;tempadvisedby(A, E).;true;true
5;false,false;advisedby(A, L), publication(M, L).;true;true
5;false,true;tempadvisedby(F, E), ta(G, F, H).;true;true
5;false,false,false;publication(P, A).;false;false
6;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
6;false,true,true;ta(J, H, K), publication(I, G).;false;false
6;false,false,true;publication(L, M), advisedby(N, M).;false;false
6;false,false,false;tempadvisedby(A, P).;false;false
6;false;ta(E, A, F), advisedby(A, G).;true;true
6;false,false;publication(L, A).;true;true
6;false,true;advisedby(H, G), publication(I, H).;true;false
6;true;publication(D, C).;false;false
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;publication(H, L), tempadvisedby(M, L).;false;false
7;false,true,true;publication(H, I), publication(H, A).;false;false
7;false,false,false;tempadvisedby(A, Q), publication(R, A).;false;false
7;false;advisedby(A, G), publication(H, G).;true;true
7;false,false;advisedby(A, N), projectmember(P, N).;false;true
7;false,true;tempadvisedby(I, G), ta(J, I, K).;true;true
7;true;ta(C, E, D), advisedby(E, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
8;false,true,false;publication(K, A).;false;false
8;false,true,true;publication(I, A), ta(J, H, G).;false;false
8;false,false,true;tempadvisedby(N, L).;false;false
8;false;advisedby(A, E), ta(F, A, G).;true;true
8;false,false;advisedby(A, L), publication(M, A).;true;true
8;false,true;tempadvisedby(H, E), publication(I, E).;true;true
8;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
9;false,true,false;tempadvisedby(K, G), publication(L, G).;false;false
9;false,true,true;publication(J, A).;false;false
9;false,false,true;publication(N, M).;false;false
9;false;ta(E, A, F), advisedby(A, G).;true;true
9;false,false;advisedby(A, M), publication(N, A).;true;true
9;false,true;tempadvisedby(H, G), ta(E, H, I).;true;true
9;false,false,false;tempadvisedby(A, P).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, C), workedunder(E, F) )
%   | | then if ( workedunder(A, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22699179224124724;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then if ( workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1812058810760637;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04662209259451402;  // std dev = 1,102, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07647463834591117;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14002446522884573;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07124543666332281;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1171796766891679;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.321934
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 0.714 seconds
Total inference time: 0.576 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 11, 0], 'false,true,false': [0.961, 1, 12], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.961, 1, 12], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(F, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(A, F), workedunder(A, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J), workedunder(J, K)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,true': 'workedunder(A, F)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(E, C), workedunder(E, F)', 'false': 'workedunder(A, G), workedunder(A, H)', 'false,false': 'workedunder(A, I)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(F, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'true': 'workedunder(C, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F)', 'false,false,false': 'workedunder(A, G)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.102, 12, 12]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [3.73e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}]]
[{'': [-1.0092936587501423e-17, 0.07100591715976314], 'false': [0.07100591715976314, nan], 'false,true': [nan, 0.07100591715976314]}, {'': [2.523234146875356e-18, 0.07100591715976333], 'false': [0.07100591715976333, nan]}, {'': [5.046468293750712e-18, 0.07100591715976351], 'true,false': [5.046468293750712e-18, nan], 'false,false,false': [nan, 0.07100591715976351], 'false': [nan, 0.07100591715976351], 'false,false': [nan, 0.07100591715976351], 'true': [nan, 5.046468293750712e-18]}, {'': [0.0, 0.0710059171597632], 'true': [nan, 0.0], 'false': [nan, 0.0710059171597632], 'false,false': [nan, 0.0710059171597632], 'false,false,false': [nan, 0.0710059171597632]}, {'': [0.0, 0.07100591715976336], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false,false,false': [nan, 0.07100591715976336], 'false': [nan, 0.07100591715976336], 'false,false': [nan, 0.07100591715976336], 'true': [nan, 0.0]}, {'': [2.523234146875356e-18, 0.07100591715976326], 'false': [nan, 0.07100591715976326], 'false,false': [nan, 0.07100591715976326], 'false,false,false': [nan, 0.07100591715976326]}, {'': [0.0, 0.07100591715976336], 'true': [nan, 0.0], 'false': [nan, 0.07100591715976336], 'false,false': [nan, 0.07100591715976336], 'false,false,false': [nan, 0.07100591715976336]}, {'': [0.05061942701579469, nan]}, {'': [1.261617073437678e-18, 0.07100591715976329], 'false': [nan, 0.07100591715976329], 'false,false': [nan, 0.07100591715976329], 'false,false,false': [nan, 0.07100591715976329]}, {'': [-6.30808536718839e-19, 0.0710059171597633], 'false': [nan, 0.0710059171597633], 'false,false': [nan, 0.0710059171597633], 'false,false,false': [nan, 0.0710059171597633]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
1;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, C).;true;true
3;;genre(A, B) :- workedunder(A, C).;true;true
4;;genre(A, B) :- workedunder(A, C).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
9;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 0.909 seconds
Total inference time: 0.508 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 04:37:16
{'Recall': 1.0, 'Learning time': 1.623, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.320018, 'parameter': {'Recall': 1.0, 'Learning time': 0.714, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.321934, 'AUC ROC': 0.885714, 'Inference time': 0.576}, 'AUC ROC': 0.885714, 'Inference time': 0.508}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D).;true;true
0;true,false,true;sameperson(A, G).;false;false
0;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
0;false;advisedby(A, L), projectmember(M, L).;false;true
0;true,false;ta(C, G, D), advisedby(G, H).;true;true
0;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
0;false,false;tempadvisedby(A, N), publication(P, A).;false;true
0;true;publication(E, A), advisedby(A, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;tempadvisedby(A, Q).;false;false
1;true,false,false;tempadvisedby(A, I), advisedby(J, I).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, K), projectmember(L, K).;false;true
1;false,false;advisedby(A, M).;true;true
1;false,false,true;publication(N, A), tempadvisedby(P, M).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;advisedby(A, G).;false;false
2;false;advisedby(A, H), publication(I, H).;true;true
2;false,false;advisedby(A, P), projectmember(Q, P).;false;true
2;false,true;advisedby(J, H), publication(I, J).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;true
3;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
3;false,true,true;publication(I, K).;false;false
3;true,true;ta(H, G, E), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, N), publication(P, N).;false;false
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;false,true;tempadvisedby(K, J).;true;false
3;true;publication(C, F), tempadvisedby(G, F).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;true,false,true;advisedby(A, H).;false;false
4;false,false,false;tempadvisedby(A, M).;false;false
4;true,false;publication(E, G), tempadvisedby(G, H).;true;false
4;false;tempadvisedby(A, I), publication(J, A).;false;true
4;false,false;publication(K, A).;true;true
4;false,false,true;advisedby(A, L), publication(K, L).;false;false
4;true;tempadvisedby(A, F), publication(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
5;false,true,false;tempadvisedby(J, E), publication(K, J).;false;false
5;false,true,true;publication(I, F).;false;false
5;false,false,true;advisedby(N, L), publication(M, N).;false;false
5;false;tempadvisedby(A, E).;true;true
5;false,false;advisedby(A, L), publication(M, L).;true;true
5;false,true;tempadvisedby(F, E), ta(G, F, H).;true;true
5;false,false,false;publication(P, A).;false;false
6;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
6;false,true,true;ta(J, H, K), publication(I, G).;false;false
6;false,false,true;publication(L, M), advisedby(N, M).;false;false
6;false,false,false;tempadvisedby(A, P).;false;false
6;false;ta(E, A, F), advisedby(A, G).;true;true
6;false,false;publication(L, A).;true;true
6;false,true;advisedby(H, G), publication(I, H).;true;false
6;true;publication(D, C).;false;false
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;publication(H, L), tempadvisedby(M, L).;false;false
7;false,true,true;publication(H, I), publication(H, A).;false;false
7;false,false,false;tempadvisedby(A, Q), publication(R, A).;false;false
7;false;advisedby(A, G), publication(H, G).;true;true
7;false,false;advisedby(A, N), projectmember(P, N).;false;true
7;false,true;tempadvisedby(I, G), ta(J, I, K).;true;true
7;true;ta(C, E, D), advisedby(E, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
8;false,true,false;publication(K, A).;false;false
8;false,true,true;publication(I, A), ta(J, H, G).;false;false
8;false,false,true;tempadvisedby(N, L).;false;false
8;false;advisedby(A, E), ta(F, A, G).;true;true
8;false,false;advisedby(A, L), publication(M, A).;true;true
8;false,true;tempadvisedby(H, E), publication(I, E).;true;true
8;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
9;false,true,false;tempadvisedby(K, G), publication(L, G).;false;false
9;false,true,true;publication(J, A).;false;false
9;false,false,true;publication(N, M).;false;false
9;false;ta(E, A, F), advisedby(A, G).;true;true
9;false,false;advisedby(A, M), publication(N, A).;true;true
9;false,true;tempadvisedby(H, G), ta(E, H, I).;true;true
9;false,false,false;tempadvisedby(A, P).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, F) )
%   | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3029206894518932;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, C), workedunder(E, F) )
%   | | then if ( workedunder(A, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2279628397230807;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1711293278244227;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then if ( workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.129208558439337;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.045935928421124754;  // std dev = 2,295, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.0764261912121069;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08763350251571943;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.0712032507661705;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06750688609480647;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.27209
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.224 seconds
Total inference time: 0.685 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 11, 0], 'false,true,false': [2.245, 7, 18], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.245, 7, 18], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(F, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(A, F), workedunder(A, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J), workedunder(J, K)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,true': 'workedunder(A, F)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(E, C), workedunder(E, F)', 'false': 'workedunder(A, G), workedunder(A, H)', 'false,false': 'workedunder(A, I)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(F, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'true': 'workedunder(C, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F)', 'false,false,false': 'workedunder(A, G)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.295, 18, 18]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}]]
[{'': [-1.0092936587501423e-17, 0.2015999999999996], 'false': [0.2015999999999996, nan], 'false,true': [nan, 0.2015999999999996]}, {'': [2.523234146875356e-18, 0.2016000000000001], 'false': [0.2016000000000001, nan]}, {'': [5.046468293750712e-18, 0.20160000000000053], 'true,false': [5.046468293750712e-18, nan], 'false,false,false': [nan, 0.20160000000000053], 'false': [nan, 0.20160000000000053], 'false,false': [nan, 0.20160000000000053], 'true': [nan, 5.046468293750712e-18]}, {'': [0.0, 0.2016000000000004], 'true': [nan, 0.0], 'false': [nan, 0.2016000000000004], 'false,false': [nan, 0.2016000000000004], 'false,false,false': [nan, 0.2016000000000004]}, {'': [0.0, 0.2016000000000001], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false,false,false': [nan, 0.2016000000000001], 'false': [nan, 0.2016000000000001], 'false,false': [nan, 0.2016000000000001], 'true': [nan, 0.0]}, {'': [2.523234146875356e-18, 0.2016], 'false': [nan, 0.2016], 'false,false': [nan, 0.2016], 'false,false,false': [nan, 0.2016]}, {'': [0.0, 0.20160000000000003], 'true': [nan, 0.0], 'false': [nan, 0.20160000000000003], 'false,false': [nan, 0.20160000000000003], 'false,false,false': [nan, 0.20160000000000003]}, {'': [0.1462499297854615, nan]}, {'': [-3.784851220313033e-18, 0.2016], 'false': [nan, 0.2016], 'false,false': [nan, 0.2016], 'false,false,false': [nan, 0.2016]}, {'': [-6.30808536718839e-19, 0.20159999999999997], 'false': [nan, 0.20159999999999997], 'false,false': [nan, 0.20159999999999997], 'false,false,false': [nan, 0.20159999999999997]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
1;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, C).;true;true
3;;genre(A, B) :- workedunder(A, C).;true;true
4;;genre(A, B) :- workedunder(A, C).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
9;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.02 seconds
Total inference time: 0.52 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 04:37:20
{'Recall': 1.0, 'Learning time': 2.2439999999999998, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.264596, 'parameter': {'Recall': 1.0, 'Learning time': 1.224, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.27209, 'AUC ROC': 0.965517, 'Inference time': 0.685}, 'AUC ROC': 0.965517, 'Inference time': 0.52}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D).;true;true
0;true,false,true;sameperson(A, G).;false;false
0;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
0;false;advisedby(A, L), projectmember(M, L).;false;true
0;true,false;ta(C, G, D), advisedby(G, H).;true;true
0;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
0;false,false;tempadvisedby(A, N), publication(P, A).;false;true
0;true;publication(E, A), advisedby(A, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;tempadvisedby(A, Q).;false;false
1;true,false,false;tempadvisedby(A, I), advisedby(J, I).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, K), projectmember(L, K).;false;true
1;false,false;advisedby(A, M).;true;true
1;false,false,true;publication(N, A), tempadvisedby(P, M).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;advisedby(A, G).;false;false
2;false;advisedby(A, H), publication(I, H).;true;true
2;false,false;advisedby(A, P), projectmember(Q, P).;false;true
2;false,true;advisedby(J, H), publication(I, J).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;true
3;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
3;false,true,true;publication(I, K).;false;false
3;true,true;ta(H, G, E), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, N), publication(P, N).;false;false
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;false,true;tempadvisedby(K, J).;true;false
3;true;publication(C, F), tempadvisedby(G, F).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;true,false,true;advisedby(A, H).;false;false
4;false,false,false;tempadvisedby(A, M).;false;false
4;true,false;publication(E, G), tempadvisedby(G, H).;true;false
4;false;tempadvisedby(A, I), publication(J, A).;false;true
4;false,false;publication(K, A).;true;true
4;false,false,true;advisedby(A, L), publication(K, L).;false;false
4;true;tempadvisedby(A, F), publication(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
5;false,true,false;tempadvisedby(J, E), publication(K, J).;false;false
5;false,true,true;publication(I, F).;false;false
5;false,false,true;advisedby(N, L), publication(M, N).;false;false
5;false;tempadvisedby(A, E).;true;true
5;false,false;advisedby(A, L), publication(M, L).;true;true
5;false,true;tempadvisedby(F, E), ta(G, F, H).;true;true
5;false,false,false;publication(P, A).;false;false
6;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
6;false,true,true;ta(J, H, K), publication(I, G).;false;false
6;false,false,true;publication(L, M), advisedby(N, M).;false;false
6;false,false,false;tempadvisedby(A, P).;false;false
6;false;ta(E, A, F), advisedby(A, G).;true;true
6;false,false;publication(L, A).;true;true
6;false,true;advisedby(H, G), publication(I, H).;true;false
6;true;publication(D, C).;false;false
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;publication(H, L), tempadvisedby(M, L).;false;false
7;false,true,true;publication(H, I), publication(H, A).;false;false
7;false,false,false;tempadvisedby(A, Q), publication(R, A).;false;false
7;false;advisedby(A, G), publication(H, G).;true;true
7;false,false;advisedby(A, N), projectmember(P, N).;false;true
7;false,true;tempadvisedby(I, G), ta(J, I, K).;true;true
7;true;ta(C, E, D), advisedby(E, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
8;false,true,false;publication(K, A).;false;false
8;false,true,true;publication(I, A), ta(J, H, G).;false;false
8;false,false,true;tempadvisedby(N, L).;false;false
8;false;advisedby(A, E), ta(F, A, G).;true;true
8;false,false;advisedby(A, L), publication(M, A).;true;true
8;false,true;tempadvisedby(H, E), publication(I, E).;true;true
8;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
9;false,true,false;tempadvisedby(K, G), publication(L, G).;false;false
9;false,true,true;publication(J, A).;false;false
9;false,false,true;publication(N, M).;false;false
9;false;ta(E, A, F), advisedby(A, G).;true;true
9;false,false;advisedby(A, M), publication(N, A).;true;true
9;false,true;tempadvisedby(H, G), ta(E, H, I).;true;true
9;false,false,false;tempadvisedby(A, P).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(E, F) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, F), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(A, D), workedunder(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, C), workedunder(E, F) )
%   | | then if ( workedunder(A, F) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G), workedunder(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then if ( workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04371622449879525;  // std dev = 0,930, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07626966013963353;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10455622969475716;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07106692689003444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08287386431449258;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.305945
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.811 seconds
Total inference time: 0.73 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 3, 0], 'false,true,false': [0.894, 1, 4], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.894, 1, 4], 'true': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(A, E)', 'false': 'workedunder(A, F), workedunder(F, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C), workedunder(E, D)', 'false': 'workedunder(A, F), workedunder(A, G)', 'false,false': 'workedunder(A, H), movie(I, H)', 'false,false,false': 'workedunder(A, J), workedunder(J, K)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,true': 'workedunder(A, F)', 'true': 'workedunder(A, D), workedunder(D, C)', 'true,false': 'workedunder(E, C), workedunder(E, F)', 'false': 'workedunder(A, G), workedunder(A, H)', 'false,false': 'workedunder(A, I)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(F, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(A, D)', 'true': 'workedunder(C, D)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F)', 'false,false,false': 'workedunder(A, G)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.93, 4, 4]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.86e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), workedunder(A, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 3, 0]}]]
[{'': [0.0, 0.15999999999999986], 'false': [0.15999999999999986, nan], 'false,true': [nan, 0.15999999999999986]}, {'': [0.0, 0.16], 'false': [0.16, nan]}, {'': [2.3129646346357427e-18, 0.15999999999999998], 'true,false': [2.3129646346357427e-18, nan], 'false,false,false': [nan, 0.15999999999999998], 'false': [nan, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'true': [nan, 2.3129646346357427e-18]}, {'': [-1.1564823173178713e-18, 0.15999999999999998], 'true': [nan, -1.1564823173178713e-18], 'false': [nan, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}, {'': [2.3129646346357427e-18, 0.16], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'false,false,false': [nan, 0.16], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'true': [nan, 2.3129646346357427e-18]}, {'': [0.0, 0.16], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}, {'': [0.0, 0.16], 'true': [nan, 0.0], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}, {'': [0.10820812886279306, nan]}, {'': [1.1564823173178713e-18, 0.16], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}, {'': [0.0, 0.16], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
1;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, C).;true;true
3;;genre(A, B) :- workedunder(A, C).;true;true
4;;genre(A, B) :- workedunder(A, C).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(A, D).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
9;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(A, D) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.676 seconds
Total inference time: 0.522 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 04:37:23
{'Recall': 1.0, 'Learning time': 1.487, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.300536, 'parameter': {'Recall': 1.0, 'Learning time': 0.811, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.305945, 'AUC ROC': 0.906977, 'Inference time': 0.73}, 'AUC ROC': 0.906977, 'Inference time': 0.522}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D).;true;true
0;true,false,true;sameperson(A, G).;false;false
0;false,false,false;advisedby(A, Q), tempadvisedby(R, Q).;false;false
0;false;advisedby(A, L), projectmember(M, L).;false;true
0;true,false;ta(C, G, D), advisedby(G, H).;true;true
0;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
0;false,false;tempadvisedby(A, N), publication(P, A).;false;true
0;true;publication(E, A), advisedby(A, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;tempadvisedby(A, Q).;false;false
1;true,false,false;tempadvisedby(A, I), advisedby(J, I).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, K), projectmember(L, K).;false;true
1;false,false;advisedby(A, M).;true;true
1;false,false,true;publication(N, A), tempadvisedby(P, M).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;true,false;advisedby(A, G).;false;false
2;false;advisedby(A, H), publication(I, H).;true;true
2;false,false;advisedby(A, P), projectmember(Q, P).;false;true
2;false,true;advisedby(J, H), publication(I, J).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;true
3;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
3;false,true,true;publication(I, K).;false;false
3;true,true;ta(H, G, E), advisedby(A, F).;false;false
3;false,false,false;advisedby(A, N), publication(P, N).;false;false
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;false,true;tempadvisedby(K, J).;true;false
3;true;publication(C, F), tempadvisedby(G, F).;true;false
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;true,false,true;advisedby(A, H).;false;false
4;false,false,false;tempadvisedby(A, M).;false;false
4;true,false;publication(E, G), tempadvisedby(G, H).;true;false
4;false;tempadvisedby(A, I), publication(J, A).;false;true
4;false,false;publication(K, A).;true;true
4;false,false,true;advisedby(A, L), publication(K, L).;false;false
4;true;tempadvisedby(A, F), publication(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;false;true
5;false,true,false;tempadvisedby(J, E), publication(K, J).;false;false
5;false,true,true;publication(I, F).;false;false
5;false,false,true;advisedby(N, L), publication(M, N).;false;false
5;false;tempadvisedby(A, E).;true;true
5;false,false;advisedby(A, L), publication(M, L).;true;true
5;false,true;tempadvisedby(F, E), ta(G, F, H).;true;true
5;false,false,false;publication(P, A).;false;false
6;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
6;false,true,true;ta(J, H, K), publication(I, G).;false;false
6;false,false,true;publication(L, M), advisedby(N, M).;false;false
6;false,false,false;tempadvisedby(A, P).;false;false
6;false;ta(E, A, F), advisedby(A, G).;true;true
6;false,false;publication(L, A).;true;true
6;false,true;advisedby(H, G), publication(I, H).;true;false
6;true;publication(D, C).;false;false
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;publication(H, L), tempadvisedby(M, L).;false;false
7;false,true,true;publication(H, I), publication(H, A).;false;false
7;false,false,false;tempadvisedby(A, Q), publication(R, A).;false;false
7;false;advisedby(A, G), publication(H, G).;true;true
7;false,false;advisedby(A, N), projectmember(P, N).;false;true
7;false,true;tempadvisedby(I, G), ta(J, I, K).;true;true
7;true;ta(C, E, D), advisedby(E, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
8;false,true,false;publication(K, A).;false;false
8;false,true,true;publication(I, A), ta(J, H, G).;false;false
8;false,false,true;tempadvisedby(N, L).;false;false
8;false;advisedby(A, E), ta(F, A, G).;true;true
8;false,false;advisedby(A, L), publication(M, A).;true;true
8;false,true;tempadvisedby(H, E), publication(I, E).;true;true
8;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
9;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;false;true
9;false,true,false;tempadvisedby(K, G), publication(L, G).;false;false
9;false,true,true;publication(J, A).;false;false
9;false,false,true;publication(N, M).;false;false
9;false;ta(E, A, F), advisedby(A, G).;true;true
9;false,false;advisedby(A, M), publication(N, A).;true;true
9;false,true;tempadvisedby(H, G), ta(E, H, I).;true;true
9;false,false,false;tempadvisedby(A, P).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(E, F) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(C, E), workedunder(E, F) )
%   | | then if ( workedunder(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), workedunder(H, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05192513599097015;  // std dev = 0,250, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07685001471586363;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H), workedunder(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16965570496360172;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07157218773227715;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, F), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14707549467295578;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.301461
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.751 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(A, E)'}, {'true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 2], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(A, E)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,false,false': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(A, D)', 'true': 'movie(C, D), workedunder(E, D)'}, {'true,true,false': [0.0, 0, 2], 'true,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'movie(C, E), workedunder(E, F)', 'true,false,true': 'workedunder(A, F)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,false,true,false': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, A)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, A)', 'false': 'workedunder(A, E)', 'false,false': 'movie(F, A)', 'false,false,true': 'movie(F, G), workedunder(H, G)', 'true': 'movie(D, C)'}, {'false,false,true,true': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.25, 2, 2]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), movie(G, A)', 'false,false,false': 'workedunder(A, H), workedunder(I, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(A, F), movie(G, A)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 2, 0]}]]
[{'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.11145008534151418, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.06736877561142736, nan], 'true,true': [0.0, 0.0], 'true': [0.06736877561142736, nan]}, {'': [0.04272553559876201, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.015667869803427638, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
1;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
3;;genre(A, B) :- workedunder(A, D).;true;true
4;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
5;;genre(A, B) :- workedunder(A, C), movie(D, A).;true;true
6;;genre(A, B) :- workedunder(A, C), movie(D, A).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
9;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299463
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.583 seconds
Total inference time: 0.528 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 04:37:26
{'Recall': 1.0, 'Learning time': 1.334, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.299463, 'parameter': {'Recall': 1.0, 'Learning time': 0.751, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.301461, 'AUC ROC': 0.9, 'Inference time': 0.752}, 'AUC ROC': 0.9, 'Inference time': 0.528}


