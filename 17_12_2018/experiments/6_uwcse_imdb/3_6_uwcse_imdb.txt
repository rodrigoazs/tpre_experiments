Starting experiment #3 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3470378239884017;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.3547765852918454;  // std dev = 0,496, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.24279374791330097;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.31508455856182616;  // std dev = 1,865, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), publication(M, L) )
%   | then if ( publication(M, N), tempadvisedby(P, N) )
%   | | then return 0.3571686625921875;  // std dev = 0,497, 76,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | else return 0.14118393216516253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, Q), projectmember(R, Q) )
%   | | then return 0.2105717177991725;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, S) )
%   | | | then return 0.41779418357704884;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3104538971777386;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then return 0.20371817411168763;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.26625971068886656;  // std dev = 0,498, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(H, A), advisedby(A, I) )
%   | then if ( tempadvisedby(J, I) )
%   | | then if ( publication(K, J), ta(L, J, M) )
%   | | | then return 0.3018479968613297;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.23478003395839758;  // std dev = 2,599, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.3931814212049183;  // std dev = 0,472, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.18961340831314133;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3160055439934835;  // std dev = 3,399, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( advisedby(A, R), publication(S, R) )
%   | | | then return 0.2716144245473399;  // std dev = 4,189, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.1836731178029153;  // std dev = 3,023, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then if ( tempadvisedby(G, F) )
%   | | | then return 0.19706217643717308;  // std dev = 3,907, 62,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | else return 0.1424504149538421;  // std dev = 2,090, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.49634866133693195;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, H, I), advisedby(H, J) )
%   | | then return 0.15318965458708905;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, K), publication(L, K) )
%   | | | then return 0.2680872954879556;  // std dev = 1,468, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10304527768052543;  // std dev = 1,100, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( publication(M, A), tempadvisedby(A, N) )
%   | then return 0.15026841561875473;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tempadvisedby(A, P) )
%   | | then return 0.2650044795598964;  // std dev = 0,494, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return 0.21423801464709127;  // std dev = 0,495, 112,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=58 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then if ( ta(H, G, D), advisedby(A, F) )
%   | | then return 0.20767636572901552;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10975060180561488;  // std dev = 0,491, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else return 0.1719026575180835;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), ta(N, A, P) )
%   | | | then return 0.2414908070713292;  // std dev = 1,755, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.15076918456246136;  // std dev = 4,646, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.25954650581253846;  // std dev = 0,476, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( tempadvisedby(R, Q), publication(S, R) )
%   | | | then return 0.11162930228029158;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.2064262726746879;  // std dev = 3,364, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.1265026180691154;  // std dev = 0,491, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.12166403176290627;  // std dev = 0,492, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.08358506806466913;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else return 0.1246664049820065;  // std dev = 0,492, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, J), publication(K, A) )
%   | then if ( tempadvisedby(L, J), publication(K, L) )
%   | | then return -0.06508012873610976;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1679242565658238;  // std dev = 0,491, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( tempadvisedby(A, M) )
%   | | then if ( tempadvisedby(N, M), publication(P, N) )
%   | | | then return 0.08907379063337145;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.21284697874786662;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, Q), publication(R, Q) )
%   | | | then return 0.13580974688278782;  // std dev = 2,853, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.07857132054435703;  // std dev = 2,493, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.5581909771142717;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05275138003948225;  // std dev = 0,484, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( ta(G, A, H), advisedby(A, I) )
%   | then if ( advisedby(J, I), publication(K, J) )
%   | | then if ( publication(K, I), ta(L, J, M) )
%   | | | then return 0.10642979730604661;  // std dev = 3,227, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.004330973044112504;  // std dev = 2,675, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.14894932729202637;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( advisedby(A, N), publication(P, A) )
%   | | then if ( publication(P, N) )
%   | | | then return 0.09412414602824944;  // std dev = 3,210, 42,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.2406941497944425;  // std dev = 1,174, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tempadvisedby(A, Q), projectmember(R, Q) )
%   | | | then return 0.1756303732393516;  // std dev = 1,060, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09410419806215573;  // std dev = 5,677, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then return 0.04544053193406071;  // std dev = 0,490, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.09760999289668332;  // std dev = 0,485, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(H, A), advisedby(A, I) )
%   | then if ( publication(J, I), tempadvisedby(K, I) )
%   | | then if ( ta(L, K, M), publication(N, K) )
%   | | | then return 0.11204908742447782;  // std dev = 1,467, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.029155114954213354;  // std dev = 2,395, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0.14785110841120278;  // std dev = 0,474, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( tempadvisedby(A, P), advisedby(Q, P) )
%   | | then if ( publication(R, Q) )
%   | | | then return 0.09532301280570965;  // std dev = 3,538, 52,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.028256438621206182;  // std dev = 1,569, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( advisedby(A, S), publication(T, S) )
%   | | | then return 0.07446369599710213;  // std dev = 4,144, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.04522338557827199;  // std dev = 3,240, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.40603918389395605;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.023203101203259944;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( advisedby(A, G), ta(H, A, I) )
%   | then if ( advisedby(J, G), publication(K, J) )
%   | | then if ( publication(K, G), ta(L, J, M) )
%   | | | then return 0.06796359353691891;  // std dev = 3,223, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.021724445917488396;  // std dev = 2,676, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.0964001918544726;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( advisedby(A, N) )
%   | | then if ( publication(P, A), tempadvisedby(Q, N) )
%   | | | then return 0.03948348201221766;  // std dev = 2,813, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.077988732450708;  // std dev = 3,599, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tempadvisedby(A, R), projectmember(S, R) )
%   | | | then return 0.12201237354082109;  // std dev = 1,053, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05095032256283194;  // std dev = 4,794, 95,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then return 0.029361956105776146;  // std dev = 0,487, 50,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   else if ( tempadvisedby(A, F) )
%   | then if ( tempadvisedby(G, F), publication(H, G) )
%   | | then if ( ta(I, G, J), ta(I, A, K) )
%   | | | then return -0.060369591633798105;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.021723128829965556;  // std dev = 2,110, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( advisedby(L, F), publication(M, L) )
%   | | | then return 0.09262154668239765;  // std dev = 2,698, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.01752081837290676;  // std dev = 1,964, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( advisedby(A, N) )
%   | | then if ( publication(P, A) )
%   | | | then return 0.05552660326907649;  // std dev = 3,561, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.040497093501201495;  // std dev = 4,562, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | | else if ( publication(Q, A) )
%   | | | then return 0.08643455455768635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.008207201599171285;  // std dev = 2,071, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;advisedby(A, S).;false;false
1;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, L), publication(M, L).;true;true
1;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
1;false,true;publication(M, N), tempadvisedby(P, N).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(K, J), ta(L, J, M).;false;false
2;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
2;false,false,false;advisedby(A, R), publication(S, R).;false;false
2;false;publication(H, A), advisedby(A, I).;true;true
2;false,false;tempadvisedby(A, N).;true;true
2;false,true;tempadvisedby(J, I).;true;false
2;true;publication(E, F), tempadvisedby(G, F).;false;false
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;true,false;ta(C, H, I), advisedby(H, J).;false;true
3;false;publication(M, A), tempadvisedby(A, N).;false;true
3;true,true;sameperson(A, E).;true;false
3;true,true,true;tempadvisedby(G, F).;false;false
3;true,false,false;tempadvisedby(A, K), publication(L, K).;false;false
3;false,false;tempadvisedby(A, P).;false;false
3;true;ta(C, E, D), advisedby(E, F).;true;true
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
4;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
4;true,true;ta(H, G, D), advisedby(A, F).;false;false
4;false;advisedby(A, I), publication(J, I).;true;true
4;false,false;tempadvisedby(A, Q).;true;false
4;false,true;advisedby(K, I), publication(J, K).;true;false
4;true;publication(E, F), tempadvisedby(G, F).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false,true;tempadvisedby(N, M), publication(P, N).;false;false
5;false,false,false;advisedby(A, Q), publication(R, Q).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;false;false
5;false;advisedby(A, J), publication(K, A).;true;true
5;false,false;tempadvisedby(A, M).;true;true
5;false,true;tempadvisedby(L, J), publication(K, L).;false;false
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
6;false,true,true;publication(K, I), ta(L, J, M).;false;false
6;false,false,true;publication(P, N).;false;false
6;false,false,false;tempadvisedby(A, Q), projectmember(R, Q).;false;false
6;false;ta(G, A, H), advisedby(A, I).;true;true
6;false,false;advisedby(A, N), publication(P, A).;true;true
6;false,true;advisedby(J, I), publication(K, J).;true;false
6;true;advisedby(A, E), publication(F, E).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,true,true;ta(L, K, M), publication(N, K).;false;false
7;false,false,true;publication(R, Q).;false;false
7;false,false,false;advisedby(A, S), publication(T, S).;false;false
7;false;publication(H, A), advisedby(A, I).;true;true
7;false,false;tempadvisedby(A, P), advisedby(Q, P).;true;true
7;false,true;publication(J, I), tempadvisedby(K, I).;true;false
7;true;publication(E, F), tempadvisedby(G, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
8;false,true,true;publication(K, G), ta(L, J, M).;false;false
8;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
8;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
8;false;advisedby(A, G), ta(H, A, I).;true;true
8;false,false;advisedby(A, N).;true;true
8;false,true;advisedby(J, G), publication(K, J).;true;false
8;true;advisedby(A, E), publication(F, E).;false;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;false;true
9;false,true,false;advisedby(L, F), publication(M, L).;false;false
9;false,true,true;ta(I, G, J), ta(I, A, K).;false;false
9;false,false,true;publication(P, A).;false;false
9;false;tempadvisedby(A, F).;true;true
9;false,false;advisedby(A, N).;true;true
9;false,true;tempadvisedby(G, F), publication(H, G).;true;true
9;false,false,false;publication(Q, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.2970143868412816;  // std dev = 1,982, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.6558459784192013;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16180800894656572;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.49724770270922425;  // std dev = 3,65e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14104413482597986;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3756022135019563;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12480558738998825;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.0902897948044732;  // std dev = 0,948, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.12108402085293096;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2740542891229079;  // std dev = 2,36e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.22301131105972474;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then if ( workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10877759392781326;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.09867215865011322;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18675806919008683;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.16003432818362118;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, D) )
%   | then if ( workedunder(E, D), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, D), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09023750863003623;  // std dev = 8,33e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.353811
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.685 seconds
Total inference time: 1.007 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 11], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.982, 11, 11], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,false,true,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,true': 'workedunder(E, D)', 'true': 'workedunder(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 11], 'false': [0.0, 0, 0], 'true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'workedunder(A, D)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.948, 11, 11]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [2.36e-08, 0, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'false,false,true': 'workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [1.05e-08, 0, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, D)', 'false,true,false': 'workedunder(G, D), workedunder(H, G)', 'false,true': 'workedunder(E, D), workedunder(F, E)'}, {'true': [0.0, 0, 11], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [8.33e-09, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true,false': [nan, -1.6148698540002277e-16], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, -1.6148698540002277e-16]}, {'': [nan, 0.17847162811629394], 'false': [0.17847162811629388, nan]}, {'': [8.074349270001139e-17, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'false,false,true': [nan, 5.046468293750712e-18], 'true': [8.074349270001139e-17, nan]}, {'': [0.10185411746601693, nan], 'true,true': [1.2111523905001707e-16, nan], 'true': [1.2111523905001707e-16, -5.046468293750712e-18]}, {'': [-4.0371746350005693e-17, 2.523234146875356e-18], 'true,true': [nan, -4.0371746350005693e-17], 'false': [2.523234146875356e-18, nan], 'false,true': [nan, 2.523234146875356e-18], 'true': [-4.0371746350005693e-17, nan]}, {'': [0.04083992286106828, nan]}, {'': [2.523234146875356e-18, 5.0464682937507114e-17], 'true': [2.523234146875356e-18, nan], 'false': [nan, 5.0464682937507114e-17], 'false,false': [nan, 5.0464682937507114e-17], 'false,false,false': [nan, 5.0464682937507114e-17]}, {'': [4.0371746350005693e-17, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [4.0371746350005693e-17, nan]}, {'': [-3.784851220313033e-18, 1.0092936587501423e-17], 'true': [-3.784851220313033e-18, nan], 'false': [nan, 1.0092936587501423e-17], 'false,false': [nan, 1.0092936587501423e-17], 'false,false,false': [nan, 1.0092936587501423e-17]}, {'': [0.0, 6.308085367188389e-18], 'false,true,false': [nan, 6.308085367188389e-18], 'false': [6.308085367188389e-18, nan], 'false,true': [nan, 6.308085367188389e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.105 seconds
Total inference time: 0.534 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:59
{'Recall': 1.0, 'Learning time': 2.79, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.352709, 'parameter': {'Recall': 1.0, 'Learning time': 1.685, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.353811, 'AUC ROC': 0.875, 'Inference time': 1.007}, 'AUC ROC': 0.875, 'Inference time': 0.534}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;advisedby(A, S).;false;false
1;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, L), publication(M, L).;true;true
1;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
1;false,true;publication(M, N), tempadvisedby(P, N).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(K, J), ta(L, J, M).;false;false
2;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
2;false,false,false;advisedby(A, R), publication(S, R).;false;false
2;false;publication(H, A), advisedby(A, I).;true;true
2;false,false;tempadvisedby(A, N).;true;true
2;false,true;tempadvisedby(J, I).;true;false
2;true;publication(E, F), tempadvisedby(G, F).;false;false
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;true,false;ta(C, H, I), advisedby(H, J).;false;true
3;false;publication(M, A), tempadvisedby(A, N).;false;true
3;true,true;sameperson(A, E).;true;false
3;true,true,true;tempadvisedby(G, F).;false;false
3;true,false,false;tempadvisedby(A, K), publication(L, K).;false;false
3;false,false;tempadvisedby(A, P).;false;false
3;true;ta(C, E, D), advisedby(E, F).;true;true
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
4;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
4;true,true;ta(H, G, D), advisedby(A, F).;false;false
4;false;advisedby(A, I), publication(J, I).;true;true
4;false,false;tempadvisedby(A, Q).;true;false
4;false,true;advisedby(K, I), publication(J, K).;true;false
4;true;publication(E, F), tempadvisedby(G, F).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false,true;tempadvisedby(N, M), publication(P, N).;false;false
5;false,false,false;advisedby(A, Q), publication(R, Q).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;false;false
5;false;advisedby(A, J), publication(K, A).;true;true
5;false,false;tempadvisedby(A, M).;true;true
5;false,true;tempadvisedby(L, J), publication(K, L).;false;false
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
6;false,true,true;publication(K, I), ta(L, J, M).;false;false
6;false,false,true;publication(P, N).;false;false
6;false,false,false;tempadvisedby(A, Q), projectmember(R, Q).;false;false
6;false;ta(G, A, H), advisedby(A, I).;true;true
6;false,false;advisedby(A, N), publication(P, A).;true;true
6;false,true;advisedby(J, I), publication(K, J).;true;false
6;true;advisedby(A, E), publication(F, E).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,true,true;ta(L, K, M), publication(N, K).;false;false
7;false,false,true;publication(R, Q).;false;false
7;false,false,false;advisedby(A, S), publication(T, S).;false;false
7;false;publication(H, A), advisedby(A, I).;true;true
7;false,false;tempadvisedby(A, P), advisedby(Q, P).;true;true
7;false,true;publication(J, I), tempadvisedby(K, I).;true;false
7;true;publication(E, F), tempadvisedby(G, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
8;false,true,true;publication(K, G), ta(L, J, M).;false;false
8;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
8;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
8;false;advisedby(A, G), ta(H, A, I).;true;true
8;false,false;advisedby(A, N).;true;true
8;false,true;advisedby(J, G), publication(K, J).;true;false
8;true;advisedby(A, E), publication(F, E).;false;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;false;true
9;false,true,false;advisedby(L, F), publication(M, L).;false;false
9;false,true,true;ta(I, G, J), ta(I, A, K).;false;false
9;false,false,true;publication(P, A).;false;false
9;false;tempadvisedby(A, F).;true;true
9;false,false;advisedby(A, N).;true;true
9;false,true;tempadvisedby(G, F), publication(H, G).;true;true
9;false,false,false;publication(Q, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.29881865438287963;  // std dev = 2,140, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.5956741381003415;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16205286419737067;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.4541073297631877;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14123316446906517;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3413598884811856;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12495535010408224;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09024514873525062;  // std dev = 1,324, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.12120922692087274;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24141258053247286;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.19145962658821844;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then if ( workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1088795025259067;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.09875657849843857;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15556711411004648;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12896849369423896;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, D) )
%   | then if ( workedunder(E, D), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, D), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09030849966137598;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.328615
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.454 seconds
Total inference time: 1.238 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.961, 1, 12], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.14, 12, 12], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,true': 'workedunder(E, D)', 'true': 'workedunder(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12], 'false': [0.0, 0, 0], 'true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'workedunder(A, D)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false': [5.27e-09, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [0.961, 1, 12], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.324, 12, 12]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [1.05e-08, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'false,false,true': 'workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, D)', 'false,true,false': 'workedunder(G, D), workedunder(H, G)', 'false,true': 'workedunder(E, D), workedunder(F, E)'}, {'true': [0.961, 1, 12], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 11, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'true,false': [nan, 0.07100591715976314], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.07100591715976314]}, {'': [nan, 0.1907686737562356], 'false': [0.19076867375623552, nan]}, {'': [0.07100591715976333, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [0.07100591715976333, nan]}, {'': [0.12645378409069916, nan], 'true,true': [0.07100591715976344, nan], 'true': [0.07100591715976344, -5.046468293750712e-18]}, {'': [0.07100591715976325, 2.523234146875356e-18], 'true,true': [nan, 0.07100591715976325], 'false': [2.523234146875356e-18, nan], 'false,true': [nan, 2.523234146875356e-18], 'true': [0.07100591715976325, nan]}, {'': [0.07304460467654134, nan]}, {'': [1.0092936587501423e-17, 0.07100591715976325], 'true': [1.0092936587501423e-17, nan], 'false': [nan, 0.07100591715976325], 'false,false': [nan, 0.07100591715976325], 'false,false,false': [nan, 0.07100591715976325]}, {'': [0.07100591715976336, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan], 'false,false,true': [nan, -5.046468293750712e-18], 'true': [0.07100591715976336, nan]}, {'': [2.523234146875356e-18, 0.07100591715976332], 'true': [2.523234146875356e-18, nan], 'false': [nan, 0.07100591715976332], 'false,false': [nan, 0.07100591715976332], 'false,false,false': [nan, 0.07100591715976332]}, {'': [0.07100591715976332, -1.261617073437678e-18], 'false,true,false': [nan, -1.261617073437678e-18], 'false': [-1.261617073437678e-18, nan], 'false,true': [nan, -1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.672 seconds
Total inference time: 0.529 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:04
{'Recall': 1.0, 'Learning time': 3.126, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.320018, 'parameter': {'Recall': 1.0, 'Learning time': 1.454, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.328615, 'AUC ROC': 0.885714, 'Inference time': 1.238}, 'AUC ROC': 0.885714, 'Inference time': 0.529}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;advisedby(A, S).;false;false
1;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, L), publication(M, L).;true;true
1;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
1;false,true;publication(M, N), tempadvisedby(P, N).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(K, J), ta(L, J, M).;false;false
2;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
2;false,false,false;advisedby(A, R), publication(S, R).;false;false
2;false;publication(H, A), advisedby(A, I).;true;true
2;false,false;tempadvisedby(A, N).;true;true
2;false,true;tempadvisedby(J, I).;true;false
2;true;publication(E, F), tempadvisedby(G, F).;false;false
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;true,false;ta(C, H, I), advisedby(H, J).;false;true
3;false;publication(M, A), tempadvisedby(A, N).;false;true
3;true,true;sameperson(A, E).;true;false
3;true,true,true;tempadvisedby(G, F).;false;false
3;true,false,false;tempadvisedby(A, K), publication(L, K).;false;false
3;false,false;tempadvisedby(A, P).;false;false
3;true;ta(C, E, D), advisedby(E, F).;true;true
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
4;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
4;true,true;ta(H, G, D), advisedby(A, F).;false;false
4;false;advisedby(A, I), publication(J, I).;true;true
4;false,false;tempadvisedby(A, Q).;true;false
4;false,true;advisedby(K, I), publication(J, K).;true;false
4;true;publication(E, F), tempadvisedby(G, F).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false,true;tempadvisedby(N, M), publication(P, N).;false;false
5;false,false,false;advisedby(A, Q), publication(R, Q).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;false;false
5;false;advisedby(A, J), publication(K, A).;true;true
5;false,false;tempadvisedby(A, M).;true;true
5;false,true;tempadvisedby(L, J), publication(K, L).;false;false
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
6;false,true,true;publication(K, I), ta(L, J, M).;false;false
6;false,false,true;publication(P, N).;false;false
6;false,false,false;tempadvisedby(A, Q), projectmember(R, Q).;false;false
6;false;ta(G, A, H), advisedby(A, I).;true;true
6;false,false;advisedby(A, N), publication(P, A).;true;true
6;false,true;advisedby(J, I), publication(K, J).;true;false
6;true;advisedby(A, E), publication(F, E).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,true,true;ta(L, K, M), publication(N, K).;false;false
7;false,false,true;publication(R, Q).;false;false
7;false,false,false;advisedby(A, S), publication(T, S).;false;false
7;false;publication(H, A), advisedby(A, I).;true;true
7;false,false;tempadvisedby(A, P), advisedby(Q, P).;true;true
7;false,true;publication(J, I), tempadvisedby(K, I).;true;false
7;true;publication(E, F), tempadvisedby(G, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
8;false,true,true;publication(K, G), ta(L, J, M).;false;false
8;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
8;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
8;false;advisedby(A, G), ta(H, A, I).;true;true
8;false,false;advisedby(A, N).;true;true
8;false,true;advisedby(J, G), publication(K, J).;true;false
8;true;advisedby(A, E), publication(F, E).;false;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;false;true
9;false,true,false;advisedby(L, F), publication(M, L).;false;false
9;false,true,true;ta(I, G, J), ta(I, A, K).;false;false
9;false,false,true;publication(P, A).;false;false
9;false;tempadvisedby(A, F).;true;true
9;false,false;advisedby(A, N).;true;true
9;false,true;tempadvisedby(G, F), publication(H, G).;true;true
9;false,false,false;publication(Q, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.3036065954523843;  // std dev = 2,821, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.43468426925455816;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16270407948312035;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.33858821103965575;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14173563788658616;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25617965419261113;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12535326667271615;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09919446157431888;  // std dev = 2,398, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.12251321518962753;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16759266113081506;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.12661062077164162;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then if ( workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10993979515877104;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.09963416804473312;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09645899265121326;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07410021333313949;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, D) )
%   | then if ( workedunder(E, D), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, D), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09104595400587372;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.283954
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.142 seconds
Total inference time: 0.917 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [2.245, 7, 18], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.821, 18, 18], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false': [0.0, 0, 0], 'false,false,true,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,true': 'workedunder(E, D)', 'true': 'workedunder(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.245, 7, 18], 'false': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'workedunder(A, D)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [2.245, 7, 18], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.398, 18, 18]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'false,false,true': 'workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, D)', 'false,true,false': 'workedunder(G, D), workedunder(H, G)', 'false,true': 'workedunder(E, D), workedunder(F, E)'}, {'true': [2.245, 7, 18], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [3.73e-09, 11, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'true,false': [nan, 0.2015999999999996], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.2015999999999996]}, {'': [nan, 0.22099738300738758], 'false': [0.22099738300738728, nan]}, {'': [0.20159999999999986, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'false,false,true': [nan, 5.046468293750712e-18], 'true': [0.20159999999999986, nan]}, {'': [0.18895488036883698, nan], 'true,true': [0.20159999999999983, nan], 'true': [0.20159999999999983, 2.523234146875356e-18]}, {'': [0.2016, -7.569702440626067e-18], 'true,true': [nan, 0.2016], 'false': [-7.569702440626067e-18, nan], 'false,true': [nan, -7.569702440626067e-18], 'true': [0.2016, nan]}, {'': [0.1596704489763302, nan]}, {'': [5.046468293750712e-18, 0.2015999999999999], 'true': [5.046468293750712e-18, nan], 'false': [nan, 0.2015999999999999], 'false,false': [nan, 0.2015999999999999], 'false,false,false': [nan, 0.2015999999999999]}, {'': [0.20159999999999997, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan], 'false,false,true': [nan, -5.046468293750712e-18], 'true': [0.20159999999999997, nan]}, {'': [-2.523234146875356e-18, 0.20160000000000008], 'true': [-2.523234146875356e-18, nan], 'false': [nan, 0.20160000000000008], 'false,false': [nan, 0.20160000000000008], 'false,false,false': [nan, 0.20160000000000008]}, {'': [0.2016000000000001, 1.261617073437678e-18], 'false,true,false': [nan, 1.261617073437678e-18], 'false': [1.261617073437678e-18, nan], 'false,true': [nan, 1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.578 seconds
Total inference time: 0.529 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:10
{'Recall': 1.0, 'Learning time': 3.7199999999999998, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.264596, 'parameter': {'Recall': 1.0, 'Learning time': 2.142, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.283954, 'AUC ROC': 0.965517, 'Inference time': 0.917}, 'AUC ROC': 0.965517, 'Inference time': 0.529}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;advisedby(A, S).;false;false
1;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, L), publication(M, L).;true;true
1;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
1;false,true;publication(M, N), tempadvisedby(P, N).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(K, J), ta(L, J, M).;false;false
2;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
2;false,false,false;advisedby(A, R), publication(S, R).;false;false
2;false;publication(H, A), advisedby(A, I).;true;true
2;false,false;tempadvisedby(A, N).;true;true
2;false,true;tempadvisedby(J, I).;true;false
2;true;publication(E, F), tempadvisedby(G, F).;false;false
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;true,false;ta(C, H, I), advisedby(H, J).;false;true
3;false;publication(M, A), tempadvisedby(A, N).;false;true
3;true,true;sameperson(A, E).;true;false
3;true,true,true;tempadvisedby(G, F).;false;false
3;true,false,false;tempadvisedby(A, K), publication(L, K).;false;false
3;false,false;tempadvisedby(A, P).;false;false
3;true;ta(C, E, D), advisedby(E, F).;true;true
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
4;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
4;true,true;ta(H, G, D), advisedby(A, F).;false;false
4;false;advisedby(A, I), publication(J, I).;true;true
4;false,false;tempadvisedby(A, Q).;true;false
4;false,true;advisedby(K, I), publication(J, K).;true;false
4;true;publication(E, F), tempadvisedby(G, F).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false,true;tempadvisedby(N, M), publication(P, N).;false;false
5;false,false,false;advisedby(A, Q), publication(R, Q).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;false;false
5;false;advisedby(A, J), publication(K, A).;true;true
5;false,false;tempadvisedby(A, M).;true;true
5;false,true;tempadvisedby(L, J), publication(K, L).;false;false
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
6;false,true,true;publication(K, I), ta(L, J, M).;false;false
6;false,false,true;publication(P, N).;false;false
6;false,false,false;tempadvisedby(A, Q), projectmember(R, Q).;false;false
6;false;ta(G, A, H), advisedby(A, I).;true;true
6;false,false;advisedby(A, N), publication(P, A).;true;true
6;false,true;advisedby(J, I), publication(K, J).;true;false
6;true;advisedby(A, E), publication(F, E).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,true,true;ta(L, K, M), publication(N, K).;false;false
7;false,false,true;publication(R, Q).;false;false
7;false,false,false;advisedby(A, S), publication(T, S).;false;false
7;false;publication(H, A), advisedby(A, I).;true;true
7;false,false;tempadvisedby(A, P), advisedby(Q, P).;true;true
7;false,true;publication(J, I), tempadvisedby(K, I).;true;false
7;true;publication(E, F), tempadvisedby(G, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
8;false,true,true;publication(K, G), ta(L, J, M).;false;false
8;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
8;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
8;false;advisedby(A, G), ta(H, A, I).;true;true
8;false,false;advisedby(A, N).;true;true
8;false,true;advisedby(J, G), publication(K, J).;true;false
8;true;advisedby(A, E), publication(F, E).;false;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;false;true
9;false,true,false;advisedby(L, F), publication(M, L).;false;false
9;false,true,true;ta(I, G, J), ta(I, A, K).;false;false
9;false,false,true;publication(P, A).;false;false
9;false;tempadvisedby(A, F).;true;true
9;false,false;advisedby(A, N).;true;true
9;false,true;tempadvisedby(G, F), publication(H, G).;true;true
9;false,false,false;publication(Q, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, E), workedunder(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.30172034469051234;  // std dev = 1,295, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.498492746475355;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then if ( workedunder(I, H), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16244727624482774;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(C, A) )
%   | then if ( workedunder(E, D) )
%   | | then return 0.38458835138867936;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14153753674906433;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.28926405595000365;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then if ( workedunder(H, F), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12519641824176958;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09402037975157229;  // std dev = 1,002, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.12182165465800089;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), workedunder(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19502578086101635;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), workedunder(E, D) )
%   | then return 0.1494948032713977;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), workedunder(I, H) )
%   | | then if ( workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10937771708977014;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then if ( workedunder(A, E), workedunder(F, E) )
%   | then return -0.09916911271816657;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11631572127548757;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09171461529071352;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, D) )
%   | then if ( workedunder(E, D), workedunder(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, D), workedunder(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09065528119906492;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.315696
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.078 seconds
Total inference time: 1.058 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'true,false': 'workedunder(A, E), workedunder(C, E)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'false,true,false': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.894, 1, 4], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.295, 4, 4], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,true': 'workedunder(I, H), workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,true': 'workedunder(E, D)', 'true': 'workedunder(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.894, 1, 4], 'false': [0.0, 0, 0], 'true,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'workedunder(A, D)', 'false': 'workedunder(A, F), workedunder(G, F)', 'false,true': 'workedunder(H, F), workedunder(G, H)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.002, 4, 4]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, A)', 'false,false,false': 'workedunder(A, J), workedunder(K, J)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), workedunder(A, G)', 'false,false': 'workedunder(A, H), workedunder(I, H)', 'false,false,true': 'workedunder(J, I)', 'true': 'workedunder(C, D), workedunder(E, D)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,false,true,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'true': 'workedunder(A, E), workedunder(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, D)', 'false,true,false': 'workedunder(G, D), workedunder(H, G)', 'false,true': 'workedunder(E, D), workedunder(F, E)'}, {'true': [0.894, 1, 4], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [1.86e-09, 3, 0]}]]
[{'': [0.15999999999999986, 0.0], 'true,false': [nan, 0.15999999999999986], 'false': [0.0, nan], 'false,true': [nan, 0.0], 'true': [nan, 0.15999999999999986]}, {'': [nan, 0.2094819537330438], 'false': [0.20948195373304385, nan]}, {'': [0.15999999999999992, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [0.15999999999999992, nan]}, {'': [0.16487698050829605, nan], 'true,true': [0.16000000000000003, nan], 'true': [0.16000000000000003, 0.0]}, {'': [0.16, -2.3129646346357427e-18], 'true,true': [nan, 0.16], 'false': [-2.3129646346357427e-18, nan], 'false,true': [nan, -2.3129646346357427e-18], 'true': [0.16, nan]}, {'': [0.12549520364527042, nan]}, {'': [2.3129646346357427e-18, 0.16], 'true': [2.3129646346357427e-18, nan], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}, {'': [0.16, 2.3129646346357427e-18], 'false': [nan, 2.3129646346357427e-18], 'false,false': [2.3129646346357427e-18, nan], 'false,false,true': [nan, 2.3129646346357427e-18], 'true': [0.16, nan]}, {'': [-2.3129646346357427e-18, 0.16], 'true': [-2.3129646346357427e-18, nan], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}, {'': [0.16, 1.1564823173178713e-18], 'false,true,false': [nan, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
7;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.036 seconds
Total inference time: 0.66 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:14
{'Recall': 1.0, 'Learning time': 2.114, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.300536, 'parameter': {'Recall': 1.0, 'Learning time': 1.078, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.315696, 'AUC ROC': 0.906977, 'Inference time': 1.058}, 'AUC ROC': 0.906977, 'Inference time': 0.66}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,false,false;advisedby(A, R).;false;false
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;false,true;advisedby(J, H), publication(I, J).;true;false
0;true;advisedby(A, F), publication(E, F).;false;true
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,false,false;advisedby(A, S).;false;false
1;true,false,false;ta(C, I, J), advisedby(I, K).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;true
1;false;advisedby(A, L), publication(M, L).;true;true
1;false,false;advisedby(A, Q), projectmember(R, Q).;false;true
1;false,true;publication(M, N), tempadvisedby(P, N).;false;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(K, J), ta(L, J, M).;false;false
2;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
2;false,false,false;advisedby(A, R), publication(S, R).;false;false
2;false;publication(H, A), advisedby(A, I).;true;true
2;false,false;tempadvisedby(A, N).;true;true
2;false,true;tempadvisedby(J, I).;true;false
2;true;publication(E, F), tempadvisedby(G, F).;false;false
3;;inphase(A, B) :- ta(C, A, D).;true;true
3;true,false;ta(C, H, I), advisedby(H, J).;false;true
3;false;publication(M, A), tempadvisedby(A, N).;false;true
3;true,true;sameperson(A, E).;true;false
3;true,true,true;tempadvisedby(G, F).;false;false
3;true,false,false;tempadvisedby(A, K), publication(L, K).;false;false
3;false,false;tempadvisedby(A, P).;false;false
3;true;ta(C, E, D), advisedby(E, F).;true;true
4;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
4;false,true,true;ta(L, K, M), ta(N, A, P).;false;false
4;false,false,true;tempadvisedby(R, Q), publication(S, R).;false;false
4;true,true;ta(H, G, D), advisedby(A, F).;false;false
4;false;advisedby(A, I), publication(J, I).;true;true
4;false,false;tempadvisedby(A, Q).;true;false
4;false,true;advisedby(K, I), publication(J, K).;true;false
4;true;publication(E, F), tempadvisedby(G, F).;true;false
5;;inphase(A, B) :- ta(C, A, D).;true;true
5;false,false,true;tempadvisedby(N, M), publication(P, N).;false;false
5;false,false,false;advisedby(A, Q), publication(R, Q).;false;false
5;true,false;ta(C, G, H), advisedby(G, I).;false;false
5;false;advisedby(A, J), publication(K, A).;true;true
5;false,false;tempadvisedby(A, M).;true;true
5;false,true;tempadvisedby(L, J), publication(K, L).;false;false
5;true;ta(C, E, D), advisedby(E, F).;false;true
6;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
6;false,true,true;publication(K, I), ta(L, J, M).;false;false
6;false,false,true;publication(P, N).;false;false
6;false,false,false;tempadvisedby(A, Q), projectmember(R, Q).;false;false
6;false;ta(G, A, H), advisedby(A, I).;true;true
6;false,false;advisedby(A, N), publication(P, A).;true;true
6;false,true;advisedby(J, I), publication(K, J).;true;false
6;true;advisedby(A, E), publication(F, E).;false;false
7;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
7;false,true,true;ta(L, K, M), publication(N, K).;false;false
7;false,false,true;publication(R, Q).;false;false
7;false,false,false;advisedby(A, S), publication(T, S).;false;false
7;false;publication(H, A), advisedby(A, I).;true;true
7;false,false;tempadvisedby(A, P), advisedby(Q, P).;true;true
7;false,true;publication(J, I), tempadvisedby(K, I).;true;false
7;true;publication(E, F), tempadvisedby(G, F).;false;false
8;;inphase(A, B) :- advisedby(A, C), projectmember(D, C).;true;true
8;false,true,true;publication(K, G), ta(L, J, M).;false;false
8;false,false,true;publication(P, A), tempadvisedby(Q, N).;false;false
8;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
8;false;advisedby(A, G), ta(H, A, I).;true;true
8;false,false;advisedby(A, N).;true;true
8;false,true;advisedby(J, G), publication(K, J).;true;false
8;true;advisedby(A, E), publication(F, E).;false;false
9;;inphase(A, B) :- ta(C, A, D), publication(E, A).;false;true
9;false,true,false;advisedby(L, F), publication(M, L).;false;false
9;false,true,true;ta(I, G, J), ta(I, A, K).;false;false
9;false,false,true;publication(P, A).;false;false
9;false;tempadvisedby(A, F).;true;true
9;false,false;advisedby(A, N).;true;true
9;false,true;tempadvisedby(G, F), publication(H, G).;true;true
9;false,false,false;publication(Q, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(A, E), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(E, F) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(E, D) )
%   | then return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18192146118801372;  // std dev = 0,637, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return -0.15924596236498129;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.45485606368381726;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.10355270510823433;  // std dev = 0,485, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then if ( workedunder(A, E), movie(F, E) )
%   | then return -0.15193010576791544;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J), movie(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3231183873827137;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(E, D) )
%   | then return 0.06172112218115175;  // std dev = 0,390, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then if ( workedunder(A, E), movie(F, E) )
%   | then return -0.14066816747223074;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), movie(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2452113811716431;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.03909421274991032;  // std dev = 0,327, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.327261
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.05 seconds
Total inference time: 0.811 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(A, E), movie(C, E)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,false,false': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(E, D)'}, {'true,true': [0.668, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(A, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.637, 2, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(A, D)', 'true': 'movie(C, D), workedunder(E, D)'}, {'true,true,false': [0.0, 0, 2], 'true,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.485, 2, 2]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'true': 'workedunder(A, E), movie(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H), movie(I, A)', 'false,false,false': 'workedunder(A, J), movie(K, J)'}, {'false,false,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(E, D)'}, {'true,true': [0.39, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'true': 'workedunder(A, E), movie(F, E)', 'false': 'workedunder(A, G)', 'false,false': 'workedunder(A, H)', 'false,false,false': 'workedunder(A, I), movie(J, I)'}, {'false,false,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [0.327, 2, 2]}]]
[{'': [0.25, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.11145008534151418, nan], 'true': [0.11145008534151418, nan]}, {'': [0.10130960288467858, nan], 'true': [nan, 0.10130960288467858]}, {'': [0.09428032459930984, nan], 'true,true': [0.0, 0.0], 'true': [0.09428032459930984, nan]}, {'': [0.058862327373501014, nan]}, {'': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.03806110202535514, nan], 'true': [0.03806110202535514, nan]}, {'': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.02676555639629432, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
1;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
4;;genre(A, B) :- workedunder(A, D).;true;true
6;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
8;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.319496
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.58 seconds
Total inference time: 0.428 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:18
{'Recall': 1.0, 'Learning time': 1.63, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.319496, 'parameter': {'Recall': 1.0, 'Learning time': 1.05, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.327261, 'AUC ROC': 0.9, 'Inference time': 0.811}, 'AUC ROC': 0.9, 'Inference time': 0.428}


