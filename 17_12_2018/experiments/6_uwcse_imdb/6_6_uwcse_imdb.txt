Starting experiment #6 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, I, K), ta(L, A, M) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41134042446121344;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.24415759818152227;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.3558713724755001;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else return 0.25913075385470913;  // std dev = 0,497, 51,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( tempadvisedby(K, I), publication(L, A) )
%   | | then if ( publication(M, K) )
%   | | | then return 0.34631213729336735;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.2815348093581446;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.3769606593804927;  // std dev = 0,494, 47,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | else if ( advisedby(A, N), tempadvisedby(P, N) )
%   | | then return 0.2165769488652723;  // std dev = 0,489, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( advisedby(A, Q) )
%   | | | then return 0.4784818652238998;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3113953609660723;  // std dev = 3,305, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.10301770079059465;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.22427426519271726;  // std dev = 0,496, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( tempadvisedby(I, G) )
%   | | then if ( publication(H, I) )
%   | | | then return 0.08167584771586571;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27241309189005447;  // std dev = 2,868, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.38301761087019187;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J), advisedby(K, J) )
%   | | then if ( ta(L, A, M), ta(N, K, M) )
%   | | | then return 0.18169580595786072;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.29645221252466825;  // std dev = 3,513, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, P), publication(Q, P) )
%   | | | then return 0.2697144183169251;  // std dev = 4,189, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.20249679943473708;  // std dev = 3,269, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then if ( publication(D, C) )
%   | then return 0.1016344186752705;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.219810027057466;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( ta(E, A, F), advisedby(A, G) )
%   | then if ( advisedby(H, G), publication(I, H) )
%   | | then if ( ta(J, H, K), publication(I, G) )
%   | | | then return 0.208266181507025;  // std dev = 3,246, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.12193428316605474;  // std dev = 2,745, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0.3493709104390199;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(L, A) )
%   | | then if ( publication(L, M), advisedby(N, M) )
%   | | | then return 0.22413250317714678;  // std dev = 3,613, 53,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.34354565702918255;  // std dev = 1,408, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.22879332210979136;  // std dev = 3,878, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.18579505013433395;  // std dev = 3,988, 65,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.1634687996656196;  // std dev = 0,494, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( ta(J, G, D), tempadvisedby(K, I) )
%   | | | then return 0.35379448905702415;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09091592033664116;  // std dev = 2,868, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( tempadvisedby(A, L), publication(M, L) )
%   | | | then return 0.23045518365025439;  // std dev = 1,457, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.06035982241286118;  // std dev = 1,102, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, N), publication(P, N) )
%   | then if ( tempadvisedby(Q, N), ta(R, Q, S) )
%   | | then return 0.21434962271690736;  // std dev = 0,493, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( advisedby(T, N), ta(U, T, W) )
%   | | | then return 0.18212621589604247;  // std dev = 3,109, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.04108552449093279;  // std dev = 1,310, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.15760620183874652;  // std dev = 0,494, 65,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.2175804094138584;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( publication(E, A), tempadvisedby(A, F) )
%   | then if ( publication(E, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.017161868885321268;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.056151700417776486;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.14543290026136002;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(I, A, J), advisedby(A, K) )
%   | | then if ( advisedby(L, K), publication(M, L) )
%   | | | then return 0.09928662654730647;  // std dev = 4,259, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | | else return 0.2302575141804797;  // std dev = 1,136, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.1468763328419117;  // std dev = 3,877, 62,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   | | | else return 0.12354756961720957;  // std dev = 5,435, 121,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=60 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( ta(C, A, D), advisedby(A, E) )
%   then if ( advisedby(F, E), publication(G, F) )
%   | then if ( ta(H, F, I), publication(G, E) )
%   | | then if ( samecourse(C, H) )
%   | | | then return 0.0568379904089453;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.2051691482718811;  // std dev = 1,808, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( publication(G, E) )
%   | | | then return 0.019919281431821242;  // std dev = 2,303, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.07566053381574357;  // std dev = 1,488, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.17332633389640298;  // std dev = 1,136, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( advisedby(A, J), tempadvisedby(K, J) )
%   | then if ( ta(L, K, M), publication(N, J) )
%   | | then return 0.13137160716908855;  // std dev = 0,493, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( projectmember(P, J) )
%   | | | then return 0.021182298786152978;  // std dev = 1,741, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.05894932600806177;  // std dev = 2,398, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else return 0.10620491582354767;  // std dev = 0,492, 132,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=68 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D), advisedby(A, E) )
%   then if ( publication(F, E) )
%   | then return 0.0685749629127152;  // std dev = 0,491, 75,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=36 */
%   | else return -0.015820360645829923;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, G), tempadvisedby(H, G) )
%   | then if ( publication(I, G), ta(J, H, K) )
%   | | then if ( advisedby(L, G), ta(J, L, M) )
%   | | | then return 0.03817378492460559;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12654763989083506;  // std dev = 2,286, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( ta(N, H, P) )
%   | | | then return -0.01579305210214223;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04438435861863788;  // std dev = 2,727, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( publication(Q, A), advisedby(A, R) )
%   | | then return 0.1432578040197081;  // std dev = 0,471, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( tempadvisedby(A, S), projectmember(T, S) )
%   | | | then return 0.13891952042253036;  // std dev = 1,067, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06817806590092217;  // std dev = 5,185, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.025627406388001355;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.002443485032487791;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.0694479378026228;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( advisedby(A, G), projectmember(H, G) )
%   | then if ( advisedby(A, I), publication(J, I) )
%   | | then return 0.5011198764093293;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.012275079153723799;  // std dev = 0,482, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( ta(K, A, L), advisedby(A, M) )
%   | | then if ( publication(N, M), tempadvisedby(P, M) )
%   | | | then return 0.04588544151431769;  // std dev = 3,653, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.012492888921828888;  // std dev = 2,339, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( tempadvisedby(A, Q) )
%   | | | then return 0.07211271811344364;  // std dev = 3,850, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.053942932871273316;  // std dev = 5,242, 113,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=59 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return -0.0173692120277936;  // std dev = 0,489, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.0018581110985943284;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03632986582949349;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( advisedby(H, C), publication(I, H) )
%   | | then return 0.10316132916108374;  // std dev = 0,486, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( ta(J, A, K), publication(L, C) )
%   | | | then return 0.09369300960396947;  // std dev = 1,272, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03896848679180939;  // std dev = 1,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( advisedby(A, M) )
%   | then return 0.042274353748838714;  // std dev = 0,490, 180,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=91 */
%   | else if ( publication(N, A) )
%   | | then return 0.08753048542420548;  // std dev = 0,494, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.02275073166068371;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(J, I, K), ta(L, A, M).;false;false
0;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
0;false,false,false;publication(R, A).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,false;tempadvisedby(A, N).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
0;true;advisedby(A, F), publication(E, F).;false;false
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,true,true;publication(M, K).;false;false
1;false,false,false;advisedby(A, Q).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;false
1;false;advisedby(A, I), publication(J, I).;true;true
1;false,false;advisedby(A, N), tempadvisedby(P, N).;false;true
1;false,true;tempadvisedby(K, I), publication(L, A).;true;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(H, I).;false;false
2;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
2;false,false,false;advisedby(A, P), publication(Q, P).;false;false
2;false;advisedby(A, G), publication(H, A).;true;true
2;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
2;false,true;tempadvisedby(I, G).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;false
3;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
3;false,true,true;ta(J, H, K), publication(I, G).;false;false
3;false,false,true;publication(L, M), advisedby(N, M).;false;false
3;false,false,false;tempadvisedby(A, P).;false;false
3;false;ta(E, A, F), advisedby(A, G).;true;true
3;false,false;publication(L, A).;true;true
3;false,true;advisedby(H, G), publication(I, H).;true;false
3;true;publication(D, C).;false;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;false,true,false;advisedby(T, N), ta(U, T, W).;false;false
4;true,false,true;ta(J, G, D), tempadvisedby(K, I).;false;false
4;false;advisedby(A, N), publication(P, N).;true;false
4;true,false;ta(C, G, H), advisedby(G, I).;true;true
4;true,false,false;tempadvisedby(A, L), publication(M, L).;false;false
4;false,true;tempadvisedby(Q, N), ta(R, Q, S).;false;true
4;true;ta(C, E, D), advisedby(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
5;false,true,true;ta(G, A, H).;false;false
5;false,false,true;advisedby(L, K), publication(M, L).;false;false
5;false;publication(E, A), tempadvisedby(A, F).;true;true
5;false,false;ta(I, A, J), advisedby(A, K).;true;true
5;false,true;publication(E, F).;true;false
5;false,false,false;publication(N, A).;false;false
6;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
6;false,true,false;projectmember(P, J).;false;false
6;true,true;ta(H, F, I), publication(G, E).;true;true
6;true,true,true;samecourse(C, H).;false;false
6;false;advisedby(A, J), tempadvisedby(K, J).;true;false
6;true,true,false;publication(G, E).;false;false
6;false,true;ta(L, K, M), publication(N, J).;false;true
6;true;advisedby(F, E), publication(G, F).;true;false
7;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
7;false,true,false;ta(N, H, P).;false;false
7;false,true,true;advisedby(L, G), ta(J, L, M).;false;false
7;false,false,false;tempadvisedby(A, S), projectmember(T, S).;false;false
7;false;advisedby(A, G), tempadvisedby(H, G).;true;true
7;false,false;publication(Q, A), advisedby(A, R).;false;true
7;false,true;publication(I, G), ta(J, H, K).;true;true
7;true;publication(F, E).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;publication(N, M), tempadvisedby(P, M).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;publication(N, A).;false;false
9;false;advisedby(A, M).;false;true
9;true,true;ta(F, D, G).;false;true
9;true,false;advisedby(H, C), publication(I, H).;false;true
9;true,false,false;ta(J, A, K), publication(L, C).;false;false
9;true,true,false;sameperson(A, D), publication(E, C).;false;false
9;true;tempadvisedby(D, C), publication(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.2970143868412816;  // std dev = 1,982, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6558459784192013;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.16180800894656572;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then if ( workedunder(F, E), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14104413482597986;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(H, I), workedunder(J, I) )
%   | | | then return 0.49724770270922425;  // std dev = 3,65e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1253983130559841;  // std dev = 1,174, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.1391592569966615;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0.3466821686266939;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12331023528608184;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2728248244400908;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C) )
%   | then return -0.11058691659424082;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22215320802994512;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.10016911633899825;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1861360256516634;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, C), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, C) )
%   | | | then return -0.09149500261232797;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(J, A) )
%   | | then return 0.15956724080281673;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.354363
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.113 seconds
Total inference time: 0.736 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 11], 'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.982, 11, 11], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.98e-08, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [1.86e-09, 11, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false,true': 'workedunder(F, E), workedunder(G, F)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(H, I), workedunder(J, I)'}, {'false,true,false': [0.0, 11, 0], 'false,false,true,true': [3.65e-08, 0, 11], 'false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.174, 11, 11]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(H, A)'}, {'false,false,false,true': [1.49e-08, 0, 11], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'false': 'workedunder(A, F), workedunder(G, F)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [9.13e-09, 11, 0], 'false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(G, A), workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [0.0, 0, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [1.05e-08, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [1.05e-08, 0, 11], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,false': 'workedunder(H, C)', 'true,false': 'workedunder(F, C), workedunder(G, F)', 'false': 'workedunder(A, I)', 'false,false': 'workedunder(J, A)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,false,false,true': [0.0, 11, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 11], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, -1.6148698540002277e-16]}, {'': [nan, 0.17847162811629394], 'false': [0.17847162811629388, nan]}, {'': [8.074349270001139e-17, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'true': [nan, 8.074349270001139e-17]}, {'': [nan, 0.1018541174660169], 'false,true': [nan, -5.046468293750712e-18], 'false': [-5.046468293750712e-18, 1.2111523905001707e-16], 'false,false': [1.2111523905001707e-16, nan], 'false,false,true': [1.2111523905001707e-16, nan]}, {'': [0.0626019917983779, nan]}, {'': [-1.766263902812749e-17, 2.0185873175002847e-17], 'false': [nan, 2.0185873175002847e-17], 'false,false': [nan, 2.0185873175002847e-17], 'false,false,false': [2.0185873175002847e-17, nan]}, {'': [7.569702440626067e-18, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'true': [nan, 7.569702440626067e-18]}, {'': [1.0092936587501423e-17, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17], 'true': [1.0092936587501423e-17, nan]}, {'': [nan, 0.020492658582573237], 'false': [0.0, 1.0092936587501423e-17], 'false,false': [nan, 1.0092936587501423e-17], 'false,true': [0.0, nan], 'false,false,false': [nan, 1.0092936587501423e-17]}, {'': [-1.261617073437678e-18, -1.5139404881252134e-17], 'true,false,false': [-1.261617073437678e-18, nan], 'true,false': [nan, -1.261617073437678e-18], 'false': [nan, -1.5139404881252134e-17], 'false,false': [-1.5139404881252134e-17, nan], 'true': [nan, -1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(A, E).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
6;;genre(A, B) :- workedunder(A, C).;true;true
7;;genre(A, B) :- workedunder(A, C).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.801 seconds
Total inference time: 0.557 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:56:00
{'Recall': 1.0, 'Learning time': 1.9140000000000001, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.352709, 'parameter': {'Recall': 1.0, 'Learning time': 1.113, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.354363, 'AUC ROC': 0.875, 'Inference time': 0.736}, 'AUC ROC': 0.875, 'Inference time': 0.557}


Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(J, I, K), ta(L, A, M).;false;false
0;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
0;false,false,false;publication(R, A).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,false;tempadvisedby(A, N).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
0;true;advisedby(A, F), publication(E, F).;false;false
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,true,true;publication(M, K).;false;false
1;false,false,false;advisedby(A, Q).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;false
1;false;advisedby(A, I), publication(J, I).;true;true
1;false,false;advisedby(A, N), tempadvisedby(P, N).;false;true
1;false,true;tempadvisedby(K, I), publication(L, A).;true;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(H, I).;false;false
2;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
2;false,false,false;advisedby(A, P), publication(Q, P).;false;false
2;false;advisedby(A, G), publication(H, A).;true;true
2;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
2;false,true;tempadvisedby(I, G).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;false
3;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
3;false,true,true;ta(J, H, K), publication(I, G).;false;false
3;false,false,true;publication(L, M), advisedby(N, M).;false;false
3;false,false,false;tempadvisedby(A, P).;false;false
3;false;ta(E, A, F), advisedby(A, G).;true;true
3;false,false;publication(L, A).;true;true
3;false,true;advisedby(H, G), publication(I, H).;true;false
3;true;publication(D, C).;false;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;false,true,false;advisedby(T, N), ta(U, T, W).;false;false
4;true,false,true;ta(J, G, D), tempadvisedby(K, I).;false;false
4;false;advisedby(A, N), publication(P, N).;true;false
4;true,false;ta(C, G, H), advisedby(G, I).;true;true
4;true,false,false;tempadvisedby(A, L), publication(M, L).;false;false
4;false,true;tempadvisedby(Q, N), ta(R, Q, S).;false;true
4;true;ta(C, E, D), advisedby(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
5;false,true,true;ta(G, A, H).;false;false
5;false,false,true;advisedby(L, K), publication(M, L).;false;false
5;false;publication(E, A), tempadvisedby(A, F).;true;true
5;false,false;ta(I, A, J), advisedby(A, K).;true;true
5;false,true;publication(E, F).;true;false
5;false,false,false;publication(N, A).;false;false
6;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
6;false,true,false;projectmember(P, J).;false;false
6;true,true;ta(H, F, I), publication(G, E).;true;true
6;true,true,true;samecourse(C, H).;false;false
6;false;advisedby(A, J), tempadvisedby(K, J).;true;false
6;true,true,false;publication(G, E).;false;false
6;false,true;ta(L, K, M), publication(N, J).;false;true
6;true;advisedby(F, E), publication(G, F).;true;false
7;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
7;false,true,false;ta(N, H, P).;false;false
7;false,true,true;advisedby(L, G), ta(J, L, M).;false;false
7;false,false,false;tempadvisedby(A, S), projectmember(T, S).;false;false
7;false;advisedby(A, G), tempadvisedby(H, G).;true;true
7;false,false;publication(Q, A), advisedby(A, R).;false;true
7;false,true;publication(I, G), ta(J, H, K).;true;true
7;true;publication(F, E).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;publication(N, M), tempadvisedby(P, M).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;publication(N, A).;false;false
9;false;advisedby(A, M).;false;true
9;true,true;ta(F, D, G).;false;true
9;true,false;advisedby(H, C), publication(I, H).;false;true
9;true,false,false;ta(J, A, K), publication(L, C).;false;false
9;true,true,false;sameperson(A, D), publication(E, C).;false;false
9;true;tempadvisedby(D, C), publication(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.29881865438287963;  // std dev = 2,140, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5956741381003415;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.16205286419737067;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then if ( workedunder(F, E), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14123316446906517;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(H, I), workedunder(J, I) )
%   | | | then return 0.4541073297631877;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.12763207079627112;  // std dev = 1,490, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.13959157300755082;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0.3106659408028754;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12365353467728311;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.239961987186232;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C) )
%   | then return -0.11086542968708621;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1904315178121176;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.10039919679464435;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15481597359727364;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, C), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, C) )
%   | | | then return -0.09168802666386101;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(J, A) )
%   | | then return 0.1284028475472991;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.329111
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.014 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12], 'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.14, 12, 12], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false,true': 'workedunder(F, E), workedunder(G, F)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(H, I), workedunder(J, I)'}, {'false,true,false': [0.0, 11, 0], 'false,false,true,true': [0.961, 1, 12], 'false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.49, 12, 12]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(H, A)'}, {'false,false,false,true': [0.961, 1, 12], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [9.13e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'false': 'workedunder(A, F), workedunder(G, F)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(G, A), workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [0.961, 1, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.961, 1, 12], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,false': 'workedunder(H, C)', 'true,false': 'workedunder(F, C), workedunder(G, F)', 'false': 'workedunder(A, I)', 'false,false': 'workedunder(J, A)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,false,false,true': [0.0, 11, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.961, 1, 12], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.07100591715976314]}, {'': [nan, 0.1907686737562356], 'false': [0.19076867375623552, nan]}, {'': [0.07100591715976333, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.07100591715976333]}, {'': [nan, 0.1264537840906992], 'false,true': [nan, -5.046468293750712e-18], 'false': [-5.046468293750712e-18, 0.07100591715976344], 'false,false': [0.07100591715976344, nan], 'false,false,true': [0.07100591715976344, nan]}, {'': [0.09244649670523199, nan]}, {'': [7.569702440626067e-18, 0.0710059171597633], 'false': [nan, 0.0710059171597633], 'false,false': [nan, 0.0710059171597633], 'false,false,false': [0.0710059171597633, nan]}, {'': [-7.569702440626067e-18, 0.07100591715976329], 'false': [nan, 0.07100591715976329], 'true': [nan, -7.569702440626067e-18]}, {'': [-2.523234146875356e-18, 0.07100591715976332], 'true': [-2.523234146875356e-18, nan], 'false': [nan, 0.07100591715976332], 'false,false': [nan, 0.07100591715976332], 'false,false,false': [nan, 0.07100591715976332]}, {'': [nan, 0.054632153040252214], 'false': [0.0, 0.07100591715976329], 'false,false': [nan, 0.07100591715976329], 'false,true': [0.0, nan], 'false,false,false': [nan, 0.07100591715976329]}, {'': [-5.046468293750712e-18, 0.07100591715976333], 'true,false,false': [-5.046468293750712e-18, nan], 'true,false': [nan, -5.046468293750712e-18], 'false': [nan, 0.07100591715976333], 'false,false': [0.07100591715976333, nan], 'true': [nan, -5.046468293750712e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(A, E).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
6;;genre(A, B) :- workedunder(A, C).;true;true
7;;genre(A, B) :- workedunder(A, C).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.038 seconds
Total inference time: 0.512 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:56:03
{'Recall': 1.0, 'Learning time': 2.052, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.320018, 'parameter': {'Recall': 1.0, 'Learning time': 1.014, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.329111, 'AUC ROC': 0.885714, 'Inference time': 0.72}, 'AUC ROC': 0.885714, 'Inference time': 0.512}


Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(J, I, K), ta(L, A, M).;false;false
0;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
0;false,false,false;publication(R, A).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,false;tempadvisedby(A, N).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
0;true;advisedby(A, F), publication(E, F).;false;false
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,true,true;publication(M, K).;false;false
1;false,false,false;advisedby(A, Q).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;false
1;false;advisedby(A, I), publication(J, I).;true;true
1;false,false;advisedby(A, N), tempadvisedby(P, N).;false;true
1;false,true;tempadvisedby(K, I), publication(L, A).;true;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(H, I).;false;false
2;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
2;false,false,false;advisedby(A, P), publication(Q, P).;false;false
2;false;advisedby(A, G), publication(H, A).;true;true
2;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
2;false,true;tempadvisedby(I, G).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;false
3;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
3;false,true,true;ta(J, H, K), publication(I, G).;false;false
3;false,false,true;publication(L, M), advisedby(N, M).;false;false
3;false,false,false;tempadvisedby(A, P).;false;false
3;false;ta(E, A, F), advisedby(A, G).;true;true
3;false,false;publication(L, A).;true;true
3;false,true;advisedby(H, G), publication(I, H).;true;false
3;true;publication(D, C).;false;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;false,true,false;advisedby(T, N), ta(U, T, W).;false;false
4;true,false,true;ta(J, G, D), tempadvisedby(K, I).;false;false
4;false;advisedby(A, N), publication(P, N).;true;false
4;true,false;ta(C, G, H), advisedby(G, I).;true;true
4;true,false,false;tempadvisedby(A, L), publication(M, L).;false;false
4;false,true;tempadvisedby(Q, N), ta(R, Q, S).;false;true
4;true;ta(C, E, D), advisedby(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
5;false,true,true;ta(G, A, H).;false;false
5;false,false,true;advisedby(L, K), publication(M, L).;false;false
5;false;publication(E, A), tempadvisedby(A, F).;true;true
5;false,false;ta(I, A, J), advisedby(A, K).;true;true
5;false,true;publication(E, F).;true;false
5;false,false,false;publication(N, A).;false;false
6;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
6;false,true,false;projectmember(P, J).;false;false
6;true,true;ta(H, F, I), publication(G, E).;true;true
6;true,true,true;samecourse(C, H).;false;false
6;false;advisedby(A, J), tempadvisedby(K, J).;true;false
6;true,true,false;publication(G, E).;false;false
6;false,true;ta(L, K, M), publication(N, J).;false;true
6;true;advisedby(F, E), publication(G, F).;true;false
7;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
7;false,true,false;ta(N, H, P).;false;false
7;false,true,true;advisedby(L, G), ta(J, L, M).;false;false
7;false,false,false;tempadvisedby(A, S), projectmember(T, S).;false;false
7;false;advisedby(A, G), tempadvisedby(H, G).;true;true
7;false,false;publication(Q, A), advisedby(A, R).;false;true
7;false,true;publication(I, G), ta(J, H, K).;true;true
7;true;publication(F, E).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;publication(N, M), tempadvisedby(P, M).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;publication(N, A).;false;false
9;false;advisedby(A, M).;false;true
9;true,true;ta(F, D, G).;false;true
9;true,false;advisedby(H, C), publication(I, H).;false;true
9;true,false,false;ta(J, A, K), publication(L, C).;false;false
9;true,true,false;sameperson(A, D), publication(E, C).;false;false
9;true;tempadvisedby(D, C), publication(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.3036065954523843;  // std dev = 2,821, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.43468426925455816;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.16270407948312035;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then if ( workedunder(F, E), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14173563788658616;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(H, I), workedunder(J, I) )
%   | | | then return 0.33858821103965575;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13960015059487205;  // std dev = 2,480, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.14147606171050991;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0.2213429564103208;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12514773661350764;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16621611402930928;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C) )
%   | then return -0.11207611012319398;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12559947183419798;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.10139826519938268;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09571251699892638;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, C), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, C) )
%   | | | then return -0.09252541389429371;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(J, A) )
%   | | then return 0.07354353586482087;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.28432
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.296 seconds
Total inference time: 0.707 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18], 'false,true,false': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.821, 18, 18], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [1.86e-09, 11, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false,true': 'workedunder(F, E), workedunder(G, F)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(H, I), workedunder(J, I)'}, {'false,true,false': [5.27e-09, 11, 0], 'false,false,true,true': [2.245, 7, 18], 'false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.48, 18, 18]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(H, A)'}, {'false,false,false,true': [2.245, 7, 18], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'false': 'workedunder(A, F), workedunder(G, F)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 11, 0], 'false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(G, A), workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [2.245, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [2.245, 7, 18], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,false': 'workedunder(H, C)', 'true,false': 'workedunder(F, C), workedunder(G, F)', 'false': 'workedunder(A, I)', 'false,false': 'workedunder(J, A)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,false,false,true': [7.45e-09, 11, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.245, 7, 18], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'false,true': [nan, -1.0092936587501423e-17], 'true': [nan, 0.2015999999999996]}, {'': [nan, 0.22099738300738758], 'false': [0.22099738300738728, nan]}, {'': [0.20159999999999986, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'true': [nan, 0.20159999999999986]}, {'': [nan, 0.1889548803688369], 'false,true': [nan, 2.523234146875356e-18], 'false': [2.523234146875356e-18, 0.20159999999999983], 'false,false': [0.20159999999999983, nan], 'false,false,true': [0.20159999999999983, nan]}, {'': [0.17088813786158003, nan]}, {'': [0.0, 0.2016], 'false': [nan, 0.2016], 'false,false': [nan, 0.2016], 'false,false,false': [0.2016, nan]}, {'': [5.046468293750712e-18, 0.2016], 'false': [nan, 0.2016], 'true': [nan, 5.046468293750712e-18]}, {'': [2.523234146875356e-18, 0.20159999999999997], 'true': [2.523234146875356e-18, nan], 'false': [nan, 0.20159999999999997], 'false,false': [nan, 0.20159999999999997], 'false,false,false': [nan, 0.20159999999999997]}, {'': [nan, 0.14824419878563122], 'false': [-1.261617073437678e-18, 0.20160000000000003], 'false,false': [nan, 0.20160000000000003], 'false,true': [-1.261617073437678e-18, nan], 'false,false,false': [nan, 0.20160000000000003]}, {'': [5.046468293750712e-18, 0.20159999999999997], 'true,false,false': [5.046468293750712e-18, nan], 'true,false': [nan, 5.046468293750712e-18], 'false': [nan, 0.20159999999999997], 'false,false': [0.20159999999999997, nan], 'true': [nan, 5.046468293750712e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(A, E).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
6;;genre(A, B) :- workedunder(A, C).;true;true
7;;genre(A, B) :- workedunder(A, C).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.098 seconds
Total inference time: 0.509 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:56:07
{'Recall': 1.0, 'Learning time': 2.394, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.264596, 'parameter': {'Recall': 1.0, 'Learning time': 1.296, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.28432, 'AUC ROC': 0.965517, 'Inference time': 0.707}, 'AUC ROC': 0.965517, 'Inference time': 0.509}


Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(J, I, K), ta(L, A, M).;false;false
0;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
0;false,false,false;publication(R, A).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,false;tempadvisedby(A, N).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
0;true;advisedby(A, F), publication(E, F).;false;false
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,true,true;publication(M, K).;false;false
1;false,false,false;advisedby(A, Q).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;false
1;false;advisedby(A, I), publication(J, I).;true;true
1;false,false;advisedby(A, N), tempadvisedby(P, N).;false;true
1;false,true;tempadvisedby(K, I), publication(L, A).;true;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(H, I).;false;false
2;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
2;false,false,false;advisedby(A, P), publication(Q, P).;false;false
2;false;advisedby(A, G), publication(H, A).;true;true
2;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
2;false,true;tempadvisedby(I, G).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;false
3;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
3;false,true,true;ta(J, H, K), publication(I, G).;false;false
3;false,false,true;publication(L, M), advisedby(N, M).;false;false
3;false,false,false;tempadvisedby(A, P).;false;false
3;false;ta(E, A, F), advisedby(A, G).;true;true
3;false,false;publication(L, A).;true;true
3;false,true;advisedby(H, G), publication(I, H).;true;false
3;true;publication(D, C).;false;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;false,true,false;advisedby(T, N), ta(U, T, W).;false;false
4;true,false,true;ta(J, G, D), tempadvisedby(K, I).;false;false
4;false;advisedby(A, N), publication(P, N).;true;false
4;true,false;ta(C, G, H), advisedby(G, I).;true;true
4;true,false,false;tempadvisedby(A, L), publication(M, L).;false;false
4;false,true;tempadvisedby(Q, N), ta(R, Q, S).;false;true
4;true;ta(C, E, D), advisedby(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
5;false,true,true;ta(G, A, H).;false;false
5;false,false,true;advisedby(L, K), publication(M, L).;false;false
5;false;publication(E, A), tempadvisedby(A, F).;true;true
5;false,false;ta(I, A, J), advisedby(A, K).;true;true
5;false,true;publication(E, F).;true;false
5;false,false,false;publication(N, A).;false;false
6;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
6;false,true,false;projectmember(P, J).;false;false
6;true,true;ta(H, F, I), publication(G, E).;true;true
6;true,true,true;samecourse(C, H).;false;false
6;false;advisedby(A, J), tempadvisedby(K, J).;true;false
6;true,true,false;publication(G, E).;false;false
6;false,true;ta(L, K, M), publication(N, J).;false;true
6;true;advisedby(F, E), publication(G, F).;true;false
7;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
7;false,true,false;ta(N, H, P).;false;false
7;false,true,true;advisedby(L, G), ta(J, L, M).;false;false
7;false,false,false;tempadvisedby(A, S), projectmember(T, S).;false;false
7;false;advisedby(A, G), tempadvisedby(H, G).;true;true
7;false,false;publication(Q, A), advisedby(A, R).;false;true
7;false,true;publication(I, G), ta(J, H, K).;true;true
7;true;publication(F, E).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;publication(N, M), tempadvisedby(P, M).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;publication(N, A).;false;false
9;false;advisedby(A, M).;false;true
9;true,true;ta(F, D, G).;false;true
9;true,false;advisedby(H, C), publication(I, H).;false;true
9;true,false,false;ta(J, A, K), publication(L, C).;false;false
9;true,true,false;sameperson(A, D), publication(E, C).;false;false
9;true;tempadvisedby(D, C), publication(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(G, E), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return 0.30172034469051234;  // std dev = 1,295, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(A, D), workedunder(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.498492746475355;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(A, E), workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.16244727624482774;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then if ( workedunder(F, E), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14153753674906433;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( workedunder(H, A) )
%   | | then if ( workedunder(H, I), workedunder(J, I) )
%   | | | then return 0.38458835138867936;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13384137812808872;  // std dev = 1,059, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.14060499487824174;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0.25591682079435957;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12445752747281268;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( workedunder(A, F), workedunder(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.19347973430988757;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C) )
%   | then return -0.11151717745094065;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), workedunder(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14837532834707873;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then if ( workedunder(A, G), workedunder(H, G) )
%   | | then return -0.1009372445824495;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11549272727963962;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), workedunder(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, C), workedunder(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, C) )
%   | | | then return -0.09213915703706776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(J, A) )
%   | | then return 0.09109819550123684;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.316094
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.846 seconds
Total inference time: 0.799 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,true': 'workedunder(G, E), workedunder(F, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,true,false': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.295, 4, 4], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(A, E), workedunder(F, A)', 'false,false': 'workedunder(A, G), workedunder(H, G)', 'true': 'workedunder(A, D), workedunder(C, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, A)', 'false,true': 'workedunder(F, E), workedunder(G, F)', 'false': 'workedunder(A, E)', 'false,false': 'workedunder(H, A)', 'false,false,true': 'workedunder(H, I), workedunder(J, I)'}, {'false,true,false': [0.0, 3, 0], 'false,false,true,true': [0.894, 1, 4], 'false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.059, 4, 4]}], ['genre(A, B)', {'': 'workedunder(A, C), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(A, F)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(H, A)'}, {'false,false,false,true': [0.894, 1, 4], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'false': 'workedunder(A, F), workedunder(G, F)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.63e-09, 3, 0], 'false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'workedunder(D, C)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(G, A), workedunder(A, H)', 'false,false,false': 'workedunder(A, I), workedunder(J, I)'}, {'false,false,false,false': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(A, D)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'workedunder(A, I)', 'false,true': 'workedunder(A, G), workedunder(H, G)', 'false,false,false': 'workedunder(A, J)'}, {'false,false,false,false': [0.894, 1, 4], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,false,false': 'workedunder(H, C)', 'true,false': 'workedunder(F, C), workedunder(G, F)', 'false': 'workedunder(A, I)', 'false,false': 'workedunder(J, A)', 'true': 'workedunder(D, C), workedunder(E, D)'}, {'true,false,false,true': [0.0, 3, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.15999999999999986, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0], 'true': [nan, 0.15999999999999986]}, {'': [nan, 0.2094819537330438], 'false': [0.20948195373304385, nan]}, {'': [0.15999999999999992, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'true': [nan, 0.15999999999999992]}, {'': [nan, 0.16487698050829602], 'false,true': [nan, 0.0], 'false': [0.0, 0.16000000000000003], 'false,false': [0.16000000000000003, nan], 'false,false,true': [0.16000000000000003, nan]}, {'': [0.1402603479688913, nan]}, {'': [0.0, 0.15999999999999998], 'false': [nan, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [0.15999999999999998, nan]}, {'': [2.3129646346357427e-18, 0.16], 'false': [nan, 0.16], 'true': [nan, 2.3129646346357427e-18]}, {'': [0.0, 0.15999999999999998], 'true': [0.0, nan], 'false': [nan, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}, {'': [nan, 0.11097857798130266], 'false': [0.0, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,true': [0.0, nan], 'false,false,false': [nan, 0.15999999999999998]}, {'': [-1.1564823173178713e-18, 0.15999999999999998], 'true,false,false': [-1.1564823173178713e-18, nan], 'true,false': [nan, -1.1564823173178713e-18], 'false': [nan, 0.15999999999999998], 'false,false': [0.15999999999999998, nan], 'true': [nan, -1.1564823173178713e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(A, E).;true;true
5;;genre(A, B) :- workedunder(A, C), workedunder(D, C).;true;true
6;;genre(A, B) :- workedunder(A, C).;true;true
7;;genre(A, B) :- workedunder(A, C).;true;true
8;;genre(A, B) :- workedunder(A, E), workedunder(F, E).;true;true
9;;genre(A, B) :- workedunder(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(A, C), workedunder(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.722 seconds
Total inference time: 0.561 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:56:11
{'Recall': 1.0, 'Learning time': 1.568, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.300536, 'parameter': {'Recall': 1.0, 'Learning time': 0.846, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.316094, 'AUC ROC': 0.906977, 'Inference time': 0.799}, 'AUC ROC': 0.906977, 'Inference time': 0.561}


Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false,true,true;ta(J, I, K), ta(L, A, M).;false;false
0;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
0;false,false,false;publication(R, A).;false;false
0;false;advisedby(A, G), publication(H, G).;true;true
0;false,false;tempadvisedby(A, N).;true;true
0;false,true;advisedby(I, G), publication(H, I).;true;false
0;true;advisedby(A, F), publication(E, F).;false;false
1;;inphase(A, B) :- ta(C, A, D).;true;true
1;false,true,true;publication(M, K).;false;false
1;false,false,false;advisedby(A, Q).;false;false
1;true,false;ta(C, G, D), advisedby(G, H).;false;false
1;false;advisedby(A, I), publication(J, I).;true;true
1;false,false;advisedby(A, N), tempadvisedby(P, N).;false;true
1;false,true;tempadvisedby(K, I), publication(L, A).;true;false
1;true;publication(E, A), advisedby(A, F).;false;true
2;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
2;false,true,true;publication(H, I).;false;false
2;false,false,true;ta(L, A, M), ta(N, K, M).;false;false
2;false,false,false;advisedby(A, P), publication(Q, P).;false;false
2;false;advisedby(A, G), publication(H, A).;true;true
2;false,false;tempadvisedby(A, J), advisedby(K, J).;true;true
2;false,true;tempadvisedby(I, G).;true;false
2;true;tempadvisedby(A, F), publication(E, F).;false;false
3;;inphase(A, B) :- tempadvisedby(A, C), publication(D, A).;true;true
3;false,true,true;ta(J, H, K), publication(I, G).;false;false
3;false,false,true;publication(L, M), advisedby(N, M).;false;false
3;false,false,false;tempadvisedby(A, P).;false;false
3;false;ta(E, A, F), advisedby(A, G).;true;true
3;false,false;publication(L, A).;true;true
3;false,true;advisedby(H, G), publication(I, H).;true;false
3;true;publication(D, C).;false;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;false,true,false;advisedby(T, N), ta(U, T, W).;false;false
4;true,false,true;ta(J, G, D), tempadvisedby(K, I).;false;false
4;false;advisedby(A, N), publication(P, N).;true;false
4;true,false;ta(C, G, H), advisedby(G, I).;true;true
4;true,false,false;tempadvisedby(A, L), publication(M, L).;false;false
4;false,true;tempadvisedby(Q, N), ta(R, Q, S).;false;true
4;true;ta(C, E, D), advisedby(E, F).;false;true
5;;inphase(A, B) :- tempadvisedby(A, C), projectmember(D, C).;false;true
5;false,true,true;ta(G, A, H).;false;false
5;false,false,true;advisedby(L, K), publication(M, L).;false;false
5;false;publication(E, A), tempadvisedby(A, F).;true;true
5;false,false;ta(I, A, J), advisedby(A, K).;true;true
5;false,true;publication(E, F).;true;false
5;false,false,false;publication(N, A).;false;false
6;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
6;false,true,false;projectmember(P, J).;false;false
6;true,true;ta(H, F, I), publication(G, E).;true;true
6;true,true,true;samecourse(C, H).;false;false
6;false;advisedby(A, J), tempadvisedby(K, J).;true;false
6;true,true,false;publication(G, E).;false;false
6;false,true;ta(L, K, M), publication(N, J).;false;true
6;true;advisedby(F, E), publication(G, F).;true;false
7;;inphase(A, B) :- ta(C, A, D), advisedby(A, E).;true;true
7;false,true,false;ta(N, H, P).;false;false
7;false,true,true;advisedby(L, G), ta(J, L, M).;false;false
7;false,false,false;tempadvisedby(A, S), projectmember(T, S).;false;false
7;false;advisedby(A, G), tempadvisedby(H, G).;true;true
7;false,false;publication(Q, A), advisedby(A, R).;false;true
7;false,true;publication(I, G), ta(J, H, K).;true;true
7;true;publication(F, E).;false;false
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;false,false,true;publication(N, M), tempadvisedby(P, M).;false;false
8;true,true;ta(E, A, F).;false;false
8;false,false,false;tempadvisedby(A, Q).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false;ta(K, A, L), advisedby(A, M).;true;true
8;false,true;advisedby(A, I), publication(J, I).;false;false
8;true;publication(C, D).;true;false
9;;inphase(A, B) :- tempadvisedby(A, C).;true;true
9;false,false;publication(N, A).;false;false
9;false;advisedby(A, M).;false;true
9;true,true;ta(F, D, G).;false;true
9;true,false;advisedby(H, C), publication(I, H).;false;true
9;true,false,false;ta(J, A, K), publication(L, C).;false;false
9;true,true,false;sameperson(A, D), publication(E, C).;false;false
9;true;tempadvisedby(D, C), publication(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( workedunder(E, F) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(A, D), movie(C, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), workedunder(H, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.11401028548544434;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.10273502439961439;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( movie(E, A), workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return 0.29639738602405064;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return -0.09364388595579737;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, H), workedunder(I, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23850196552411718;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( movie(D, C) )
%   | then return -0.08599263031375086;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), workedunder(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, I), movie(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1979094339073446;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then if ( movie(C, D) )
%   | then return -0.07947002435161324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, E), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1683563136939754;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then if ( workedunder(D, C), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07384729900829537;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return 0.14608066647661733;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302473
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.734 seconds
Total inference time: 0.716 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'false': 'workedunder(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(A, D), movie(C, D)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, A)', 'false': 'workedunder(A, E)', 'false,false': 'movie(F, A)', 'false,false,true': 'movie(F, G), workedunder(H, G)', 'true': 'movie(D, C)'}, {'false,false,true,true': [0.0, 0, 2], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.413, 2, 2]}], ['genre(A, B)', {'': 'workedunder(A, C), movie(D, C)', 'false': 'movie(E, A), workedunder(A, F)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,true': 'movie(E, C)', 'true,true,true': 'workedunder(F, G)', 'false': 'workedunder(A, H), workedunder(I, H)', 'true': 'workedunder(D, C), movie(E, D)'}, {'true,true,true,true': [0.0, 2, 0], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true': 'movie(D, C)', 'false': 'workedunder(A, E), workedunder(F, E)', 'false,false': 'movie(G, A), workedunder(A, H)', 'false,false,false': 'workedunder(A, I), movie(J, I)'}, {'false,false,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(A, D)', 'true': 'movie(C, D)', 'false': 'workedunder(A, E), movie(F, E)', 'false,false': 'workedunder(A, G)', 'false,false,false': 'workedunder(A, H)'}, {'false,false,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(A, C)', 'true,true': 'workedunder(A, D), movie(E, C)', 'false': 'workedunder(A, F)', 'false,false': 'movie(G, A)', 'true': 'workedunder(D, C), movie(E, D)'}, {'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.11145008534151418, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.04272553559876201, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
1;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
2;;genre(A, B) :- workedunder(A, D), movie(C, D).;true;true
3;;genre(A, B) :- workedunder(A, C), movie(D, A).;true;true
5;;genre(A, B) :- workedunder(A, C), movie(D, C).;true;true
6;;genre(A, B) :- workedunder(A, C).;true;true
7;;genre(A, B) :- workedunder(A, C).;true;true
8;;genre(A, B) :- movie(C, A), workedunder(A, D).;true;true
9;;genre(A, B) :- workedunder(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(A, C), movie(D, C) )
%   then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(A, D) )
%   then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299463
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.496 seconds
Total inference time: 0.412 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 05:56:13
{'Recall': 1.0, 'Learning time': 1.23, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.299463, 'parameter': {'Recall': 1.0, 'Learning time': 0.734, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.302473, 'AUC ROC': 0.9, 'Inference time': 0.716}, 'AUC ROC': 0.9, 'Inference time': 0.412}


