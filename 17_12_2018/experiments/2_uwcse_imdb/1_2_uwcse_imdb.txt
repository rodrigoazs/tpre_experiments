Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.6522008798821627;  // std dev = 0,936, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6538754683101603;  // std dev = 1,912, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.4908910471366949;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.5739263206752093;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.42002402141130357;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.564642864764439;  // std dev = 0,050, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | then if ( hasposition(L, C), publication(K, L) )
%   | | | then return 0.22155558397116543;  // std dev = 1,357, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6646044597598177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.5120644925455108;  // std dev = 2,107, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.40189778971311596;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.0620543933556656;  // std dev = 0,238, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( ta(D, H, I) )
%   | | | then return 0.27514481303894495;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.43534853393697376;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4363343358828932;  // std dev = 0,142, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.3173995123527658;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.43142236983886567;  // std dev = 0,000864, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(N, B), publication(P, N) )
%   | | | then return 0.0845837294561421;  // std dev = 0,772, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3456470842185545;  // std dev = 2,634, 58,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return -0.10202181816779755;  // std dev = 0,013, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.20750303759767136;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33355840107361723;  // std dev = 0,138, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.2383716295379033;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.330157549366174;  // std dev = 0,000779, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.3044389254255932;  // std dev = 1,569, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.20442997294576448;  // std dev = 2,232, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else return -0.09304758469525168;  // std dev = 0,012, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.317108766248981;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.21525852956002983;  // std dev = 0,897, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2558028334523994;  // std dev = 0,041, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( hasposition(L, C), publication(K, L) )
%   | | | then return -0.11827422937996565;  // std dev = 1,125, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3367896462136304;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.24666443221904497;  // std dev = 1,974, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.13463637010071755;  // std dev = 1,232, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.064139471420347;  // std dev = 0,220, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.08512384700978548;  // std dev = 5,37e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.2700313674412947;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.21944894061158646;  // std dev = 0,150, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.18520480059018166;  // std dev = 0,888, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | then if ( publication(K, J) )
%   | | | then return 0.029659449769270763;  // std dev = 0,594, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2268790025099307;  // std dev = 0,971, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | then return -0.005694284925372384;  // std dev = 0,887, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.16909642570567168;  // std dev = 2,344, 55,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return -0.07920853184076808;  // std dev = 0,015, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.22087475629583087;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.1329097517456575;  // std dev = 0,899, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.17928810471905046;  // std dev = 0,044, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( projectmember(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.203510439133689;  // std dev = 0,658, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2280297529642003;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.0602639366929841;  // std dev = 1,559, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.14816062452706974;  // std dev = 2,058, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   else if ( student(B) )
%   | then return -0.07316801960627739;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.059908594293060065;  // std dev = 0,217, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), publication(H, A) )
%   | | then if ( samecourse(D, F) )
%   | | | then return 0.2299618539958731;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1697768639469927;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(I, A, J), ta(D, K, J) )
%   | | | then return 0.06423151825846013;  // std dev = 0,877, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1602668710637999;  // std dev = 0,082, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( publication(L, B), tempadvisedby(M, B) )
%   | | then if ( publication(L, A), publication(N, M) )
%   | | | then return 0.18216951694191838;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05263872636210341;  // std dev = 1,592, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( publication(P, B) )
%   | | | then return 0.13608856690290322;  // std dev = 1,606, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.09438749908053505;  // std dev = 1,575, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.06886598151234621;  // std dev = 0,016, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.009071523798504223;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15120039060500196;  // std dev = 0,049, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.1418808343450098;  // std dev = 0,096, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.027388877365629383;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14353407371240087;  // std dev = 0,024, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( ta(N, A, P), tempadvisedby(Q, B) )
%   | | | then return 0.16961386273599313;  // std dev = 0,718, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06108959309891366;  // std dev = 2,400, 49,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=39 */
%   else if ( student(B) )
%   | then return -0.06410098414942392;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.05428390713040876;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */


Starting fold 1

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;publication(N, B).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,true,true;ta(G, D, H).;false;false
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,false,true;publication(H, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,false;tempadvisedby(J, B), publication(K, A).;true;true
2;true,true,true;ta(H, G, I).;false;false
2;true,false,true;hasposition(L, C), publication(K, L).;false;false
2;false;professor(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
3;true,true;ta(F, A, G), ta(F, H, E).;true;false
3;true,false;publication(J, B), publication(J, A).;true;true
3;true,true,true;ta(D, H, I).;false;false
3;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;tempadvisedby(C, B), ta(D, C, E).;true;true
4;true,true;ta(D, A, F).;false;false
4;true,false;publication(G, B), publication(G, A).;true;true
4;true,false,false;ta(K, A, L).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;true,true;publication(D, E), tempadvisedby(E, F).;false;true
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
5;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
5;true,false,true;hasposition(L, C), publication(K, L).;false;false
5;false;professor(B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B), publication(C, D).;false;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
6;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
6;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
6;true,false,true;publication(K, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;true;publication(D, A), publication(D, B).;true;true
7;true,true;tempadvisedby(E, B), publication(D, E).;false;true
7;true,false;projectmember(I, B).;true;true
7;true,false,false;publication(K, A).;false;false
7;true,true,false;tempadvisedby(F, B), ta(G, A, H).;false;false
7;true,false,true;publication(J, A).;false;false
7;false;student(B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false,false;publication(P, B).;false;false
8;true,true;ta(F, A, G), publication(H, A).;true;true
8;true,false;publication(L, B), tempadvisedby(M, B).;true;true
8;true,true,true;samecourse(D, F).;false;false
8;true,true,false;ta(I, A, J), ta(D, K, J).;false;false
8;true,false,true;publication(L, A), publication(N, M).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;true,true;ta(G, A, H), ta(G, I, F).;true;false
9;true,false;publication(J, B), publication(J, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
9;false;student(B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.14886366798949757;  // std dev = 0,029, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1344579625692148;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07854778523145685;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117559
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.396 seconds
Total inference time: 0.959 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [5.16e-08, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 1, 0], 'false': [0.0, 55, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(E, A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'false,false': [3.8e-08, 55, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true': [1.49e-08, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 56], 'false': [3.33e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 55, 0], 'true,true': [0.0, 0, 56], 'true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'false,false': [1.83e-08, 55, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'false': [1.49e-08, 55, 0], 'true,true': [0.029, 1, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 55, 0], 'true,true': [0.0, 0, 56], 'true,false': [0.0, 1, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [0.012304599783948732, nan], 'true,true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'false': [nan, 2.62416351275037e-17], 'true,false': [0.0, nan]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.001996676351744731, 7.065055611250995e-18], 'true': [-3.172065784643304e-17, 0.0], 'true,true': [-3.172065784643304e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [nan, 6.0557619525008536e-18]}, {'': [0.0014349399424219715, 2.0185873175002845e-18], 'true': [-1.586032892321652e-17, 0.0], 'true,true': [-1.586032892321652e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0010802101680417507, 3.0278809762504268e-18], 'true': [-3.9650822308041306e-17, 0.0], 'true,true': [-3.9650822308041306e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [2.0185873175002845e-18, nan]}, {'': [0.0008431290136933203, 4.037174635000569e-18], 'true': [0.0008431290136933203, nan]}, {'': [0.0007820255836820014, -3.0278809762504268e-18], 'true': [-2.7755575615628914e-17, 0.0], 'false': [-3.0278809762504268e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B), movie(D, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '7;true;movie(D, A), movie(D, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5589621067898783;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22260640147938018;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4201923719708212;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18646460659223113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.322532696983738;  // std dev = 0,023, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.159814008204746;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25641680677429074;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13950269016050354;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2106379795157359;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12358296921894238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.17774281225591368;  // std dev = 0,015, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11080819193141529;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15134289652782457;  // std dev = 2,11e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1464842588839659;  // std dev = 0,046, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1349071994099579;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11437245659211513;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.13017
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.54 seconds
Total inference time: 1.008 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:07
{'Inference time': 1.008, 'parameter': {'Inference time': 0.959, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.117559, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 1.396}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.13017, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 2.936}


Starting fold 2

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;publication(N, B).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,true,true;ta(G, D, H).;false;false
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,false,true;publication(H, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,false;tempadvisedby(J, B), publication(K, A).;true;true
2;true,true,true;ta(H, G, I).;false;false
2;true,false,true;hasposition(L, C), publication(K, L).;false;false
2;false;professor(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
3;true,true;ta(F, A, G), ta(F, H, E).;true;false
3;true,false;publication(J, B), publication(J, A).;true;true
3;true,true,true;ta(D, H, I).;false;false
3;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;tempadvisedby(C, B), ta(D, C, E).;true;true
4;true,true;ta(D, A, F).;false;false
4;true,false;publication(G, B), publication(G, A).;true;true
4;true,false,false;ta(K, A, L).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;true,true;publication(D, E), tempadvisedby(E, F).;false;true
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
5;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
5;true,false,true;hasposition(L, C), publication(K, L).;false;false
5;false;professor(B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B), publication(C, D).;false;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
6;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
6;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
6;true,false,true;publication(K, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;true;publication(D, A), publication(D, B).;true;true
7;true,true;tempadvisedby(E, B), publication(D, E).;false;true
7;true,false;projectmember(I, B).;true;true
7;true,false,false;publication(K, A).;false;false
7;true,true,false;tempadvisedby(F, B), ta(G, A, H).;false;false
7;true,false,true;publication(J, A).;false;false
7;false;student(B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false,false;publication(P, B).;false;false
8;true,true;ta(F, A, G), publication(H, A).;true;true
8;true,false;publication(L, B), tempadvisedby(M, B).;true;true
8;true,true,true;samecourse(D, F).;false;false
8;true,true,false;ta(I, A, J), ta(D, K, J).;false;false
8;true,false,true;publication(L, A), publication(N, M).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;true,true;ta(G, A, H), ta(G, I, F).;true;false
9;true,false;publication(J, B), publication(J, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
9;false;student(B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.14537149689574166;  // std dev = 0,040, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13486489706754656;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07829540047708301;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117583
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.418 seconds
Total inference time: 1.064 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [5.16e-08, 56, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 2, 0], 'false': [0.0, 56, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(E, A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'false,false': [3.94e-08, 56, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true': [1.29e-08, 0, 58], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 58], 'false': [3.8e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 56, 0], 'true,true': [0.0, 0, 58], 'true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'false,false': [1.83e-08, 56, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [7.45e-09, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'false': [1.67e-08, 56, 0], 'true,true': [0.04, 2, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 56, 0], 'true,true': [0.0, 0, 58], 'true,false': [0.0, 2, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [0.0230030098461001, nan], 'true,true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'true,false,true': [0.0, 0.0], 'true': [2.4501473646900006e-16, 0.0], 'false': [nan, 2.7755575615628914e-17], 'true,false': [0.0, nan]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.005506846810506941, -9.912705577010326e-19], 'true': [-1.5313421029312505e-16, 0.0]}, {'': [0.0037327151297170975, 5.9476233462061954e-18], 'true': [-3.062684205862501e-17, 0.0], 'true,true': [-3.062684205862501e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0], 'false': [nan, 5.9476233462061954e-18]}, {'': [0.002682568974502808, 0.0], 'true': [-2.2970131543968756e-17, 0.0], 'true,true': [-2.2970131543968756e-17, nan], 'true,false': [0.0, nan]}, {'': [0.002019414330219523, 2.9738116731030977e-18], 'true': [-3.062684205862501e-17, 0.0], 'true,true': [-3.062684205862501e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [9.912705577010326e-19, nan]}, {'': [0.0015761995793491948, 4.956352788505163e-18], 'true': [0.0015761995793491948, nan]}, {'': [0.0014640911789223442, -2.9738116731030977e-18], 'true': [-3.4455197315953135e-17, 0.0], 'false': [-2.9738116731030977e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B), movie(D, A).;true;true', '2;true,false;genre(F, C), movie(E, F).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;true,false;genre(H, C), movie(G, H).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '7;true;movie(D, A), movie(D, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5622849568829554;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.22212888411027426;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.42563739579170684;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.42110406546853696;  // std dev = 6,66e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.18611885648820614;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.326224646743838;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.323146996196158;  // std dev = 8,16e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.15955465129538632;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25755636208284716;  // std dev = 0,000997, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.13930213439000447;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21263890609118713;  // std dev = 2,36e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.21080994785979437;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.12342386287711296;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1783295903851424;  // std dev = 0,000636, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11067922359797447;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14521456206100686;  // std dev = 0,046, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13642867134953468;  // std dev = 1,67e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1353566149119186;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11412446426556508;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.131164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.636 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:13
{'Inference time': 1.239, 'parameter': {'Inference time': 1.064, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.117583, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 1.418}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.131164, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 3.054}


Starting fold 3

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;publication(N, B).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,true,true;ta(G, D, H).;false;false
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,false,true;publication(H, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,false;tempadvisedby(J, B), publication(K, A).;true;true
2;true,true,true;ta(H, G, I).;false;false
2;true,false,true;hasposition(L, C), publication(K, L).;false;false
2;false;professor(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
3;true,true;ta(F, A, G), ta(F, H, E).;true;false
3;true,false;publication(J, B), publication(J, A).;true;true
3;true,true,true;ta(D, H, I).;false;false
3;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;tempadvisedby(C, B), ta(D, C, E).;true;true
4;true,true;ta(D, A, F).;false;false
4;true,false;publication(G, B), publication(G, A).;true;true
4;true,false,false;ta(K, A, L).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;true,true;publication(D, E), tempadvisedby(E, F).;false;true
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
5;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
5;true,false,true;hasposition(L, C), publication(K, L).;false;false
5;false;professor(B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B), publication(C, D).;false;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
6;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
6;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
6;true,false,true;publication(K, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;true;publication(D, A), publication(D, B).;true;true
7;true,true;tempadvisedby(E, B), publication(D, E).;false;true
7;true,false;projectmember(I, B).;true;true
7;true,false,false;publication(K, A).;false;false
7;true,true,false;tempadvisedby(F, B), ta(G, A, H).;false;false
7;true,false,true;publication(J, A).;false;false
7;false;student(B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false,false;publication(P, B).;false;false
8;true,true;ta(F, A, G), publication(H, A).;true;true
8;true,false;publication(L, B), tempadvisedby(M, B).;true;true
8;true,true,true;samecourse(D, F).;false;false
8;true,true,false;ta(I, A, J), ta(D, K, J).;false;false
8;true,false,true;publication(L, A), publication(N, M).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;true,true;ta(G, A, H), ta(G, I, F).;true;false
9;true,false;publication(J, B), publication(J, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
9;false;student(B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.43439164876689973;  // std dev = 0,027, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then return -0.12315601817729212;  // std dev = 0,150, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10429320596924664;  // std dev = 0,124, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3324638253452119;  // std dev = 0,025, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1105162261072394;  // std dev = 0,021, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09495540081523991;  // std dev = 0,114, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.24976907687037914;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.08216529331257512;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08216529331257506;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1429567561606533;  // std dev = 1,793, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.08479894370306516;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22357324880903104;  // std dev = 0,382, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10461901721007769;  // std dev = 0,197, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08211184884404536;  // std dev = 0,168, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.17176259339357366;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.06913400315010222;  // std dev = 1,34e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07271107514769588;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.09666398270132895;  // std dev = 1,511, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11365151342543658;  // std dev = 0,109, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0723559796295178;  // std dev = 0,202, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1348662362319892;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0720544397792735;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.06351612244040063;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.06778896134703102;  // std dev = 1,442, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.933 seconds
Total inference time: 1.523 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'false': [9.42e-08, 134, 0], 'true,true': [8.09e-08, 0, 178], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 44, 0], 'false': [0.0, 134, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(E, A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'false,false': [9.54e-08, 126, 0], 'true,false,true,true': [9.13e-09, 12, 0], 'true,true': [4.21e-08, 0, 129], 'true,false,true,false': [7.45e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.85, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.15, 44, 0], 'true,true': [0.027, 0, 178], 'false': [0.124, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.114, 134, 0], 'true,true': [0.025, 0, 178], 'true,false': [0.021, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'false,false': [0.0, 126, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [6.45e-09, 11, 0], 'true,true,true': [0.0, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.793, 29, 49]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.382, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.197, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.168, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'false': 'actor(B)'}, {'false,false': [1.511, 29, 49], 'true,false,true,true': [1.34e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'false': [0.202, 134, 0], 'true,true': [0.109, 44, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'actor(B)'}, {'false,false': [1.442, 29, 49], 'false,true': [0.0, 126, 0], 'true,true': [0.0, 0, 129], 'true,false': [0.0, 23, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false,true': [4.794144879063176e-17, nan], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true': [0.11344775516652696, nan], 'true,true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'true,false,true': [6.938893903907228e-18, 5.046468293750712e-18], 'true': [1.7625866313428842e-15, 4.827056628805028e-18], 'false': [0.10412266355706305, 7.225260953909749e-17], 'true,false': [4.827056628805028e-18, nan]}, {'': [0.050102651617699306, 0.0001145519984067139], 'true': [0.0007499614158413787, 0.0005090887646135175], 'true,false': [0.0005090887646135175, nan]}, {'': [0.031769583587334865, 9.770506456830527e-05], 'true': [0.0006258026879058264, 0.00042170284498728325]}, {'': [0.01414929554469659, 0.028000941963741477], 'true': [-6.885104028683141e-17, -6.033820786006285e-18], 'true,true': [-6.885104028683141e-17, nan], 'true,false': [-6.033820786006285e-18, nan], 'true,false,true': [-4.625929269271485e-18, 3.784851220313033e-18], 'false': [0.04119423767446306, -2.2909364000201642e-17]}, {'': [0.017949236682378206, 0.0002117285736782713], 'true': [0.0008191695408892557, 0.0008859415174283185], 'true,true': [0.0008191695408892557, nan], 'true,false': [0.0008859415174283185, nan]}, {'': [0.007452323496429603, 0.01796480455081247], 'true': [-1.3770208057366282e-17, 7.84396702180817e-18], 'true,true': [-1.3770208057366282e-17, nan], 'true,false': [7.84396702180817e-18, nan], 'true,false,true': [7.84396702180817e-18, nan], 'false': [-2.114710523095536e-17, 0.029265870068569743]}, {'': [0.011975224808049228, 0.00030459217894546697], 'true': [0.011975224808049228, nan]}, {'': [0.005498423000327262, 0.014262267104447252], 'true': [-4.131062417209885e-17, -1.8101462358018856e-18], 'false': [-3.52451753849256e-18, 0.026652445565568488]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B), movie(D, A).;true;true', '2;false;director(B).;true;true', '2;true,false;genre(F, C), movie(E, F).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;false;director(B).;true;true', '5;true,false;genre(H, C), movie(G, H).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '7;true;movie(D, A), movie(D, B).;true;true', '7;false;actor(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true', '9;false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5400217908149866;  // std dev = 0,346, 113,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0.5644425772129087;  // std dev = 0,327, 109,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5953899343810255;  // std dev = 0,032, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.19888235433849988;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.5982872014917212;  // std dev = 0,014, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.17563349430965036;  // std dev = 0,211, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4514217689194326;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.4456631125466259;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.1691095300809892;  // std dev = 0,002, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.17331697971567056;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.09596112530450109;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.34381267338405475;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.3398702820358448;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.146657876821465;  // std dev = 0,001, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.14987100872025222;  // std dev = 0,001, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.08795288929215847;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.27115013312873215;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.26825092311983917;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.12892002129227625;  // std dev = 0,000911, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2705779325736651;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.26768259370166336;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.08114853719066734;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.13198854938930754;  // std dev = 0,004, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.0851847513883968;  // std dev = 6,66e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2207945557693482;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.21892382726492726;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11529148234301513;  // std dev = 0,000998, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11750696446159307;  // std dev = 0,001, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.07877675473109154;  // std dev = 7,22e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.07529982427183447;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.18531570416165974;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.18381824604574737;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.10333644995153929;  // std dev = 1,05e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10471442934960515;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.07324622576333718;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.18496493684367626;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.1834690948847729;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.10602141565060663;  // std dev = 0,003, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07022151828077149;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15882632274234343;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.15780340932414416;  // std dev = 0,000668, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.0947098814226131;  // std dev = 0,000727, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0962797576249266;  // std dev = 0,000803, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5,96e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.06577281182101086;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13884912392325174;  // std dev = 3,49e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.13796316803280578;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.08637382026735903;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08731249231742876;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13861322515228053;  // std dev = 2,79e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.1377278820619131;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.08837234388961598;  // std dev = 0,002, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.061844885226337847;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.036 seconds
Total inference time: 0.913 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:25
{'Inference time': 0.913, 'parameter': {'Inference time': 1.523, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.096748, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 2.933}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.097162, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 7.968999999999999}


Starting fold 4

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;publication(N, B).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,true,true;ta(G, D, H).;false;false
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,false,true;publication(H, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,false;tempadvisedby(J, B), publication(K, A).;true;true
2;true,true,true;ta(H, G, I).;false;false
2;true,false,true;hasposition(L, C), publication(K, L).;false;false
2;false;professor(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
3;true,true;ta(F, A, G), ta(F, H, E).;true;false
3;true,false;publication(J, B), publication(J, A).;true;true
3;true,true,true;ta(D, H, I).;false;false
3;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;tempadvisedby(C, B), ta(D, C, E).;true;true
4;true,true;ta(D, A, F).;false;false
4;true,false;publication(G, B), publication(G, A).;true;true
4;true,false,false;ta(K, A, L).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;true,true;publication(D, E), tempadvisedby(E, F).;false;true
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
5;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
5;true,false,true;hasposition(L, C), publication(K, L).;false;false
5;false;professor(B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B), publication(C, D).;false;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
6;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
6;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
6;true,false,true;publication(K, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;true;publication(D, A), publication(D, B).;true;true
7;true,true;tempadvisedby(E, B), publication(D, E).;false;true
7;true,false;projectmember(I, B).;true;true
7;true,false,false;publication(K, A).;false;false
7;true,true,false;tempadvisedby(F, B), ta(G, A, H).;false;false
7;true,false,true;publication(J, A).;false;false
7;false;student(B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false,false;publication(P, B).;false;false
8;true,true;ta(F, A, G), publication(H, A).;true;true
8;true,false;publication(L, B), tempadvisedby(M, B).;true;true
8;true,true,true;samecourse(D, F).;false;false
8;true,true,false;ta(I, A, J), ta(D, K, J).;false;false
8;true,false,true;publication(L, A), publication(N, M).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;true,true;ta(G, A, H), ta(G, I, F).;true;false
9;true,false;publication(J, B), publication(J, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
9;false;student(B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.12297086094818788;  // std dev = 0,075, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13749996436592493;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07669404747929222;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.118352
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.586 seconds
Total inference time: 1.557 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [3.8e-08, 38, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 7, 0], 'false': [0.0, 38, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(E, A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'false,false': [0.0, 38, 0], 'true,false,true,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 38, 0], 'true,true': [3.73e-09, 0, 45], 'true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'false,false': [2.24e-08, 38, 0], 'true,false,true,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, F)'}, {'true,true,true': [5.58e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'false': [0.0, 38, 0], 'true,true': [0.075, 7, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'true,true': [0.0, 0, 45], 'true,false': [9.31e-10, 7, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [0.0831635545216455, nan], 'true,true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'false': [nan, -8.764918615461762e-18], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false,true': [-1.982541115402065e-18, nan], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.019909088333742615, -1.1686558153949016e-17], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.013495010447801522, 1.3147377923192643e-17], 'true': [-2.960594732333751e-17, 9.912705577010326e-19], 'true,true': [-2.960594732333751e-17, nan], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [9.912705577010326e-19, nan], 'false': [nan, 1.3147377923192643e-17]}, {'': [0.00969838176228774, 0.0], 'true': [6.908054375445419e-17, -9.912705577010326e-19], 'true,true': [6.908054375445419e-17, nan], 'true,false': [-9.912705577010326e-19, nan]}, {'': [0.007300856491242112, 2.1912296538654404e-18], 'true': [-8.388351741612294e-17, 9.912705577010326e-19], 'true,true': [-8.388351741612294e-17, nan], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [9.912705577010326e-19, nan], 'false': [2.921639538487254e-18, nan]}, {'': [0.0056984873080174045, -7.304098846218135e-19], 'true': [0.0056984873080174045, nan]}, {'': [0.0053446407299407965, -1.460819769243627e-18], 'true': [-1.2335811384723961e-17, 9.912705577010326e-19], 'false': [-1.460819769243627e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B), movie(D, A).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '7;true;movie(D, A), movie(D, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5894860197895166;  // std dev = 0,305, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.6111505851930897;  // std dev = 0,282, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5832158693056174;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20802651085303023;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4385092601109628;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1758261403458574;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.33498705511027194;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15177977420830074;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.26489193429745556;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13325413753469775;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21660132245767147;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11860152877843914;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1821003705816936;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10675343295114105;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15652959173557354;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09699283762877117;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1369558042686464;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08882349657874271;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.129701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.146 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:31
{'Inference time': 0.9, 'parameter': {'Inference time': 1.557, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.118352, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 1.586}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.129701, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 2.732}


Starting fold 5

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;publication(N, B).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,true,true;ta(G, D, H).;false;false
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,false,true;publication(H, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,false;tempadvisedby(J, B), publication(K, A).;true;true
2;true,true,true;ta(H, G, I).;false;false
2;true,false,true;hasposition(L, C), publication(K, L).;false;false
2;false;professor(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
3;true,true;ta(F, A, G), ta(F, H, E).;true;false
3;true,false;publication(J, B), publication(J, A).;true;true
3;true,true,true;ta(D, H, I).;false;false
3;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;tempadvisedby(C, B), ta(D, C, E).;true;true
4;true,true;ta(D, A, F).;false;false
4;true,false;publication(G, B), publication(G, A).;true;true
4;true,false,false;ta(K, A, L).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;true,true;publication(D, E), tempadvisedby(E, F).;false;true
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
5;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
5;true,false,true;hasposition(L, C), publication(K, L).;false;false
5;false;professor(B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B), publication(C, D).;false;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
6;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
6;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
6;true,false,true;publication(K, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;true;publication(D, A), publication(D, B).;true;true
7;true,true;tempadvisedby(E, B), publication(D, E).;false;true
7;true,false;projectmember(I, B).;true;true
7;true,false,false;publication(K, A).;false;false
7;true,true,false;tempadvisedby(F, B), ta(G, A, H).;false;false
7;true,false,true;publication(J, A).;false;false
7;false;student(B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false,false;publication(P, B).;false;false
8;true,true;ta(F, A, G), publication(H, A).;true;true
8;true,false;publication(L, B), tempadvisedby(M, B).;true;true
8;true,true,true;samecourse(D, F).;false;false
8;true,true,false;ta(I, A, J), ta(D, K, J).;false;false
8;true,false,true;publication(L, A), publication(N, M).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;true,true;ta(G, A, H), ta(G, I, F).;true;false
9;true,false;publication(J, B), publication(J, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,false,true;ta(K, A, L), tempadvisedby(M, B).;false;false
9;false;student(B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.14793579644284752;  // std dev = 0,032, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13456598397997813;  // std dev = 2,63e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07848065397292985;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.13456598397997813;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.159 seconds
Total inference time: 1.373 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [4.21e-08, 44, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 1, 0], 'false': [3.16e-08, 44, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(E, A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'false,false': [1.49e-08, 44, 0], 'true,false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'false': [2.11e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 44, 0], 'true,true': [0.0, 0, 45], 'true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'false,false': [2.24e-08, 44, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.83e-08, 0, 10]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, F)'}, {'true,true,true': [5.58e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)', 'true,false,true': 'movie(G, A)', 'false': 'actor(B)'}, {'false,false': [7.45e-09, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'false': [9.13e-09, 44, 0], 'true,true': [0.032, 1, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 10], 'false,true': [0.0, 44, 0], 'true,true': [2.63e-09, 0, 35], 'true,false': [0.0, 1, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true': [0.015181896531630958, nan], 'true,true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'true,false,true': [nan, 0.0], 'true': [-2.0301221021717148e-16, 0.0], 'false': [-1.3322676295501878e-16, 5.046468293750712e-18], 'true,false': [0.0, nan]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0036344973571725593, -3.784851220313033e-18], 'true': [0.0, 0.0]}, {'': [0.003128472929600069, 0.017479721765384596], 'true': [-1.2688263138573217e-17, 0.0], 'true,true': [-1.2688263138573217e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'false': [3.3306690738754695e-17, 1.1354553660939102e-17]}, {'': [0.0017704850314087769, 0.0], 'true': [6.908054375445419e-17, 0.0], 'true,true': [6.908054375445419e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0016925167997529325, 0.009456601801794454], 'true': [-5.075305255429287e-17, 0.0], 'true,true': [-5.075305255429287e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [3.1540426835941946e-18, 5.551115123125783e-18]}, {'': [0.0010402855577152828, 1.8924256101565167e-18], 'true': [0.0010402855577152828, nan]}, {'': [0.001225779666671543, 0.005960924538881872], 'true': [1.2688263138573217e-17, 0.0], 'false': [-2.523234146875356e-18, -5.551115123125783e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B), movie(D, A).;true;true', '2;false;director(B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;false;director(B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '7;true;movie(D, A), movie(D, B).;true;true', '7;false;actor(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true', '9;false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5595802534599584;  // std dev = 0,026, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2213903197676109;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5605717397455287;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.420820794555787;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1855826081306939;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32296140057478817;  // std dev = 0,026, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1591514227758509;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2565820493651695;  // std dev = 0,020, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1389896659390738;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.25716022400714433;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21084608047379944;  // std dev = 0,020, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12317551107584473;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1778161848730996;  // std dev = 0,015, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11047758082118608;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.17817460651610495;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14492289422107277;  // std dev = 0,051, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.15102562509826115;  // std dev = 0,000447, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1350489693824146;  // std dev = 0,014, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11390829188735788;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.13537477786243385;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.926 seconds
Total inference time: 1.313 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:38
{'Inference time': 1.313, 'parameter': {'Inference time': 1.373, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.105441, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 1.159}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.113233, 'AUC PR': 1.0, 'Recall': 1.0, 'AUC ROC': 1.0, 'Learning time': 3.085}


