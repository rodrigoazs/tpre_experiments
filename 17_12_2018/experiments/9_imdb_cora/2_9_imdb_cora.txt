Starting experiment #2 for 9_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Starting fold 1

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos examples: 603
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.7702368471874215;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.6489578875773111;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.5061552205141917;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.38079139171230814;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.28818643066895006;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.22332807994132664;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.17757217457833163;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.1444131226973962;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.11965698879053165;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.10066260786997791;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */


Results
   AUC ROC   = 0.608624
   AUC PR    = 0.948609
   CLL	      = -0.314973
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 2.853 seconds
Total inference time: 2.057 seconds
AUC ROC: 0.608624


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [2.31e-07, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [5.77e-08, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [4.21e-08, 0, 43]}]]
[{'': [1.2393187251629655e-15, 0.08018355271103159]}, {'': [-9.914549801303723e-16, 0.08018355271102807]}, {'': [-4.131062417209885e-17, 0.0801835527110287]}, {'': [-3.7179561754888965e-16, 0.08018355271102633]}, {'': [0.0, 0.08018355271102497]}, {'': [-2.0655312086049424e-17, 0.08018355271102559]}, {'': [7.745742032268534e-17, 0.0801835527110255]}, {'': [-7.745742032268534e-17, 0.08018355271102547]}, {'': [-4.6474452193611206e-17, 0.08018355271102527]}, {'': [4.131062417209885e-17, 0.08018355271102547]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852267;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995112;  // std dev = 4,62e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48767788391726336;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39125696209925404;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5553664367462834;  // std dev = 4,38e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3005711547884885;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4175135841583097;  // std dev = 2,73e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22629823971521892;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.3207118471601503;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16984358676510114;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.25517224256948956;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.41384749259675324;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.11355536567073773;  // std dev = 3,334, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2097577156325356;  // std dev = 1,49e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.3182273957321924;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08695142580602178;  // std dev = 3,335, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.17709649774527714;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1770964977452773;  // std dev = 5,16e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.1784486952931138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07242637620374585;  // std dev = 3,349, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1527438580936713;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.24001746865224372;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.04985180632215685;  // std dev = 3,335, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.13400703000801092;  // std dev = 1,29e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13400703000801087;  // std dev = 6,83e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */


Results
   AUC ROC   = 0.461114
   AUC PR    = 0.901436
   CLL	      = -0.366842
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 5.901 seconds
Total inference time: 3.545 seconds
AUC ROC: 0.461114


Refined model AUC ROC: 0.461114


Dataset: 9_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:09
{'Recall': 1.0, 'Learning time': 8.754, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.901436, 'CLL': -0.366842, 'parameter': {'Recall': 1.0, 'Learning time': 2.853, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.948609, 'CLL': -0.314973, 'AUC ROC': 0.608624, 'Inference time': 2.057}, 'AUC ROC': 0.461114, 'Inference time': 3.545}


Starting fold 2

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos examples: 690
Target test neg examples: 54

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7966104735610489;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.521000173904994;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3916498696084713;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2975214947349439;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23226801019815924;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18647488053184677;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15334928569517428;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12860778205329093;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1095875440488626;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.258457
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 1.947 seconds
Total inference time: 1.536 seconds
AUC ROC: 0.62963


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [9.13e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.89e-09, 12, 0], 'true': [2.74, 8, 122]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17]}, {'': [0.05775147928993674, 2.3129646346357427e-18]}, {'': [0.057751479289940406, 6.938893903907228e-18]}, {'': [0.057751479289941336, 0.0]}, {'': [0.05775147928994032, 2.3129646346357427e-18]}, {'': [0.05775147928994095, 2.3129646346357427e-18]}, {'': [0.05775147928994094, 1.1564823173178713e-18]}, {'': [0.057751479289940774, 1.1564823173178713e-18]}, {'': [0.057751479289940844, 5.782411586589357e-19]}, {'': [0.05775147928994075, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.6391264425827672;  // std dev = 0,299, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5601045170241867;  // std dev = 0,060, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.48592512765204937;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42107682854768397;  // std dev = 0,059, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.36597044577444066;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.32315400077390444;  // std dev = 0,053, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2761154401093002;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.25685311169812003;  // std dev = 0,047, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.21887840682615017;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21095355124262047;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.21583713396658985;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1659846646243316;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17797891606171873;  // std dev = 0,036, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.18154278661584522;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13350029355924062;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.1534167930986891;  // std dev = 0,032, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15610851458779584;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.109234754017828;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.134534826794569;  // std dev = 0,029, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.09754444423579219;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253539
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 3.869 seconds
Total inference time: 1.857 seconds
AUC ROC: 0.569243


Refined model AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:19
{'Recall': 1.0, 'Learning time': 5.816000000000001, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792, 'CLL': -0.253539, 'parameter': {'Recall': 1.0, 'Learning time': 1.947, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205, 'CLL': -0.258457, 'AUC ROC': 0.62963, 'Inference time': 1.536}, 'AUC ROC': 0.569243, 'Inference time': 1.857}


Starting fold 3

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos examples: 661
Target test neg examples: 70

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.8248156017661773;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.6928183180467439;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.5367928709789459;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.40340088328536944;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.30789442979240556;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.24240066496454704;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.1967000405732664;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.16371858628713246;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.13909109340224837;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.12013771168374324;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */


Results
   AUC ROC   = 0.605144
   AUC PR    = 0.943016
   CLL	      = -0.319898
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 1.745 seconds
Total inference time: 2.069 seconds
AUC ROC: 0.605144


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.38e-07, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [9.42e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.98e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [5.37e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [3.49e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}]]
[{'': [1.6240976817373718e-15, 0.0322222222222256]}, {'': [-6.0903663065151445e-16, 0.03222222222222175]}, {'': [2.5376526277146434e-16, 0.03222222222222181]}, {'': [-2.791417890486108e-16, 0.03222222222222134]}, {'': [2.5376526277146434e-17, 0.03222222222222211]}, {'': [-1.2688263138573217e-17, 0.0322222222222219]}, {'': [8.247371040072592e-17, 0.032222222222222055]}, {'': [-5.075305255429287e-17, 0.03222222222222206]}, {'': [3.489272363107635e-17, 0.032222222222222235]}, {'': [0.0, 0.03222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.4368806042083894;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6094189343461087;  // std dev = 0,894, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.6249475655895571;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4531392953170556;  // std dev = 0,887, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.4893127157293236;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.5490146127821918;  // std dev = 0,099, 83,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.23979694180485112;  // std dev = 0,870, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34828299648082706;  // std dev = 0,864, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.42913274638602367;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.3686658221249617;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.41905912685726343;  // std dev = 8,43e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.17807756459428128;  // std dev = 0,877, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2636421240652175;  // std dev = 0,858, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3286502368528707;  // std dev = 0,028, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.27804969755906545;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3217598242437386;  // std dev = 1,58e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.3956201043798985;  // std dev = 0,176, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20319909178862067;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.199129040418291;  // std dev = 0,212, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.19934967933145964;  // std dev = 0,209, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.2626786425752946;  // std dev = 0,186, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.04888181874989139;  // std dev = 0,847, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14937206180316256;  // std dev = 0,842, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2267715242799941;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.16071216583249726;  // std dev = 1,317, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.21916073789465476;  // std dev = 2,58e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.21106358565680983;  // std dev = 0,037, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.03399825959519046;  // std dev = 0,855, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12106729290659302;  // std dev = 0,837, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.18743565018342245;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.13049760963858226;  // std dev = 1,318, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.18396306215599198;  // std dev = 1,29e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.17806704555508449;  // std dev = 0,032, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.023128627244179707;  // std dev = 0,862, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09964979302479542;  // std dev = 0,833, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.16058090538800643;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.10699412978156975;  // std dev = 1,319, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.15793313249903823;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1534819027582476;  // std dev = 0,029, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.2518730585624408;  // std dev = 0,215, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08557289194758833;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.08264426837775025;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.08565667444353223;  // std dev = 0,206, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.13976354714081216;  // std dev = 0,183, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */


Results
   AUC ROC   = 0.583661
   AUC PR    = 0.945019
   CLL	      = -0.351331
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.606 seconds
Total inference time: 2.083 seconds
AUC ROC: 0.583661


Refined model AUC ROC: 0.583661


Dataset: 9_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:31
{'Recall': 1.0, 'Learning time': 7.351, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.945019, 'CLL': -0.351331, 'parameter': {'Recall': 1.0, 'Learning time': 1.745, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.943016, 'CLL': -0.319898, 'AUC ROC': 0.605144, 'Inference time': 2.069}, 'AUC ROC': 0.583661, 'Inference time': 2.083}


Starting fold 4

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos examples: 654
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8099561640151723;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5284825663747693;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39719039176974347;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3023776209869051;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23698715759628264;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.191220720417513;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15814910131754492;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1334484328508451;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11444708609402138;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.255786
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 1.518 seconds
Total inference time: 1.838 seconds
AUC ROC: 0.655172


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18]}, {'': [0.045870227899547665, 0.0]}, {'': [0.04587022789954968, -1.734723475976807e-18]}, {'': [0.045870227899550815, 1.734723475976807e-18]}, {'': [0.04587022789955062, 0.0]}, {'': [0.04587022789955009, 1.734723475976807e-18]}, {'': [0.04587022789955017, 0.0]}, {'': [0.045870227899549997, 8.673617379884035e-19]}, {'': [0.04587022789954986, 0.0]}, {'': [0.04587022789954993, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.6993861673243617;  // std dev = 0,147, 81,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=79 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.30676667400320523;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5601304348992443;  // std dev = 0,008, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.23352180483402477;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.42105672851653064;  // std dev = 0,008, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.17554317197409844;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32311519597230387;  // std dev = 0,007, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.13171540734870973;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2568116809977074;  // std dev = 0,006, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09914447763978812;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.20526043707330047;  // std dev = 0,117, 100,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=98 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1773882112639281;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06955145848688342;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.0749918519270159;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17877378402573044;  // std dev = 0,005, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15296513188043848;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.05293846792155058;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.05700621777639895;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15401510829487441;  // std dev = 0,004, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13417976223419448;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.04046656340787783;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.04352809267854866;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13499872747453684;  // std dev = 0,004, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.690776
   AUC PR    = 0.955993
   CLL	      = -0.261388
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 7.329 seconds
Total inference time: 3.509 seconds
AUC ROC: 0.690776


Refined model AUC ROC: 0.690776


Dataset: 9_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:07:46
{'Recall': 1.0, 'Learning time': 8.847, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.955993, 'CLL': -0.261388, 'parameter': {'Recall': 1.0, 'Learning time': 1.518, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363, 'CLL': -0.255786, 'AUC ROC': 0.655172, 'Inference time': 1.838}, 'AUC ROC': 0.690776, 'Inference time': 3.509}


Starting fold 5

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos examples: 640
Target test neg examples: 56

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7929315437951615;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5189342160940956;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3901282969327416;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.29619880730637854;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2309904888781173;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18519538758533224;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15205934164006435;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1273106151181766;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10828905626740594;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.255769
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 1.418 seconds
Total inference time: 1.888 seconds
AUC ROC: 0.678571


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [1.86e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18]}, {'': [0.06096408317580048, -2.3129646346357427e-18]}, {'': [0.06096408317580515, 0.0]}, {'': [0.06096408317580519, 0.0]}, {'': [0.06096408317580405, 1.1564823173178713e-18]}, {'': [0.0609640831758035, 1.1564823173178713e-18]}, {'': [0.06096408317580343, -1.1564823173178713e-18]}, {'': [0.060964083175803305, 0.0]}, {'': [0.06096408317580364, 5.782411586589357e-19]}, {'': [0.060964083175803416, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.7899671169176937;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.7613747415511246;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7330265844616978;  // std dev = 1,58e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.4602993117344256;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.641810468140273;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.5625230132155525;  // std dev = 0,053, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.47721464064716396;  // std dev = 1,159, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.2682576784989584;  // std dev = 1,615, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( author(J, B), venue(J, I) )
%   | | | then return 0.5553664367462847;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41270203259018595;  // std dev = 1,828, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else return 0.5879361351761545;  // std dev = 0,296, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.4228679085929478;  // std dev = 0,052, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.5320950873487296;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27362180677397896;  // std dev = 1,969, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.5342043782999457;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3044653866450859;  // std dev = 1,741, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else return 0.44316649994028656;  // std dev = 0,312, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.33749606806603294;  // std dev = 0,286, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.20584939969661017;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13908346053084344;  // std dev = 1,074, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(A, G) )
%   | | | then return 0.32995587761730744;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.11324316350325166;  // std dev = 1,565, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.16505822836869946;  // std dev = 1,438, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.3537840704078668;  // std dev = 0,079, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2668337665019355;  // std dev = 0,251, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1742245810641613;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10475497572073539;  // std dev = 1,075, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(A, G) )
%   | | | then return 0.2614703223003696;  // std dev = 3,65e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.08558864379725555;  // std dev = 1,566, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.12505147900617708;  // std dev = 1,439, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.27771088133565597;  // std dev = 0,070, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.21810675514072947;  // std dev = 0,219, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.15056170966966628;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07926650515733008;  // std dev = 1,076, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.095163780174092;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.19063059309113276;  // std dev = 1,460, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.1758429977894714;  // std dev = 1,478, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.18328718239984873;  // std dev = 0,193, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.13230114648520805;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06027799982938187;  // std dev = 1,077, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.07638046027650487;  // std dev = 0,714, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.15680821693822003;  // std dev = 1,470, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.14322008095079258;  // std dev = 1,486, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.15409932072762086;  // std dev = 0,062, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.2789233171265014;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03833202414289752;  // std dev = 1,834, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.26769562642079436;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07990825331663055;  // std dev = 1,511, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.15110733281877295;  // std dev = 0,154, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.20128964417593972;  // std dev = 0,342, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.14367300820179663;  // std dev = 0,214, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12640157414240283;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.01308342249789396;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.14168693695615228;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.0035690034923370802;  // std dev = 1,423, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return -0.034015576692738476;  // std dev = 1,526, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.1525545254381095;  // std dev = 0,099, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.510073
   AUC PR    = 0.896583
   CLL	      = -0.456194
   Precision = 0.943987 at threshold = 0.5
   Recall    = 0.895313
   F1        = 0.919006


Total learning time: 8.706 seconds
Total inference time: 3.35 seconds
AUC ROC: 0.510073


Refined model AUC ROC: 0.510073


Dataset: 9_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:02
{'Recall': 0.895313, 'Learning time': 10.123999999999999, 'F1': 0.919006, 'Precision': [0.943987, 0.5], 'AUC PR': 0.896583, 'CLL': -0.456194, 'parameter': {'Recall': 1.0, 'Learning time': 1.418, 'F1': 0.972644, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746, 'CLL': -0.255769, 'AUC ROC': 0.678571, 'Inference time': 1.888}, 'AUC ROC': 0.510073, 'Inference time': 3.35}


