Starting experiment #4 for 9_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Starting fold 1

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos examples: 603
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.7702368471874215;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.6489578875773111;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.5061552205141917;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.38079139171230814;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.28818643066895006;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.22332807994132664;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.17757217457833163;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.1444131226973962;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.11965698879053165;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.10066260786997791;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */


Results
   AUC ROC   = 0.608624
   AUC PR    = 0.948609
   CLL	      = -0.314973
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 1.367 seconds
Total inference time: 1.451 seconds
AUC ROC: 0.608624


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [2.31e-07, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [5.77e-08, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [4.21e-08, 0, 43]}]]
[{'': [1.2393187251629655e-15, 0.08018355271103159]}, {'': [-9.914549801303723e-16, 0.08018355271102807]}, {'': [-4.131062417209885e-17, 0.0801835527110287]}, {'': [-3.7179561754888965e-16, 0.08018355271102633]}, {'': [0.0, 0.08018355271102497]}, {'': [-2.0655312086049424e-17, 0.08018355271102559]}, {'': [7.745742032268534e-17, 0.0801835527110255]}, {'': [-7.745742032268534e-17, 0.08018355271102547]}, {'': [-4.6474452193611206e-17, 0.08018355271102527]}, {'': [4.131062417209885e-17, 0.08018355271102547]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5914822684328459;  // std dev = 0,442, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995112;  // std dev = 4,62e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.5033699069850941;  // std dev = 0,442, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4026614546469174;  // std dev = 0,442, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5553664367462834;  // std dev = 4,38e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.5225380065959708;  // std dev = 0,182, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.28933593210051584;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.41751358415831036;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4175135841583097;  // std dev = 2,73e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.396230265053051;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.217573276366898;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.3207118471601499;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3207118471601503;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.4490715198689662;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.15632552176586925;  // std dev = 3,353, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.2515304525363628;  // std dev = 0,044, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.3422025242429525;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11828820089505547;  // std dev = 3,353, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.20720353700350555;  // std dev = 0,038, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2097577156325356;  // std dev = 1,49e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.24498336965450318;  // std dev = 0,159, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.08871598544421333;  // std dev = 3,349, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.17800126415166567;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.1770964977452773;  // std dev = 5,16e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.25267183108014757;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.06756430392816198;  // std dev = 3,348, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.15015517785999935;  // std dev = 0,039, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.15274385809367114;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.20798988752330416;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.05234574484020723;  // std dev = 3,349, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.13199376085653214;  // std dev = 0,035, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13400703000801084;  // std dev = 6,99e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */


Results
   AUC ROC   = 0.546206
   AUC PR    = 0.925954
   CLL	      = -0.365026
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 5.223 seconds
Total inference time: 2.215 seconds
AUC ROC: 0.546206


Refined model AUC ROC: 0.546206


Dataset: 9_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 04:42:04
{'Recall': 1.0, 'Learning time': 6.59, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.925954, 'CLL': -0.365026, 'parameter': {'Recall': 1.0, 'Learning time': 1.367, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.948609, 'CLL': -0.314973, 'AUC ROC': 0.608624, 'Inference time': 1.451}, 'AUC ROC': 0.546206, 'Inference time': 2.215}


Starting fold 2

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos examples: 690
Target test neg examples: 54

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7966104735610489;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.521000173904994;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3916498696084713;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2975214947349439;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23226801019815924;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18647488053184677;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15334928569517428;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12860778205329093;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1095875440488626;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.258457
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 0.913 seconds
Total inference time: 1.327 seconds
AUC ROC: 0.62963


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [9.13e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.89e-09, 12, 0], 'true': [2.74, 8, 122]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17]}, {'': [0.05775147928993674, 2.3129646346357427e-18]}, {'': [0.057751479289940406, 6.938893903907228e-18]}, {'': [0.057751479289941336, 0.0]}, {'': [0.05775147928994032, 2.3129646346357427e-18]}, {'': [0.05775147928994095, 2.3129646346357427e-18]}, {'': [0.05775147928994094, 1.1564823173178713e-18]}, {'': [0.057751479289940774, 1.1564823173178713e-18]}, {'': [0.057751479289940844, 5.782411586589357e-19]}, {'': [0.05775147928994075, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.22003782222106372;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.21116969568805502;  // std dev = 0,018, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.16700214266726301;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17813252851260702;  // std dev = 0,016, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13425045997740087;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15353006655635149;  // std dev = 0,014, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10980262408492443;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.13462101440874238;  // std dev = 0,012, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801095;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0910873960564151;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253562
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 2.899 seconds
Total inference time: 1.864 seconds
AUC ROC: 0.569243


Refined model AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:42:12
{'Recall': 1.0, 'Learning time': 3.8120000000000003, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792, 'CLL': -0.253562, 'parameter': {'Recall': 1.0, 'Learning time': 0.913, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205, 'CLL': -0.258457, 'AUC ROC': 0.62963, 'Inference time': 1.327}, 'AUC ROC': 0.569243, 'Inference time': 1.864}


Starting fold 3

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos examples: 661
Target test neg examples: 70

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.8248156017661773;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.6928183180467439;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.5367928709789459;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.40340088328536944;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.30789442979240556;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.24240066496454704;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.1967000405732664;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.16371858628713246;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.13909109340224837;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.12013771168374324;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */


Results
   AUC ROC   = 0.605144
   AUC PR    = 0.943016
   CLL	      = -0.319898
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 1.262 seconds
Total inference time: 1.715 seconds
AUC ROC: 0.605144


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.38e-07, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [9.42e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.98e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [5.37e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [3.49e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}]]
[{'': [1.6240976817373718e-15, 0.0322222222222256]}, {'': [-6.0903663065151445e-16, 0.03222222222222175]}, {'': [2.5376526277146434e-16, 0.03222222222222181]}, {'': [-2.791417890486108e-16, 0.03222222222222134]}, {'': [2.5376526277146434e-17, 0.03222222222222211]}, {'': [-1.2688263138573217e-17, 0.0322222222222219]}, {'': [8.247371040072592e-17, 0.032222222222222055]}, {'': [-5.075305255429287e-17, 0.03222222222222206]}, {'': [3.489272363107635e-17, 0.032222222222222235]}, {'': [0.0, 0.03222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.4368806042083894;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6094189343461087;  // std dev = 0,894, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.6249475655895571;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4531392953170556;  // std dev = 0,887, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.4893127157293236;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.4957122961796226;  // std dev = 0,223, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.5607724767386412;  // std dev = 0,143, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.24421578627848753;  // std dev = 0,860, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.345767448687503;  // std dev = 0,861, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.42749864310257185;  // std dev = 0,035, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.3686658221249617;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.4192890094106388;  // std dev = 0,053, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.1775532687823591;  // std dev = 0,876, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26349060008396463;  // std dev = 0,845, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3275519956227847;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.27804969755906545;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3219299639546346;  // std dev = 0,048, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.13269313861486595;  // std dev = 0,877, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20234979321126012;  // std dev = 0,847, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2598714562147207;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.21383763039487166;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2560117134568475;  // std dev = 0,042, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.3546585873731313;  // std dev = 0,188, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15724306498967255;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.15379305686065337;  // std dev = 0,209, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.16351874399020774;  // std dev = 0,208, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.21524363878219394;  // std dev = 0,191, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.02635050889196285;  // std dev = 0,846, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11874999719534421;  // std dev = 0,834, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.18310614545306944;  // std dev = 0,033, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.1309777152996817;  // std dev = 1,320, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.18540030617346526;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1783640088911085;  // std dev = 0,059, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.017279406392467205;  // std dev = 0,854, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09789999420660002;  // std dev = 0,830, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.157310957455062;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.10734412558846632;  // std dev = 1,321, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.15901439361006003;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1537118932710727;  // std dev = 0,052, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.25343249480895447;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08349531413784994;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.08349782445422398;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.08178087081990794;  // std dev = 0,827, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1290957502161617;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13476726798758235;  // std dev = 0,047, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */


Results
   AUC ROC   = 0.589691
   AUC PR    = 0.945991
   CLL	      = -0.349584
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.618 seconds
Total inference time: 1.684 seconds
AUC ROC: 0.589691


Refined model AUC ROC: 0.589691


Dataset: 9_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:42:23
{'Recall': 1.0, 'Learning time': 6.880000000000001, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.945991, 'CLL': -0.349584, 'parameter': {'Recall': 1.0, 'Learning time': 1.262, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.943016, 'CLL': -0.319898, 'AUC ROC': 0.605144, 'Inference time': 1.715}, 'AUC ROC': 0.589691, 'Inference time': 1.684}


Starting fold 4

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos examples: 654
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8099561640151723;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5284825663747693;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39719039176974347;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3023776209869051;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23698715759628264;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.191220720417513;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15814910131754492;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1334484328508451;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11444708609402138;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.255786
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 1.17 seconds
Total inference time: 1.402 seconds
AUC ROC: 0.655172


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18]}, {'': [0.045870227899547665, 0.0]}, {'': [0.04587022789954968, -1.734723475976807e-18]}, {'': [0.045870227899550815, 1.734723475976807e-18]}, {'': [0.04587022789955062, 0.0]}, {'': [0.04587022789955009, 1.734723475976807e-18]}, {'': [0.04587022789955017, 0.0]}, {'': [0.045870227899549997, 8.673617379884035e-19]}, {'': [0.04587022789954986, 0.0]}, {'': [0.04587022789954993, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.3207118471601494;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253567;  // std dev = 2,58e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1527438580936709;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13400703000801112;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.71064
   AUC PR    = 0.952533
   CLL	      = -0.262241
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 6.464 seconds
Total inference time: 3.024 seconds
AUC ROC: 0.71064


Refined model AUC ROC: 0.71064


Dataset: 9_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:42:36
{'Recall': 1.0, 'Learning time': 7.634, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.952533, 'CLL': -0.262241, 'parameter': {'Recall': 1.0, 'Learning time': 1.17, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363, 'CLL': -0.255786, 'AUC ROC': 0.655172, 'Inference time': 1.402}, 'AUC ROC': 0.71064, 'Inference time': 3.024}


Starting fold 5

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos examples: 640
Target test neg examples: 56

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7929315437951615;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5189342160940956;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3901282969327416;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.29619880730637854;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2309904888781173;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18519538758533224;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15205934164006435;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1273106151181766;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10828905626740594;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.255769
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 1.227 seconds
Total inference time: 1.411 seconds
AUC ROC: 0.678571


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [1.86e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18]}, {'': [0.06096408317580048, -2.3129646346357427e-18]}, {'': [0.06096408317580515, 0.0]}, {'': [0.06096408317580519, 0.0]}, {'': [0.06096408317580405, 1.1564823173178713e-18]}, {'': [0.0609640831758035, 1.1564823173178713e-18]}, {'': [0.06096408317580343, -1.1564823173178713e-18]}, {'': [0.060964083175803305, 0.0]}, {'': [0.06096408317580364, 5.782411586589357e-19]}, {'': [0.060964083175803416, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.5319045176838226;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.6668304758702217;  // std dev = 1,596, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.6410211799807517;  // std dev = 1,590, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5683250346269374;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.366856292173121;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.3167441715488809;  // std dev = 1,621, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5790503240790495;  // std dev = 0,048, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.4226666369213143;  // std dev = 0,038, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.5723901808297521;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2730074482689079;  // std dev = 1,888, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.5514920127022294;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2968642261206103;  // std dev = 1,641, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.4228883745919134;  // std dev = 0,075, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.4614229586684453;  // std dev = 0,334, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.33248999252567;  // std dev = 0,149, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.13207356790129995;  // std dev = 4,56e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18309497605415914;  // std dev = 1,100, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.32828079422986467;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.18190049190308394;  // std dev = 1,433, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.14932581300056205;  // std dev = 1,562, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.3285980886192351;  // std dev = 0,060, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.26325732966005344;  // std dev = 0,130, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11765552937905173;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13745056111947299;  // std dev = 1,100, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.1280802373429925;  // std dev = 0,701, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.2372469761049034;  // std dev = 1,451, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.21376489624315612;  // std dev = 1,469, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.21549129004419362;  // std dev = 0,114, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10598007546141482;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10346194546944476;  // std dev = 1,101, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.10139840907391946;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.19068911368317487;  // std dev = 1,461, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.17103006133200202;  // std dev = 1,478, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.18008497342741142;  // std dev = 0,055, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.29774852064399016;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05923687858272301;  // std dev = 1,825, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.28669572993029346;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09761989847849145;  // std dev = 1,497, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.181674423624994;  // std dev = 0,126, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.22399561394843814;  // std dev = 0,378, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1622241965688425;  // std dev = 0,162, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10519056820790744;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0386201534892198;  // std dev = 1,058, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.16080199182441893;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.01510166278881772;  // std dev = 1,418, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return -0.013425033900625771;  // std dev = 1,520, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.16605258576147772;  // std dev = 0,094, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.14140310890509142;  // std dev = 0,144, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09569265870309185;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.029702743052699487;  // std dev = 1,059, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.14026690291860786;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.01204283838978859;  // std dev = 1,418, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return -0.010547117344414306;  // std dev = 1,519, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.14436481926669398;  // std dev = 0,084, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.510073
   AUC PR    = 0.896585
   CLL	      = -0.483352
   Precision = 0.943987 at threshold = 0.5
   Recall    = 0.895313
   F1        = 0.919006


Total learning time: 6.752 seconds
Total inference time: 2.781 seconds
AUC ROC: 0.510073


Refined model AUC ROC: 0.510073


Dataset: 9_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 04:42:49
{'Recall': 0.895313, 'Learning time': 7.979, 'F1': 0.919006, 'Precision': [0.943987, 0.5], 'AUC PR': 0.896585, 'CLL': -0.483352, 'parameter': {'Recall': 1.0, 'Learning time': 1.227, 'F1': 0.972644, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746, 'CLL': -0.255769, 'AUC ROC': 0.678571, 'Inference time': 1.411}, 'AUC ROC': 0.510073, 'Inference time': 2.781}


