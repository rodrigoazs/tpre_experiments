Starting experiment #3 for 23_twitter_yeast

Start learning from source dataset

Source train facts examples: 1654
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29200543734166007;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.09020635136745384;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.2270809739344648;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.08314893509951238;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5851330620836346;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.22683580378638235;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.1882460224781517;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5991127905211964;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.2526203131924544;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.07886693386734875;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.19713137927354563;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.07272278883431886;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4981430915465945;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1969210904003981;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.16375184812598748;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5096464309523057;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.09446743783575556;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.21208528513787867;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06835396613002147;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.16724566458008155;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.06309589017977435;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.39886930514184443;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1670738174611126;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.13978785669186128;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.40720674267139145;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.08165239320886175;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.17334061750398871;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.05877963201700046;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.1389729067688014;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.05435067930596077;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.3057854255901676;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.13883879987571035;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.11731127304472054;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.3114987982673407;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.06990902274840138;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.13859145217508886;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02448873109545597;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1134469960899069;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.06771287265166642;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23000136926846015;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1133466292034283;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.0969996134762259;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.2340980963909117;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.059354635365447495;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.10895946535964378;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.020816695607487626;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09127674823220668;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.05744216078545243;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.17271568132403478;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09120438598104755;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.07921312917783944;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.1759434171915245;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.05002771289938786;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08462011211980974;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01765046826884379;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07260402664850304;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.048386137564603;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.13054546027323538;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0725536046306809;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.06403412369586667;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.1332991893384412;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.04190386852605733;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06515171598735661;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.014933472875285356;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.057244418232963515;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.0405120888832632;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.09955734732282068;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.057210435785212115;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.0513441999643536;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10201484413152792;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.03491396367325339;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.04986151465309018;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012611476250501998;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.044832884464344205;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.033746202861237945;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.07659485299962451;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.044810796027097304;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.04090517157364211;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.07882946968212366;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.02896103559795105;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.03800098417869495;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010633908518233313;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.034935447605181504;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.027989760801495015;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05938513296081307;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.034921719305504965;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.032424761151944;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06142578394326317;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.023934242922604824;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Starting fold 1

Target train facts examples: 2602
Target train pos examples: 1915
Target train neg examples: 1915

Target test facts examples: 7939
Target test pos examples: 2559
Target test neg examples: 2559

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5757281858199687;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.40703401228647185;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4726067664248142;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.2512523833753696;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.20245273256786203;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.25641733336790823;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.22301379996437593;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.49039368626887286;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.3499504012571147;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4048669494692854;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G), location(B, G) )
%   | then return 0.2178362234341867;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1759791001800393;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.2222533343739347;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.19364213169835515;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.3087411357856349;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3932349741772913;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.28831652347606607;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.3300144050637663;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.18409479822219876;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.149887935321414;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.18767118601653818;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.16439240018961157;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.2564123687585864;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30192599492289823;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.2290868154084235;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.2583991109331592;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.15203242302745754;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.12533403769766704;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.15478176331167337;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.13674387474216756;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.20613740734453975;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22725733148497756;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.16538530597325068;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1972175702131778;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.25125738343602533;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.12313529782067019;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.10314669920153498;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.12515360753864924;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.11177642518948794;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17058334033195305;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.12602151681448456;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1486282837621727;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.1910584974064634;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.09819212681247026;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.08377067633723646;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.09961589427446413;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09007033514012781;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.12455597792081974;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12875100599334577;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.0952113247238772;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.11152459350905382;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.14384752014289565;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.07737163105835541;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.0673112280062798;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.0783413070042076;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.07176189529512493;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.09797365505128333;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07161883731602345;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.08368236452852174;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.10803782391368284;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.0604226695435468;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.0536307730357959;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.06106136138598137;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.05667577361036688;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.0718608885005585;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.07516729268282679;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.053763594510471;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.06290665890867196;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.08123983823979983;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.046875741961736224;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04245022410291989;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.04728154659705981;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.04446251095505921;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.058090788657778156;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.040329012223682875;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.04740256098286105;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.061247830895451695;  // std dev = 4,393, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.036190159301215656;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03342982979936466;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.03643665464031784;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.03470472349489552;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.0407602532330562;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Results
   AUC ROC   = 0.661064
   AUC PR    = 0.641713
   CLL	      = -0.648268
   Precision = 0.619013 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.644303


Total learning time: 8.96 seconds
Total inference time: 2.744 seconds
AUC ROC: 0.661064


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(A, G), location(B, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(B, E), location(A, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(A, H), location(B, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.393, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}]]
[{'': [0.2259277871320757, 0.234404439465931], 'true,false': [0.24761024922842703, 0.23582766439909286], 'true,false,false': [0.2368994048483088, 0.0], 'true': [0.20265926965594272, 0.24666827006287184], 'false': [0.23857312722947432, 0.23001365213893224], 'false,false': [0.22941154463416435, 0.23647917793401985], 'false,false,true': [0.22575869251722677, 0.2396506812091245], 'false,false,false': [0.23173849525201012, 0.25]}, {'': [0.22396676777927935, 0.2342294041959124], 'true,false': [0.2476102492284163, 0.23524344676778758], 'true,false,false': [0.2368994048483086, 0.0], 'true': [0.20265926965591025, 0.24643160901368208], 'false': [0.23857312722946983, 0.22982812520720233], 'false,false': [0.2292765953326627, 0.23587720566286918], 'false,false,true': [0.2257586925172241, 0.23965068120912517], 'false,false,false': [0.2317384952520093, 0.25000000000000006]}, {'': [0.2220102059850299, 0.23406678413312665], 'true,false': [0.24761024922842284, 0.2346765425555035], 'true,false,false': [0.23689940484830868, 0.0], 'true': [0.20265926965593234, 0.24619822863121807], 'false': [0.23857312722948298, 0.22965486817308647], 'false,false': [0.22915164944262395, 0.23530328269906675], 'false,false,true': [0.22575869251721734, 0.23965068120912197], 'false,false,false': [0.23173849525201, 0.25000000000000006]}, {'': [0.22073455490345303, 0.23393954833817496], 'true,false': [0.24761024922842947, 0.23437698357374606], 'true,false,false': [0.2368994048483083, 0.0], 'true': [0.20265926965592695, 0.2460508890462185], 'false': [0.2385731272294816, 0.22951992478663366], 'false,false': [0.22905354470793246, 0.23486478020088095], 'false,false,true': [0.22575869251721792, 0.23965068120912095], 'false,false,false': [0.23173849525200926, 0.24999999999999992]}, {'': [0.22010707435782625, 0.2338533209256294], 'true,false': [0.2486364596156994, 0.23535670883607607], 'true,false,false': [0.23689940484830926, 0.23235386211726278], 'true': [0.202659269655924, 0.24597892338370736], 'false': [0.23857312722949553, 0.22942951323119756], 'false,false': [0.2289865203411336, 0.23458500191200835], 'false,false,true': [0.2257586925172183, 0.23965068120912433], 'false,false,false': [0.23173849525200843, 0.24999999999999997]}, {'': [0.21970668555614173, 0.23380129409034625], 'true,false': [0.24863645961570244, 0.23508395860429301], 'true,false,false': [0.2368994048483086, 0.23236835084532728], 'true': [0.20265926965592113, 0.24562255808460606], 'false': [0.23857312722949303, 0.22937576503083915], 'false,false': [0.22894569049530117, 0.23442940052342937], 'false,false,true': [0.22575869251723277, 0.2396506812091229], 'false,false,false': [0.23173849525200843, 0.25000000000000006]}, {'': [0.21951090316355845, 0.2337726805308763], 'true,false': [0.24863645961569794, 0.23490661092816825], 'true,false,false': [0.23689940484830843, 0.23239143121493974], 'true': [0.2026592696559198, 0.24541658059254495], 'false': [0.23857312722949486, 0.2293466527952507], 'false,false': [0.22892303624567745, 0.2343510472843121], 'false,false,true': [0.22575869251721845, 0.23965068120912275], 'false,false,false': [0.23173849525200838, 0.25]}, {'': [0.219411126120273, 0.2337580884839746], 'true,false': [0.248636459615701, 0.2348065177442162], 'true,false,false': [0.23689940484830915, 0.23241703643919218], 'true': [0.20265926965592118, 0.24530437615806946], 'false': [0.2385731272294912, 0.22933200976890047], 'false,false': [0.2289114036660797, 0.2343142976844266], 'false,false,true': [0.22575869251722094, 0.23965068120912217], 'false,false,false': [0.23173849525200896, 0.25000000000000006]}, {'': [0.21935690052343632, 0.23375112087717356], 'true,false': [0.2486364596156981, 0.23475446141520226], 'true,false,false': [0.23689940484830901, 0.23244146524990197], 'true': [0.20265926965592354, 0.24524423874825663], 'false': [0.23857312722948973, 0.22932509619927346], 'false,false': [0.22890582415116284, 0.23429795704688985], 'false,false,true': [0.22575869251722167, 0.23965068120912442], 'false,false,false': [0.23173849525200824, 0.2499999999999999]}, {'': [0.2193252352984809, 0.23374800065981244], 'true,false': [0.2486364596156948, 0.2347290977562546], 'true,false,false': [0.23689940484830863, 0.23246294491472433], 'true': [0.2026592696559208, 0.2452118766986677], 'false': [0.23857312722949203, 0.22932202534905938], 'false,false': [0.22890332067005864, 0.23429101490628235], 'false,false,true': [0.22575869251723238, 0.239650681209123], 'false,false,false': [0.23173849525200868, 0.25000000000000006]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;true,false;location(A, E).;true;true
0;true,false,false;location(B, F).;true;true
0;true;location(A, D), location(B, D).;true;true
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;true,false;location(A, E).;true;true
1;true,false,false;location(B, F).;true;true
1;true;location(B, D), location(A, D).;true;true
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;true,false;location(A, E).;true;true
2;true,false,false;location(B, F).;true;true
2;true;location(A, D), location(B, D).;true;true
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;true,false;location(A, E).;true;true
3;true,false,false;location(B, F).;true;true
3;true;location(A, D), location(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5757281858199687;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.6842358916212514;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return 0.3550939452828082;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=244 */
%   | | else if ( location(B, G) )
%   | | | then return 0.4726067664248142;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( function(B, H), phenotype(A, I) )
%   | then return 0.2016139806922127;  // std dev = 0,475, 987,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=339 */
%   | else if ( complex(B, J), location(A, K) )
%   | | then return 0.1712802482308268;  // std dev = 0,464, 198,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=62 */
%   | | else if ( function(B, L) )
%   | | | then return 0.2738917288910819;  // std dev = 14,802, 902,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=375 */
%   | | | else return 0.4295775065280833;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.49039368626887286;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.5792891135108365;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return 0.30615824281771936;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=244 */
%   | | else if ( location(B, G) )
%   | | | then return 0.4048669494692854;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, H), enzyme(B, I) )
%   | then return 0.09225780445582452;  // std dev = 0,439, 215,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( complex(B, J), location(A, K) )
%   | | then return 0.14508270518526462;  // std dev = 0,463, 341,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=106 */
%   | | else if ( phenotype(A, L), phenotype(B, L) )
%   | | | then return 0.45084030722437374;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.22691009428619235;  // std dev = 19,256, 1.545,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=621 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3932349741772913;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.2863791607625615;  // std dev = 0,489, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else return 0.3326971673457012;  // std dev = 0,484, 84,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( function(B, F), phenotype(A, G) )
%   | then if ( enzyme(B, H), complex(A, I) )
%   | | then return 0.050370757475739;  // std dev = 0,422, 138,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=32 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then return 0.2128021448605344;  // std dev = 9,564, 379,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=156 */
%   | | | else return 0.12163026550110859;  // std dev = 10,103, 470,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=151 */
%   | else if ( enzyme(A, K), phenotype(B, L) )
%   | | then return -0.003372081944981012;  // std dev = 0,397, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( complex(B, M), location(A, N) )
%   | | | then return 0.14485103642305072;  // std dev = 6,394, 185,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=61 */
%   | | | else return 0.20978944650689332;  // std dev = 14,945, 915,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=389 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30192599492289823;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.2280355515776225;  // std dev = 0,488, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else return 0.26033929478676426;  // std dev = 0,484, 84,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( phenotype(A, F), function(B, G) )
%   | then if ( proteinclass(B, H), enzyme(B, I) )
%   | | then return -0.046394217751008694;  // std dev = 0,359, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.16059526408922964;  // std dev = 10,135, 437,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=170 */
%   | | | else return 0.10249382976471128;  // std dev = 10,507, 510,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=163 */
%   | else if ( phenotype(A, K), proteinclass(A, L) )
%   | | then return 0.7178299810922284;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M), complex(B, N) )
%   | | | then return 0.10695388267128993;  // std dev = 6,515, 198,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=62 */
%   | | | else return 0.16664238207819124;  // std dev = 15,049, 932,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=390 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( phenotype(A, D), phenotype(B, D) )
%   | then return 0.36893753676700297;  // std dev = 0,347, 258,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=222 */
%   | else if ( enzyme(B, E) )
%   | | then if ( proteinclass(B, F), phenotype(B, G) )
%   | | | then return 0.23146200536800954;  // std dev = 3,097, 45,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | | | else return -0.01544603057603433;  // std dev = 7,056, 215,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=91 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.1574337223480723;  // std dev = 9,413, 381,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=225 */
%   | | | else return 0.24010407722816454;  // std dev = 13,113, 809,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=551 */
%   else if ( phenotype(A, J), enzyme(B, K) )
%   | then return 0.04757709580332099;  // std dev = 0,436, 215,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( complex(B, L), location(A, M) )
%   | | then return 0.07992003160997335;  // std dev = 0,462, 341,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=106 */
%   | | else if ( complex(A, N), function(B, P) )
%   | | | then return 0.16473028683349494;  // std dev = 10,825, 481,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=205 */
%   | | | else return 0.11742418559803008;  // std dev = 16,018, 1.085,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=429 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( enzyme(B, D) )
%   | then return 0.044350158423804256;  // std dev = 0,478, 298,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=151 */
%   | else return 0.1814908173554118;  // std dev = 0,453, 1.410,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=968 */
%   else if ( phenotype(A, E), phenotype(B, E) )
%   | then if ( complex(A, F), complex(B, G) )
%   | | then return -0.2556699210081661;  // std dev = 0,073, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.4045162729758942;  // std dev = 1,409, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.21869102130403092;  // std dev = 2,704, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( function(B, I), phenotype(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.09419681782269695;  // std dev = 11,427, 579,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=208 */
%   | | | else return 0.03749062191509526;  // std dev = 8,702, 362,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=109 */
%   | | else if ( complex(A, L), phenotype(B, M) )
%   | | | then return -0.015046921338857672;  // std dev = 2,425, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.107473812674771;  // std dev = 16,237, 1.106,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=449 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.22561786823253058;  // std dev = 0,370, 304,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=244 */
%   else if ( enzyme(B, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then return 0.6320551737782745;  // std dev = 0,297, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15682674336961538;  // std dev = 2,051, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.036098505319203354;  // std dev = 6,711, 232,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=67 */
%   | | | else return 0.056498892162255274;  // std dev = 9,990, 434,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=181 */
%   | else if ( function(B, I), function(A, I) )
%   | | then if ( phenotype(B, J), complex(B, K) )
%   | | | then return 0.17598840799979654;  // std dev = 7,257, 268,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=191 */
%   | | | else return 0.09990503948706872;  // std dev = 14,409, 922,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=585 */
%   | | else if ( proteinclass(A, L), function(B, M) )
%   | | | then return 0.02839933091748785;  // std dev = 6,843, 216,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=70 */
%   | | | else return 0.0854356146657159;  // std dev = 18,363, 1.432,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=565 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C) )
%   then if ( phenotype(B, D), proteinclass(B, E) )
%   | then return 0.14829606791417277;  // std dev = 0,436, 104,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=62 */
%   | else if ( complex(A, F) )
%   | | then return -0.030799887421531256;  // std dev = 0,446, 244,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=71 */
%   | | else if ( location(A, G), location(B, G) )
%   | | | then return 0.0810535966438253;  // std dev = 7,463, 234,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=112 */
%   | | | else return -0.021887193661824438;  // std dev = 5,779, 157,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
%   else if ( phenotype(B, H), complex(B, I) )
%   | then return 0.12660835103363893;  // std dev = 0,431, 589,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=370 */
%   | else if ( phenotype(A, J), location(B, K) )
%   | | then if ( location(L, K), phenotype(L, J) )
%   | | | then return 0.0694604923698386;  // std dev = 15,417, 1.064,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=549 */
%   | | | else return -0.14756788402391952;  // std dev = 3,431, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( proteinclass(B, M), location(A, N) )
%   | | | then return 0.013473630581805524;  // std dev = 6,112, 156,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=69 */
%   | | | else return 0.0933038141503241;  // std dev = 16,687, 1.210,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=617 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( phenotype(B, D), complex(B, E) )
%   | then return 0.11362618924887759;  // std dev = 0,421, 377,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=255 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return 0.22594794774267543;  // std dev = 0,443, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( enzyme(B, H), phenotype(B, I) )
%   | | | then return 0.132809149983041;  // std dev = 5,348, 145,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=85 */
%   | | | else return 0.052287333783043795;  // std dev = 18,380, 1.511,000 (wgt'ed) examples reached here.  /* #neg=722 #pos=789 */
%   else if ( enzyme(B, J) )
%   | then if ( enzyme(A, K), proteinclass(B, L) )
%   | | then return 0.411087595581795;  // std dev = 0,362, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return -0.024328949363163165;  // std dev = 0,449, 310,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=93 */
%   | else if ( phenotype(B, M), phenotype(A, M) )
%   | | then return 0.13886781262175202;  // std dev = 0,377, 95,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=77 */
%   | | else if ( location(B, N), phenotype(A, P) )
%   | | | then return 0.011984751384140025;  // std dev = 11,202, 551,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=212 */
%   | | | else return 0.06198803917079164;  // std dev = 13,793, 807,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=378 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( phenotype(A, D), phenotype(B, D) )
%   | then return 0.1491684361863313;  // std dev = 0,350, 196,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=160 */
%   | else if ( proteinclass(B, E) )
%   | | then if ( enzyme(B, F), phenotype(B, G) )
%   | | | then return 0.12208858048141027;  // std dev = 2,666, 35,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return -0.007683153702488724;  // std dev = 8,513, 324,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=160 */
%   | | else if ( complex(A, H), complex(B, H) )
%   | | | then return 0.2730468087006403;  // std dev = 0,939, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.052847010076636405;  // std dev = 18,184, 1.487,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=789 */
%   else if ( phenotype(B, I), phenotype(A, I) )
%   | then return 0.09762282532986927;  // std dev = 0,393, 108,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=84 */
%   | else if ( enzyme(B, J), phenotype(B, K) )
%   | | then return -0.043218793338698554;  // std dev = 0,428, 104,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else if ( complex(B, L), location(A, M) )
%   | | | then return -0.01155378851286869;  // std dev = 7,467, 255,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=96 */
%   | | | else return 0.03691072561305278;  // std dev = 17,404, 1.307,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=558 */


Results
   AUC ROC   = 0.677596
   AUC PR    = 0.682851
   CLL	      = -0.641396
   Precision = 0.652156 at threshold = 0.5
   Recall    = 0.614693
   F1        = 0.632871


Total learning time: 39.362 seconds
Total inference time: 2.926 seconds
AUC ROC: 0.677596


Refined model AUC ROC: 0.677596


Dataset: 23_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:48:13
{'Recall': 0.614693, 'Learning time': 48.322, 'F1': 0.632871, 'Precision': [0.652156, 0.5], 'AUC PR': 0.682851, 'CLL': -0.641396, 'parameter': {'Recall': 0.671747, 'Learning time': 8.96, 'F1': 0.644303, 'Precision': [0.619013, 0.5], 'AUC PR': 0.641713, 'CLL': -0.648268, 'AUC ROC': 0.661064, 'Inference time': 2.744}, 'AUC ROC': 0.677596, 'Inference time': 2.926}


Starting fold 2

Target train facts examples: 2686
Target train pos examples: 1170
Target train neg examples: 1170

Target test facts examples: 7855
Target test pos examples: 3304
Target test neg examples: 3304

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5529232818928568;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.3591672650384081;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.17856237179201465;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.17937798537883787;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.2321326749369086;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.4715677637025921;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.3096019020340061;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, G), location(B, G) )
%   | then return 0.15540673758506965;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1561099456434237;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.2014631058629979;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3794857313889192;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.25708430335729765;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.3027909085849406;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.13286678789882134;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1334508643879969;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.17078231966394156;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29250616963481685;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.20662610136742468;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.2393401664098931;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.11177696953660793;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.11224516657087355;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.1417287681464071;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2206305251671384;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.17818909875966968;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1843038277162846;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.035947719449323325;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.09272100366587427;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.09308417727823429;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.11550552605316856;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16552939712634876;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.13719027731221242;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.13977569193759043;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02784598355276367;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.0760060907193902;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.07627941954993961;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.09275758601491853;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12458030777641482;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.10437806132464765;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1052107561348137;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.021508458667723534;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.061698809093155824;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.061898789279218464;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.07363337642475215;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.09435248460884635;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07886719962599706;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.07895904348963037;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.016577669551537565;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.04969117809332778;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04983350236659652;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.05793638917824381;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.07194480084847392;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.05936523998587631;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.0592222778258641;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.012756658380341837;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03976956721428066;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03986795857633476;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.0452814457676571;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.05519924085201672;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.044596674252573666;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.04444053765471761;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.009804427613342742;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03167119169531126;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03173697758939641;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.035213399803294236;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.644496
   AUC PR    = 0.635119
   CLL	      = -0.664825
   Precision = 0.676772 at threshold = 0.5
   Recall    = 0.479722
   F1        = 0.561459


Total learning time: 6.671 seconds
Total inference time: 2.05 seconds
AUC ROC: 0.644496


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(A, G), location(B, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [2.63e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [2.63e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(B, E), location(A, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(A, H), location(B, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.86e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.32e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}]]
[{'': [0.23483793717979465, 0.22277499999999573], 'false,false,false': [0.22222222222222213, 0.0], 'true,false,false': [0.24489795918367332, nan], 'true,false': [0.24999896300413862, 0.24489795918367332], 'false': [0.21774866627940617, 0.22572910484899184], 'false,false': [0.22526150168852507, 0.2469135802469134], 'false,false,true': [0.218040947535972, 0.23411990217463302], 'true': [0.21206295383122495, 0.24999596780697392]}, {'': [0.23221617029452066, 0.2223713878319356], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.24489795918367355, nan], 'true,false': [0.24999896300413743, 0.24489795918367355], 'false': [0.21774866627939862, 0.2251289835571047], 'false,false': [0.22508620670864884, 0.22129878558573596], 'false,false,true': [0.21804094753597164, 0.23411990217463371], 'true': [0.21206295383122042, 0.24997595498263928]}, {'': [0.2296077261759118, 0.22200076078409592], 'false,false,false': [0.22222222222222224, 2.3129646346357427e-18], 'true,false,false': [0.2448979591836735, nan], 'true,false': [0.24999896300413751, 0.2448979591836735], 'false': [0.21774866627940231, 0.22457851631678385], 'false,false': [0.22492609036975134, 0.19821944611854894], 'false,false,true': [0.21804094753596484, 0.23411990217463113], 'true': [0.21206295383121893, 0.24995621416113467]}, {'': [0.22784436146179837, 0.22172033338545216], 'false,false,false': [0.2222222222222222, -1.1564823173178713e-18], 'true,false,false': [0.24489795918367344, nan], 'true,false': [0.24999896300413216, 0.24489795918367344], 'false': [0.21774866627940329, 0.22416330173934715], 'false,false': [0.2247995090856411, 0.18063518427729497], 'false,false,true': [0.21804094753597258, 0.23411990217463116], 'true': [0.21206295383122498, 0.24994209381101123]}, {'': [0.22693258152033915, 0.22153638558230151], 'false,false,false': [0.22222222222222224, 2.3129646346357427e-18], 'true,false,false': [0.24489795918367346, 0.23437499999999972], 'true,false': [0.2497027348394772, 0.23771799890782702], 'false': [0.2177486662794043, 0.22389183576042013], 'false,false': [0.22471101865756862, 0.16884368943588668], 'false,false,true': [0.21804094753596528, 0.2341199021746294], 'true': [0.2120629538312195, 0.2499341772844101]}, {'': [0.22621455252043762, 0.22142510038593888], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.2448979591836735, 0.23437500000000044], 'true,false': [0.24970273483947988, 0.23678157666180236], 'false': [0.2177486662794074, 0.2237276313715651], 'false,false': [0.2246552092389442, 0.16145163178405963], 'false,false,true': [0.2180409475359656, 0.234119902174633], 'true': [0.2120629538312215, 0.24910586756011374]}, {'': [0.2258439659509145, 0.22136008812616761], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.24489795918367344, 0.23437500000000006], 'true,false': [0.24970273483947394, 0.2362361756723854], 'false': [0.2177486662793985, 0.22363118780209013], 'false,false': [0.22462290229340787, 0.15690703181708032], 'false,false,true': [0.21804094753597075, 0.23411990217463197], 'true': [0.21206295383122964, 0.24859722175941404]}, {'': [0.2256478298181946, 0.22132236134499278], 'false,false,false': [0.2222222222222222, 1.1564823173178713e-18], 'true,false,false': [0.2448979591836735, 0.23437500000000014], 'true,false': [0.24970273483947802, 0.23592855702676918], 'false': [0.21774866627939915, 0.22357457918026793], 'false,false': [0.2246055106496044, 0.15409061351220688], 'false,false,true': [0.21804094753596787, 0.2341199021746322], 'true': [0.21206295383122625, 0.2482988566744131]}, {'': [0.22554055512278723, 0.22130020470708583], 'false,false,false': [0.2222222222222222, -5.782411586589357e-19], 'true,false,false': [0.24489795918367344, 0.23437499999999994], 'true,false': [0.2497027348394776, 0.23575745756761365], 'false': [0.21774866627940268, 0.22354078744949876], 'false,false': [0.2245967353935799, 0.1523086979512101], 'false,false,true': [0.2180409475359664, 0.2341199021746318], 'true': [0.21206295383122659, 0.24812838838071027]}, {'': [0.22547991565153294, 0.2212868459216228], 'false,false,false': [0.2222222222222222, 5.782411586589357e-19], 'true,false,false': [0.24489795918367352, 0.23437500000000028], 'true,false': [0.2497027348394745, 0.23566270263707984], 'false': [0.21774866627940226, 0.22352002582752162], 'false,false': [0.2245925783384848, 0.15115234510925923], 'false,false,true': [0.21804094753597172, 0.23411990217463333], 'true': [0.21206295383122498, 0.24803239409594763]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;location(B, G), location(A, G).;true;true
0;false,false;location(A, H).;true;true
0;false,false,false;location(B, J).;true;true
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;location(A, G), location(B, G).;true;true
1;false,false;location(A, H).;true;true
1;false,false,false;location(B, J).;true;true
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;location(B, G), location(A, G).;true;true
2;false,false;location(A, H).;true;true
2;false,false,false;location(B, J).;true;true
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;location(B, G), location(A, G).;true;true
3;false,false;location(A, H).;true;true
3;false,false,false;location(B, J).;true;true
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;location(B, H), location(A, H).;true;true
4;false,false;location(A, I).;true;true
4;false,false,false;location(B, K).;true;true
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;location(B, H), location(A, H).;true;true
5;false,false;location(A, I).;true;true
5;false,false,false;location(B, K).;true;true
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;location(A, H), location(B, H).;true;true
6;false,false;location(A, I).;true;true
6;false,false,false;location(B, K).;true;true
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;location(B, H), location(A, H).;true;true
7;false,false;location(A, I).;true;true
7;false,false,false;location(B, K).;true;true
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;location(B, H), location(A, H).;true;true
8;false,false;location(A, I).;true;true
8;false,false,false;location(B, K).;true;true
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;location(B, H), location(A, H).;true;true
9;false,false;location(A, I).;true;true
9;false,false,false;location(B, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5529232818928568;  // std dev = 0,461, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( phenotype(B, E), location(B, F) )
%   | | then if ( proteinclass(B, G), phenotype(A, E) )
%   | | | then return 0.6968586125188665;  // std dev = 2,048, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.41708429631623967;  // std dev = 8,052, 263,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=147 */
%   | | else if ( enzyme(B, H) )
%   | | | then return 0.08395538671241559;  // std dev = 2,328, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.262773212556161;  // std dev = 6,456, 173,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=70 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.17856237179201465;  // std dev = 0,467, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, J) )
%   | | then return 0.20086416688758724;  // std dev = 0,475, 604,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=207 */
%   | | else if ( location(B, K) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.4715677637025921;  // std dev = 0,461, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(B, E), phenotype(B, F) )
%   | | then if ( complex(B, G), location(A, H) )
%   | | | then return 0.28171962192092925;  // std dev = 5,013, 101,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=49 */
%   | | | else return 0.4356492006808195;  // std dev = 6,619, 193,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=124 */
%   | | else if ( proteinclass(A, I), enzyme(B, J) )
%   | | | then return -0.1523813442822817;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.21880010278604198;  // std dev = 6,831, 196,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=77 */
%   else if ( location(A, K), location(B, K) )
%   | then return 0.15540673758506965;  // std dev = 0,467, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, L) )
%   | | then if ( proteinclass(A, M), function(B, N) )
%   | | | then return 0.0732768815813597;  // std dev = 5,153, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.20662524008185337;  // std dev = 10,370, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.2570488579851775;  // std dev = 0,470, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.615759441357699;  // std dev = 0,254, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( phenotype(A, E), phenotype(B, E) )
%   | | then return 0.439467361604394;  // std dev = 0,432, 264,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=197 */
%   | | else if ( phenotype(B, F), location(B, G) )
%   | | | then return 0.3244154959080549;  // std dev = 10,724, 495,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=307 */
%   | | | else return 0.22495836731431568;  // std dev = 10,745, 480,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=237 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( proteinclass(B, I) )
%   | | then return 0.02673906549202648;  // std dev = 0,410, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else return 0.15630193164795517;  // std dev = 0,475, 317,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=109 */
%   | else if ( location(A, J) )
%   | | then if ( function(B, K), proteinclass(A, L) )
%   | | | then return 0.06277893162600826;  // std dev = 5,153, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.175720411418844;  // std dev = 10,370, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.21536374721867504;  // std dev = 0,466, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.4709642787127638;  // std dev = 0,254, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( phenotype(B, E), phenotype(A, E) )
%   | | then return 0.33942393690953293;  // std dev = 0,432, 264,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=197 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1883494673753204;  // std dev = 13,067, 706,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=373 */
%   | | | else return 0.2911382841775918;  // std dev = 7,648, 269,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=171 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(B, H), proteinclass(A, I) )
%   | | then return -0.06665503745221786;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.1234467218845332;  // std dev = 0,471, 363,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=121 */
%   | else if ( location(A, J) )
%   | | then if ( proteinclass(B, K), complex(A, L) )
%   | | | then return -0.056758556459425895;  // std dev = 2,025, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.13371319808014331;  // std dev = 11,397, 573,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=202 */
%   | | else return 0.17581317240585922;  // std dev = 0,463, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.2323931388856101;  // std dev = 0,450, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( phenotype(B, E), proteinclass(B, F) )
%   | | then return 0.23374971413193532;  // std dev = 0,450, 97,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   | | else if ( complex(A, G), complex(B, H) )
%   | | | then return -0.03517445824992732;  // std dev = 3,301, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.14350010121681514;  // std dev = 9,148, 347,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=170 */
%   else if ( location(B, I), location(A, I) )
%   | then if ( proteinclass(A, J), proteinclass(B, K) )
%   | | then return -0.05654024487294026;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.10224917658220233;  // std dev = 0,471, 363,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=121 */
%   | else if ( location(A, L) )
%   | | then if ( proteinclass(A, M), location(B, N) )
%   | | | then return -0.00671164857990814;  // std dev = 3,337, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.11621882574078786;  // std dev = 11,072, 534,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=193 */
%   | | else return 0.14056418209618585;  // std dev = 0,460, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), proteinclass(B, E) )
%   | then return 0.23938858350657524;  // std dev = 0,410, 194,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=147 */
%   | else if ( location(B, F), phenotype(B, G) )
%   | | then return 0.16766596973389278;  // std dev = 0,460, 696,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=464 */
%   | | else return 0.08546393632879497;  // std dev = 0,481, 450,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=224 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( enzyme(A, I) )
%   | | then return -0.030738168582594184;  // std dev = 0,404, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.034429807855418465;  // std dev = 4,640, 110,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | | | else return 0.11115102071427355;  // std dev = 7,409, 239,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
%   | else if ( location(A, K) )
%   | | then if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.11677455645985353;  // std dev = 7,461, 241,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | | else return 0.059836621848910365;  // std dev = 8,841, 363,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=117 */
%   | | else return 0.11063876789286281;  // std dev = 0,458, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2601933781879468;  // std dev = 0,254, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.06381346238958763;  // std dev = 0,485, 534,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=298 */
%   | | else return 0.1310027817762789;  // std dev = 0,462, 705,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=443 */
%   else if ( location(A, G), location(B, G) )
%   | then if ( phenotype(A, H), complex(A, I) )
%   | | then if ( enzyme(A, J), enzyme(B, K) )
%   | | | then return -0.23921579455478212;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10572924098742607;  // std dev = 6,186, 167,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=61 */
%   | | else return 0.03072959792551832;  // std dev = 0,451, 217,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=63 */
%   | else if ( location(A, L) )
%   | | then if ( phenotype(A, M), phenotype(B, M) )
%   | | | then return 0.4377198387800699;  // std dev = 1,438, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.06016587178326884;  // std dev = 11,428, 594,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=200 */
%   | | else return 0.08611616405499423;  // std dev = 0,456, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.20548482709101684;  // std dev = 0,254, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( enzyme(A, E), phenotype(B, F) )
%   | | then return 0.1655507166751956;  // std dev = 0,437, 144,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=103 */
%   | | else return 0.06572379082551381;  // std dev = 0,476, 1.095,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=638 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(B, H) )
%   | | then return -0.01745411820956956;  // std dev = 0,405, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.025993840303932435;  // std dev = 4,731, 108,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | | | else return 0.08320408190919597;  // std dev = 6,961, 209,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=77 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(B, K), phenotype(A, K) )
%   | | | then return 0.3454078548143626;  // std dev = 1,437, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.048013620955491075;  // std dev = 11,426, 594,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=200 */
%   | | else return 0.06651023845985021;  // std dev = 0,455, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( proteinclass(B, D), proteinclass(A, E) )
%   | then return 0.14588048378648902;  // std dev = 0,401, 183,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=136 */
%   | else if ( phenotype(A, F), phenotype(B, F) )
%   | | then return 0.09997633014920829;  // std dev = 0,431, 257,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=191 */
%   | | else return 0.041278519031777226;  // std dev = 0,477, 900,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=508 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then if ( proteinclass(A, J), complex(B, K) )
%   | | | then return 0.17855711982373018;  // std dev = 1,801, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.059443182405105405;  // std dev = 5,921, 156,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=55 */
%   | | else return 0.015002448783551846;  // std dev = 0,450, 217,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=63 */
%   | else if ( location(A, L) )
%   | | then if ( proteinclass(A, M), function(B, N) )
%   | | | then return -0.01498275449280881;  // std dev = 5,101, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.05977214009728042;  // std dev = 10,318, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.05109514996144969;  // std dev = 0,455, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.07156537612807441;  // std dev = 0,446, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( complex(B, E), complex(A, F) )
%   | | then return -0.08608226371651587;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else return 0.03261471562571551;  // std dev = 0,482, 434,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=228 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(A, H) )
%   | | then return -0.0032023606213763284;  // std dev = 0,435, 132,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else if ( phenotype(B, I) )
%   | | | then return -0.010369266620500743;  // std dev = 3,686, 70,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.0708563961483796;  // std dev = 6,587, 185,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=70 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K), proteinclass(B, L) )
%   | | | then return -0.11978897955706819;  // std dev = 1,885, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.04086320211239622;  // std dev = 11,337, 573,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=202 */
%   | | else return 0.039110129757098544;  // std dev = 0,454, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.664723
   AUC PR    = 0.697142
   CLL	      = -0.649466
   Precision = 0.680328 at threshold = 0.5
   Recall    = 0.502421
   F1        = 0.577994


Total learning time: 22.771 seconds
Total inference time: 3.298 seconds
AUC ROC: 0.664723


Refined model AUC ROC: 0.664723


Dataset: 23_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:48:49
{'Recall': 0.502421, 'Learning time': 29.442, 'F1': 0.577994, 'Precision': [0.680328, 0.5], 'AUC PR': 0.697142, 'CLL': -0.649466, 'parameter': {'Recall': 0.479722, 'Learning time': 6.671, 'F1': 0.561459, 'Precision': [0.676772, 0.5], 'AUC PR': 0.635119, 'CLL': -0.664825, 'AUC ROC': 0.644496, 'Inference time': 2.05}, 'AUC ROC': 0.664723, 'Inference time': 3.298}


Starting fold 3

Target train facts examples: 2735
Target train pos examples: 686
Target train neg examples: 686

Target test facts examples: 7806
Target test pos examples: 3788
Target test neg examples: 3788

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.8501489350995105;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.43197443845521255;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.19406224779300618;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.7130852249848937;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, F), function(B, F) )
%   | then return 0.3708864693780713;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.16875994531535027;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.5509164880993835;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.3043212216780253;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.14393055087761256;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.4141019373916255;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.24041898599049621;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.12060962648218426;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.31757830255335057;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.1850349419762722;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.09953476139856494;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.2520264880163002;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.14027114595289142;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.08109986026654882;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.20652583788560958;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.10555600320806177;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.06539668501014714;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.1737726927690092;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.0792094935913147;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.05229958774624011;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.149339811660917;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.05941132337546053;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.04155436179278542;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13053687472114384;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.04458789055409383;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.03284990266125654;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.641066
   AUC PR    = 0.650162
   CLL	      = -0.658227
   Precision = 0.630181 at threshold = 0.5
   Recall    = 0.626188
   F1        = 0.628178


Total learning time: 3.845 seconds
Total inference time: 2.909 seconds
AUC ROC: 0.641066


Structure after Parameter Learning
[['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E)', 'false': 'function(A, F), function(B, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}]]
[{'': [0.007873519778285758, 0.24752401907612634], 'true,false': [0.0, nan], 'true': [0.007936000000004014, 0.0], 'false': [0.24454979505427688, 0.22340591715976577], 'false,false': [0.22307555904878087, 0.25], 'false,false,true': [0.22307555904878087, nan], 'false,false,false': [0.25, nan]}, {'': [0.00787333718298307, 0.24360418610210924], 'true,false': [0.0, nan], 'true': [0.00793600000000214, 0.0], 'false': [0.2445497950542741, 0.22336108884361539], 'false,false': [0.2230755590487836, 0.25], 'false,false,true': [0.2230755590487836, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873171784791532, 0.23983807147367778], 'true,false': [0.0, nan], 'true': [0.007935999999998672, 0.0], 'false': [0.24454979505428565, 0.2233186282233166], 'false,false': [0.22307555904877585, 0.25], 'false,false,true': [0.22307555904877585, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873107515539967, 0.23700754740977792], 'true,false': [0.0, nan], 'true': [0.007936000000000347, 0.0], 'false': [0.2445497950542774, 0.2232859862909864], 'false,false': [0.22307555904878434, 0.25], 'false,false,true': [0.22307555904878434, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873093183907791, 0.2352539500178455], 'true,false': [0.0, nan], 'true': [0.007935999999999695, 0.0], 'false': [0.24454979505427388, 0.22326482892984384], 'false,false': [0.22307555904878065, 0.24999999999999997], 'false,false,true': [0.22307555904878065, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873093787569715, 0.2343055914382714], 'true,false': [0.0, nan], 'true': [0.00793599999999958, 0.0], 'false': [0.24454979505427807, 0.22325279753480812], 'false,false': [0.22307555904878043, 0.24999999999999997], 'false,false,true': [0.22307555904878043, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.0078730981121957, 0.23383536314949327], 'true,false': [0.0, nan], 'true': [0.007935999999999851, 0.0], 'false': [0.24454979505427382, 0.22324658165373243], 'false,false': [0.2230755590487742, 0.25], 'false,false,true': [0.2230755590487742, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873102857139307, 0.23361408284313243], 'true,false': [0.0, nan], 'true': [0.007936000000000235, 0.0], 'false': [0.24454979505427726, 0.22324358816080112], 'false,false': [0.22307555904878174, 0.24999999999999997], 'false,false,true': [0.22307555904878174, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873107107679108, 0.23351316510179398], 'true,false': [0.0, nan], 'true': [0.007935999999999947, 0.0], 'false': [0.24454979505427848, 0.22324222331877763], 'false,false': [0.22307555904877802, 0.24999999999999997], 'false,false,true': [0.22307555904877802, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873110685765697, 0.23346807475874934], 'true,false': [0.0, nan], 'true': [0.007936000000000117, 0.0], 'false': [0.24454979505427535, 0.2232416306151069], 'false,false': [0.22307555904877588, 0.25], 'false,false,true': [0.22307555904877588, nan], 'false,false,false': [0.25, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
0;true;function(A, D), function(B, D).;true;true
1;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
1;true;function(B, D), function(A, D).;true;true
2;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
2;true;function(A, D), function(B, D).;true;true
3;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
3;true;function(A, D), function(B, D).;true;true
4;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
4;true;function(A, D), function(B, D).;true;true
5;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
5;true;function(A, D), function(B, D).;true;true
6;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
6;true;function(B, D), function(A, D).;true;true
7;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
7;true;function(B, D), function(A, D).;true;true
8;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
8;true;function(B, D), function(A, D).;true;true
9;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
9;true;function(A, D), function(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.8502124271630025;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.24703782398840124;  // std dev = 2,925, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.008517731567154404;  // std dev = 1,862, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( proteinclass(B, H) )
%   | | | then return 0.28797349650302206;  // std dev = 5,286, 114,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=49 */
%   | | | else return 0.4353032437167424;  // std dev = 11,035, 499,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=288 */
%   | else if ( location(A, I) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.1145591915097676;  // std dev = 4,723, 117,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | | else return 0.227132892318762;  // std dev = 9,332, 374,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=138 */
%   | | else if ( function(A, L), function(B, L) )
%   | | | then return 0.5033102254220925;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.25814893509951237;  // std dev = 3,286, 45,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.7131359472613099;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.21423003928420992;  // std dev = 2,925, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.007484033389160131;  // std dev = 1,862, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( proteinclass(B, H) )
%   | | | then return 0.24918590179810876;  // std dev = 5,286, 114,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=49 */
%   | | | else return 0.373676291988986;  // std dev = 11,035, 499,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=288 */
%   | else if ( function(A, I), function(B, I) )
%   | | then if ( location(B, J), phenotype(A, K) )
%   | | | then return 0.19597908449237364;  // std dev = 3,904, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.3561864646353918;  // std dev = 5,674, 131,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=70 */
%   | | else if ( complex(B, L), location(A, M) )
%   | | | then return 0.04523690199964486;  // std dev = 3,960, 93,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | | else return 0.16266169809995412;  // std dev = 7,823, 277,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.5509518228438547;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.46971944840882324;  // std dev = 2,288, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.1751442901044228;  // std dev = 7,849, 261,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=109 */
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.16459977561128156;  // std dev = 3,640, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.3433083728855279;  // std dev = 8,913, 336,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=204 */
%   | else if ( function(A, H), function(B, H) )
%   | | then if ( location(B, I), phenotype(A, J) )
%   | | | then return 0.16690724087888653;  // std dev = 3,904, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.29812009763448366;  // std dev = 5,667, 131,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=70 */
%   | | else if ( proteinclass(A, K) )
%   | | | then return 0.24438264369678425;  // std dev = 3,894, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return 0.0870992820821174;  // std dev = 7,817, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.4141289500890792;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( function(A, F), function(B, F) )
%   | | then if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.4212900490524572;  // std dev = 2,635, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return 0.16627830826711246;  // std dev = 7,412, 233,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=101 */
%   | | else if ( phenotype(B, H) )
%   | | | then return -0.039827384406882646;  // std dev = 2,968, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return 0.07957021265908211;  // std dev = 6,507, 203,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=64 */
%   | else if ( function(A, I), function(B, I) )
%   | | then if ( proteinclass(A, J) )
%   | | | then return 0.15781677834909943;  // std dev = 3,361, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.3725636821577033;  // std dev = 7,620, 280,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=193 */
%   | | else if ( phenotype(B, K), location(A, L) )
%   | | | then return -0.008442078462327123;  // std dev = 4,441, 106,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | | else return 0.15144082116055438;  // std dev = 8,230, 284,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=117 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.31760302689185543;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(B, F), phenotype(B, G) )
%   | | | then return 0.267081024423797;  // std dev = 4,341, 86,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | | | else return 0.10930723469504153;  // std dev = 6,529, 184,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=76 */
%   | | else if ( location(B, H), location(A, H) )
%   | | | then return 0.3116648666823825;  // std dev = 6,508, 216,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=155 */
%   | | | else return 0.17204309831910314;  // std dev = 5,145, 110,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=59 */
%   | else if ( phenotype(B, I), location(A, J) )
%   | | then if ( enzyme(A, K), complex(B, L) )
%   | | | then return 0.2065656259723789;  // std dev = 1,911, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.04017309245732057;  // std dev = 4,901, 147,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=31 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return 0.0651362668026004;  // std dev = 6,504, 203,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=64 */
%   | | | else return 0.12185486678891422;  // std dev = 8,230, 284,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=117 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.25205125194200767;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( location(A, E), enzyme(A, F) )
%   | | then if ( enzyme(B, F) )
%   | | | then return 0.35568036497056355;  // std dev = 1,194, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.01254277907646925;  // std dev = 4,231, 87,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | else if ( complex(B, G), enzyme(B, H) )
%   | | | then return -0.003636794032218011;  // std dev = 2,957, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.2046451161298553;  // std dev = 10,022, 465,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=292 */
%   | else if ( location(A, I), phenotype(B, J) )
%   | | then if ( phenotype(A, K), complex(B, L) )
%   | | | then return 0.11093977068341666;  // std dev = 2,172, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.03339404531124576;  // std dev = 4,808, 140,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=30 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.07224055481376483;  // std dev = 1,828, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.08762647536386754;  // std dev = 10,306, 459,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=176 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.2065512419565272;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(B, E) )
%   | | | then return 0.31011177388288036;  // std dev = 1,220, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0030755081085318946;  // std dev = 4,323, 90,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else if ( location(B, F), location(A, F) )
%   | | | then return 0.17765113896458576;  // std dev = 8,275, 331,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=222 */
%   | | | else return 0.07859753287251213;  // std dev = 6,252, 165,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=81 */
%   | else if ( enzyme(A, G), proteinclass(A, H) )
%   | | then if ( location(B, I), complex(A, J) )
%   | | | then return -0.04521570650115719;  // std dev = 1,986, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.3999278251440233;  // std dev = 2,056, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( phenotype(B, K), location(A, L) )
%   | | | then return -0.014951692602052199;  // std dev = 5,118, 153,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=35 */
%   | | | else return 0.05189363477691469;  // std dev = 10,048, 452,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=164 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.173798788707063;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( enzyme(A, E), proteinclass(B, F) )
%   | | then if ( enzyme(B, G), phenotype(B, H) )
%   | | | then return 0.1842541502147464;  // std dev = 1,496, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.28932900499503994;  // std dev = 1,062, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( phenotype(A, I), phenotype(B, I) )
%   | | | then return 0.2527886171922854;  // std dev = 2,558, 42,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return 0.09215672438100724;  // std dev = 10,778, 529,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=302 */
%   | else if ( proteinclass(A, J), enzyme(B, K) )
%   | | then if ( enzyme(L, K), proteinclass(L, M) )
%   | | | then return 0.0681774056597675;  // std dev = 1,094, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.43491622652538225;  // std dev = 1,286, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(B, N), enzyme(A, P) )
%   | | | then return 0.15049166666679428;  // std dev = 2,509, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.023729593057651953;  // std dev = 11,253, 608,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=199 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.1493665085288679;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( phenotype(B, F), proteinclass(B, G) )
%   | | then if ( enzyme(A, H), complex(B, I) )
%   | | | then return 0.2111738480613966;  // std dev = 0,965, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2699153611208398;  // std dev = 1,417, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.044308808293486296;  // std dev = 5,867, 166,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=77 */
%   | | | else return -0.022945770270006455;  // std dev = 4,405, 112,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
%   | else if ( complex(B, K), function(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.13458169412305435;  // std dev = 3,525, 58,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.0060851397080683755;  // std dev = 7,333, 261,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=100 */
%   | | else if ( function(A, N), function(B, N) )
%   | | | then return 0.12192469123739423;  // std dev = 7,466, 276,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=181 */
%   | | | else return 0.055740365043072615;  // std dev = 9,037, 353,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=137 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13050056854493064;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else return 0.1385005685449303;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(B, E), phenotype(A, E) )
%   | then if ( complex(A, F), proteinclass(B, G) )
%   | | then return -0.3087353372822905;  // std dev = 0,967, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( function(A, H), function(B, H) )
%   | | | then return 0.24708463848613582;  // std dev = 2,149, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | | else return 0.016932964069918927;  // std dev = 0,973, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( proteinclass(A, K) )
%   | | | then return 0.04288712099349743;  // std dev = 3,060, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return -0.18687665175042592;  // std dev = 1,292, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else if ( phenotype(B, L), function(A, M) )
%   | | | then return 6.25769489790915E-4;  // std dev = 8,425, 345,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=136 */
%   | | | else return 0.05693217981383464;  // std dev = 13,027, 766,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=368 */


Results
   AUC ROC   = 0.656016
   AUC PR    = 0.68561
   CLL	      = -0.659243
   Precision = 0.703938 at threshold = 0.5
   Recall    = 0.410507
   F1        = 0.518593


Total learning time: 20.081 seconds
Total inference time: 3.142 seconds
AUC ROC: 0.656016


Refined model AUC ROC: 0.656016


Dataset: 23_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:49:19
{'Recall': 0.410507, 'Learning time': 23.926, 'F1': 0.518593, 'Precision': [0.703938, 0.5], 'AUC PR': 0.68561, 'CLL': -0.659243, 'parameter': {'Recall': 0.626188, 'Learning time': 3.845, 'F1': 0.628178, 'Precision': [0.630181, 0.5], 'AUC PR': 0.650162, 'CLL': -0.658227, 'AUC ROC': 0.641066, 'Inference time': 2.909}, 'AUC ROC': 0.656016, 'Inference time': 3.142}


Starting fold 4

Target train facts examples: 2518
Target train pos examples: 703
Target train neg examples: 703

Target test facts examples: 8023
Target test pos examples: 3771
Target test neg examples: 3771

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8470378239884007;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.26750566024571243;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.31379409638983136;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.30927675464837984;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7105993940723567;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(A, G), enzyme(B, G) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.23172769795212014;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.27115327770785763;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.26731462248230453;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5491847262103361;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.19532070447499686;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.2268368930846089;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.2237906669392987;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.41277954404907885;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.1690588431090709;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.1606358440297439;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.18438051344183984;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.18211127712533035;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3168425472758126;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.12942697422617847;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.14643943473025656;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.14483464060294043;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.22699179224124724;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(B, E), enzyme(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2512900483939143;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.10684292618038639;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.10261215167075714;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.11432030648835526;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.1132290343649292;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.1812058810760637;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20577023034156253;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.08036987809703344;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.08817272315581082;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.08745147187332257;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.14804913120500338;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17299624814408496;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.062390427518588636;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.06744943487504143;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.06698283639999936;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.12328872166165511;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.14854526489605638;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.04928605546308811;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.04812236044261775;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.051314649224567535;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.05101827554032202;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.10427374705508957;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1297276262983249;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.037650749190837426;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.036945933350026564;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.03889741736945186;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.03871272929453029;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */


Results
   AUC ROC   = 0.527381
   AUC PR    = 0.563771
   CLL	      = -0.680098
   Precision = 0.961783 at threshold = 0.5
   Recall    = 0.080085
   F1        = 0.147858


Total learning time: 4.322 seconds
Total inference time: 3.245 seconds
AUC ROC: 0.527381


Structure after Parameter Learning
[['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(A, G), enzyme(B, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [5.96e-08, 0, 16], 'true,false,true': [4.21e-08, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [5.16e-08, 0, 16], 'true,false,true': [4.21e-08, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(B, E), enzyme(A, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [2.11e-08, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [2.11e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(A, H), enzyme(B, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}]]
[{'': [0.015621063240114865, 0.24772888183593214], 'true,false': [-1.6148698540002277e-16, 0.009707804690505412], 'true,false,false': [-1.4802973661668753e-16, 0.010987654320987871], 'true': [0.07100591715976314, 0.00877124285378813], 'false': [-2.220446049250313e-16, 0.24702008392083769], 'false,false': [0.2424038380607709, 0.24771505032372082], 'false,false,true': [0.2444545043005882, 0.24178379672377806], 'false,false,false': [0.2480326482830416, 0.24761150997793907]}, {'': [0.015461575111338447, 0.24644785194164492], 'true,false': [1.6148698540002277e-16, 0.00970316366017141], 'true,false,false': [1.4802973661668753e-16, 0.010987654320987635], 'true': [0.07100591715976333, 0.00876399508294676], 'false': [2.220446049250313e-16, 0.24695648837194728], 'false,false': [0.24239179781074652, 0.24771402453317345], 'false,false,true': [0.24445450430058804, 0.24178379672378164], 'false,false,false': [0.2480326482830414, 0.24761150997795012]}, {'': [0.015314150748178547, 0.24519886234524826], 'true,false': [-2.0185873175002846e-16, 0.009698955910747783], 'true,false,false': [-2.590520390792032e-16, 0.010987654320986608], 'true': [0.07100591715976351, 0.008757423955117485], 'false': [-2.220446049250313e-16, 0.24689584427945993], 'false,false': [0.24238038832587921, 0.2477130376901582], 'false,false,true': [0.24445450430058865, 0.2417837967237787], 'false,false,false': [0.2480326482830372, 0.24761150997794926]}, {'': [0.015252435595846896, 0.24446503720180832], 'true,false': [1.6148698540002277e-16, 0.009697315522229464], 'true,false,false': [1.4802973661668753e-16, 0.010987654320986964], 'true': [0.0710059171597632, 0.008754862204984793], 'false': [1.6653345369377348e-16, 0.2468494109413185], 'false,false': [0.24237158963211222, 0.24771229064372416], 'false,false,true': [0.24445450430058868, 0.2417837967237763], 'false,false,false': [0.2480326482830401, 0.24761150997795806]}, {'': [0.015235919210622655, 0.24412554225982527], 'true,false': [nan, 0.008754285686624726], 'true,false,false': [-5.551115123125783e-17, 0.009792808945660009], 'true': [0.07100591715976336, 0.008754285686624726], 'false': [0.0, 0.24681971950186082], 'false,false': [0.24236586827141854, 0.24771182504537975], 'false,false,true': [0.24445450430058854, 0.2417837967237793], 'false,false,false': [0.24803264828303867, 0.2476115099779483]}, {'': [0.01523420388898935, 0.24397201855381287], 'true,false': [nan, 0.008754989640999439], 'true,false,false': [3.700743415417188e-17, 0.009793585924016662], 'true': [0.07100591715976326, 0.008754989640999432], 'false': [2.7755575615628914e-17, 0.2468032172037979], 'false,false': [0.24236261853455623, 0.24771157461857277], 'false,false,true': [0.2444545043005879, 0.24178379672377956], 'false,false,false': [0.24803264828303825, 0.2476115099779465]}, {'': [0.015236186283915964, 0.24389761951181033], 'true,false': [nan, 0.008755778345150773], 'true,false,false': [-2.7755575615628914e-17, 0.009794380341893262], 'true': [0.07100591715976336, 0.008755778345150766], 'false': [-3.469446951953614e-17, 0.2467949551039558], 'false,false': [0.24236095480180056, 0.24771145330735117], 'false,false,true': [0.24445450430058863, 0.2417837967237773], 'false,false,false': [0.24803264828304064, 0.24761150997796147]}, {'': [0.015238693008556403, 0.24385762715717435], 'true,false': [nan, 0.008756522000236305], 'true,false,false': [9.25185853854297e-18, 0.009795115501647748], 'true': [0.07100591715976333, 0.008756522000236331], 'false': [-1.3877787807814457e-17, 0.24679112556983154], 'false,false': [0.2423601685436053, 0.24771139859300312], 'false,false,true': [0.24445450430058815, 0.24178379672377873], 'false,false,false': [0.24803264828303948, 0.24761150997795406]}, {'': [0.01524079767711713, 0.2438333212319709], 'true,false': [nan, 0.008757182870388978], 'true,false,false': [9.25185853854297e-18, 0.00979576822149935], 'true': [0.07100591715976333, 0.008757182870389], 'false': [-2.42861286636753e-17, 0.24678945355550513], 'false,false': [0.24235982048915428, 0.2477113751008551], 'false,false,true': [0.24445450430058813, 0.24178379672377906], 'false,false,false': [0.2480326482830375, 0.24761150997795117]}, {'': [0.015242296449210156, 0.24381656568964086], 'true,false': [nan, 0.008757757573019153], 'true,false,false': [0.0, 0.009796338450450864], 'true': [0.07100591715976332, 0.008757757573019153], 'false': [0.0, 0.24678876087084892], 'false,false': [0.24235967548683066, 0.24771136538258495], 'false,false,true': [0.2444545043005881, 0.2417837967237787], 'false,false,false': [0.2480326482830382, 0.24761150997795928]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
0;false;enzyme(B, G), enzyme(A, G).;true;true
0;true,false;enzyme(A, E).;true;true
0;true,false,false;enzyme(B, F).;true;true
0;true;enzyme(A, D), enzyme(B, D).;true;true
1;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
1;false;enzyme(A, G), enzyme(B, G).;true;true
1;true,false;enzyme(A, E).;true;true
1;true,false,false;enzyme(B, F).;true;true
1;true;enzyme(B, D), enzyme(A, D).;true;true
2;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
2;false;enzyme(B, G), enzyme(A, G).;true;true
2;true,false;enzyme(A, E).;true;true
2;true,false,false;enzyme(B, F).;true;true
2;true;enzyme(A, D), enzyme(B, D).;true;true
3;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
3;false;enzyme(B, G), enzyme(A, G).;true;true
3;true,false;enzyme(A, E).;true;true
3;true,false,false;enzyme(B, F).;true;true
3;true;enzyme(A, D), enzyme(B, D).;true;true
4;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
4;true,false;enzyme(B, G).;true;true
4;false;enzyme(B, H), enzyme(A, H).;true;true
4;true;enzyme(A, D), enzyme(B, D).;true;true
5;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
5;true,false;enzyme(B, G).;true;true
5;false;enzyme(B, H), enzyme(A, H).;true;true
5;true;enzyme(A, D), enzyme(B, D).;true;true
6;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
6;true,false;enzyme(B, G).;true;true
6;false;enzyme(A, H), enzyme(B, H).;true;true
6;true;enzyme(B, D), enzyme(A, D).;true;true
7;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
7;true,false;enzyme(B, G).;true;true
7;false;enzyme(B, H), enzyme(A, H).;true;true
7;true;enzyme(B, D), enzyme(A, D).;true;true
8;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
8;true,false;enzyme(B, G).;true;true
8;false;enzyme(B, H), enzyme(A, H).;true;true
8;true;enzyme(B, D), enzyme(A, D).;true;true
9;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
9;true,false;enzyme(B, G).;true;true
9;false;enzyme(B, H), enzyme(A, H).;true;true
9;true;enzyme(A, D), enzyme(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.8483450135308838;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, H) )
%   | | then if ( phenotype(A, I), phenotype(B, I) )
%   | | | then return 0.4797705567211331;  // std dev = 2,950, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.20607520238061644;  // std dev = 9,923, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.2562970832476592;  // std dev = 7,194, 216,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=86 */
%   | | | else return 0.3832789177684853;  // std dev = 11,995, 577,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=303 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.4850122940520397;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7332857516252526;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7116439657737714;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, I) )
%   | | then if ( enzyme(A, J), phenotype(B, K) )
%   | | | then return 0.3271870384101723;  // std dev = 3,218, 43,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.18424958361376328;  // std dev = 9,891, 428,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=152 */
%   | | else if ( complex(B, L) )
%   | | | then return 0.22215052390145212;  // std dev = 7,194, 216,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=86 */
%   | | | else return 0.3299538535248726;  // std dev = 11,995, 577,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=303 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.5700463889571605;  // std dev = 0,087, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3174587482888988;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5499124435739007;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(B, H), phenotype(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.5336097541111776;  // std dev = 2,818, 46,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | | | else return 0.1141782882937383;  // std dev = 1,781, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.15017707363157487;  // std dev = 9,924, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | | else return 0.24079215526609543;  // std dev = 13,809, 770,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=371 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( location(B, E), proteinclass(A, F) )
%   | | then return 0.25780265483898224;  // std dev = 0,741, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4428843158496017;  // std dev = 0,060, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4133348790388199;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( function(B, I), function(A, I) )
%   | | then if ( location(B, J), location(A, J) )
%   | | | then return 0.2761217863148413;  // std dev = 8,860, 332,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=182 */
%   | | | else return 0.13786622699079604;  // std dev = 7,581, 242,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=96 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.17381598119376915;  // std dev = 0,980, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.1532474557877847;  // std dev = 12,695, 671,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=284 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.33885382415602094;  // std dev = 0,144, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.14824396160170242;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.32668072568058987;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3161296597031157;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( function(B, H), function(A, H) )
%   | | then if ( phenotype(B, I), enzyme(B, J) )
%   | | | then return 0.019521112999123017;  // std dev = 3,684, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.19293591364002322;  // std dev = 11,044, 509,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=256 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03414418472686879;  // std dev = 5,347, 135,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.13449962842016547;  // std dev = 11,560, 555,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=243 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( location(B, E), proteinclass(A, F) )
%   | | then return 0.126386781530377;  // std dev = 0,704, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2789768368751544;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.2592410341147577;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2508019477870411;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(A, J), phenotype(B, J) )
%   | | | then return 0.1904185979732625;  // std dev = 2,826, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.0644882764112032;  // std dev = 9,860, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | else if ( proteinclass(B, K), phenotype(B, L) )
%   | | | then return 0.022543124718398748;  // std dev = 4,855, 103,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
%   | | | else return 0.1488205176917396;  // std dev = 12,963, 690,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=349 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.22671977366167284;  // std dev = 0,049, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.05766949823587827;  // std dev = 0,701, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.21262776496785343;  // std dev = 1,83e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.20542471373803453;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, G), enzyme(B, G) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( function(B, H), function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.1554430742639882;  // std dev = 8,768, 332,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=182 */
%   | | | else return 0.04978451741690039;  // std dev = 7,555, 242,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=96 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.06173244081009644;  // std dev = 3,953, 83,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return 0.08174340137293648;  // std dev = 12,042, 607,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=261 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.060228193906576244;  // std dev = 0,681, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19899281288495618;  // std dev = 0,071, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.17919869786799647;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.17274248928841252;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(B, I) )
%   | | then if ( phenotype(A, J), phenotype(B, J) )
%   | | | then return 0.21327343254713182;  // std dev = 1,968, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return 0.006519222003885069;  // std dev = 8,329, 310,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=110 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.056511153246321305;  // std dev = 3,894, 77,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.0943566951822347;  // std dev = 14,311, 855,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=412 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.16890856742847524;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.010952262787441361;  // std dev = 0,680, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.15433672425781753;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.14835259559484415;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(B, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.17262407377319813;  // std dev = 2,881, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | else return -0.007350091878152991;  // std dev = 8,015, 290,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=100 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.04361115209588133;  // std dev = 3,896, 77,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.0721295350919877;  // std dev = 14,308, 855,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=412 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.024871416955109776;  // std dev = 0,660, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15497753536623637;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.13524933115506058;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.12957712499781537;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, I) )
%   | | then if ( location(B, J), proteinclass(A, K) )
%   | | | then return 0.04457436701673125;  // std dev = 4,746, 103,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=44 */
%   | | | else return 0.0030887283910611867;  // std dev = 9,023, 368,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=130 */
%   | | else if ( proteinclass(B, L), phenotype(B, M) )
%   | | | then return -0.034096139548565566;  // std dev = 4,830, 103,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
%   | | | else return 0.06668012149533455;  // std dev = 12,851, 690,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=349 */


Results
   AUC ROC   = 0.629545
   AUC PR    = 0.666467
   CLL	      = -0.665947
   Precision = 0.800664 at threshold = 0.5
   Recall    = 0.255635
   F1        = 0.387538


Total learning time: 13.094 seconds
Total inference time: 2.924 seconds
AUC ROC: 0.629545


Refined model AUC ROC: 0.629545


Dataset: 23_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:49:44
{'Recall': 0.255635, 'Learning time': 17.416, 'F1': 0.387538, 'Precision': [0.800664, 0.5], 'AUC PR': 0.666467, 'CLL': -0.665947, 'parameter': {'Recall': 0.080085, 'Learning time': 4.322, 'F1': 0.147858, 'Precision': [0.961783, 0.5], 'AUC PR': 0.563771, 'CLL': -0.680098, 'AUC ROC': 0.527381, 'Inference time': 3.245}, 'AUC ROC': 0.629545, 'Inference time': 2.924}


