Starting experiment #1 for 23_twitter_yeast

Start learning from source dataset

Source train facts examples: 1654
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.30043464938522185;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.03954428393672071;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.11485391594242547;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5859031723876431;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.22498310595378504;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.18195845890903473;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.6174081943587689;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25979535511723084;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.034662075067021875;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.10028973647132483;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.498777269937768;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.19533180135550993;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.15833438107432668;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5246727565255822;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.09446743783575556;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.21780969040456194;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03026893851673045;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08659617689897336;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3993297576065395;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.16577459084807714;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.13529740539768817;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4180520361562044;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.08165239320886175;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.17763998149528976;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.026344679903783016;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07401982427916068;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.30610086330453745;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.13782430667732648;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.11372396300185397;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31894013570064494;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.06990902274840138;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.14166005944009397;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022861815093815303;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06270728922871331;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23022645133233913;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11258678869132581;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.09422979328740605;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.2395012723324542;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.059354635365447495;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11106303713723475;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.019788173400004157;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05271372754671691;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.17289163788257275;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09065606811303906;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.07714027276689113;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.18028247719032292;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.05002771289938786;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08601725404856812;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.017089082408507154;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0440205007789348;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.13069442756619856;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07217116379402755;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.06252747710209074;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13706860490080588;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.04190386852605733;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06605546101699923;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.014729104286686365;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.036556074048592374;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.09968946538768642;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.056952418275703964;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.05027999380892934;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10542742996374166;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.03491396367325339;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05043143991890734;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012673343484090884;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.030215848125067196;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.07671440458741716;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04464289925992749;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.04017587323776558;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08196763035201804;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.02896103559795105;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.038350070087442546;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010888374963754882;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02487857605523089;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05949386923995517;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.034817238574228575;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.031942249194740396;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06431851617368962;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.023934242922604824;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Starting fold 1

Target train facts examples: 2602
Target train pos examples: 1915
Target train neg examples: 1915

Target test facts examples: 7939
Target test pos examples: 2559
Target test neg examples: 2559

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.567550644501217;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.3845677217922672;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.44435583165123715;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.5423594614153023;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.2648767638456849;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.19687869848680523;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.24148226843284346;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.2438632208137968;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.48364869063218346;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.3310401295727143;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.3812577454216224;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.46283019856355917;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.22948249734013784;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.17118394147757107;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.20947388754425636;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.21151259256393073;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.448295606241962;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3883190233165489;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.27374304316352127;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.3121998375756062;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.3730737957994107;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.1935106082295926;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.14593276281794082;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.1773065977688829;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.17896364446649446;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.36236334632262296;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29855873029574753;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.2186665941847107;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.2459582998865791;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.2881092411958885;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.15925384905442477;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.12219992147114184;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.14679222092213606;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.14807402856123347;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.2807538536965854;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22487749244220934;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.17023868313468513;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1887872569194067;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.217567730606005;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.12842108217107234;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.10075312011505642;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.1192680439072402;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.12021650075834085;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.21248070121827137;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.1687529738602281;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.1303192439245188;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.14282330268708943;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.1632377324922259;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.10190906478084817;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.08200303292754385;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.09544805883634136;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09612302546826221;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.15948988228171157;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1272269162096211;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.09876364560390885;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.10734871462231678;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.12272869783299992;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.07989527540599518;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.06604598000179586;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.07549161750557731;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.07595544632153971;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.1197552993815748;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0966403367160983;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07443558823122567;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.08052439403672265;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.09277405448852666;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.062080273618740515;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.05275250937007839;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.0591773128057802;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.0594854701793814;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.09028081829440963;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0739736901309114;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.055940746022103666;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.060415961326282394;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.0705605562523477;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.04792651623885172;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04186029971796644;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.046080347691436964;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.04627771889188591;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.06840311429118527;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.05701463094022178;  // std dev = 14,734, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.041984905880181105;  // std dev = 11,287, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.045380159790803315;  // std dev = 4,594, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.05397171109115178;  // std dev = 4,052, 76,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03682741648598408;  // std dev = 15,386, 981,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03304882686098804;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.03570479715532584;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.03582555770979722;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.052078905701252655;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */


Results
   AUC ROC   = 0.659909
   AUC PR    = 0.639445
   CLL	      = -0.650358
   Precision = 0.676923 at threshold = 0.5
   Recall    = 0.533021
   F1        = 0.596415


Total learning time: 8.319 seconds
Total inference time: 2.916 seconds
AUC ROC: 0.659909


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [11.287, 242, 269], 'false,false,false,false': [1.414, 3, 6], 'false,false,true,true': [13.411, 531, 272], 'true,true': [14.734, 306, 747], 'true,false,false,true': [4.594, 36, 51], 'false,false,true,false': [7.532, 148, 92], 'true,false,false,false': [4.052, 24, 52], 'false,true': [15.386, 582, 399], 'false,false,false,true': [4.073, 43, 27]}]]
[{'': [0.22811245087644388, 0.23523942541610782], 'false,false': [0.22719697310930276, 0.24323025156225117], 'true': [0.2061509240996621, 0.24730340145638544], 'false,false,false': [0.23693877551020545, 0.22222222222222218], 'true,false': [0.2493020477096854, 0.23260190447514004], 'true,false,false': [0.24256837098692027, 0.2160664819944597], 'false,false,true': [0.22399191078288494, 0.23638888888889048], 'false': [0.24130030206958367, 0.22863504500812015]}, {'': [0.22600361860725968, 0.23487719924506278], 'false,false': [0.227104256522113, 0.2409218285175927], 'false,false,true': [0.2239919107828875, 0.23638888888888795], 'false,false,false': [0.23693877551020473, 0.2222222222222222], 'true': [0.20615092409963787, 0.24651371770724148], 'true,false': [0.24930204770968123, 0.23186760233470213], 'true,false,false': [0.2425683709869182, 0.21606648199445905], 'false': [0.24130030206958084, 0.228301094022191]}, {'': [0.22390111611491292, 0.23453622637654414], 'false,false': [0.22701890187435075, 0.23865754886639984], 'false,false,true': [0.2239919107828837, 0.2363888888888874], 'false,false,false': [0.23693877551020326, 0.2222222222222222], 'true': [0.20615092409964908, 0.24572739599215626], 'true,false': [0.24930204770968856, 0.23113385267007602], 'true,false,false': [0.24256837098691986, 0.2160664819944592], 'false': [0.2413003020696027, 0.2279811552823877]}, {'': [0.22250706250242386, 0.23427547088791684], 'false,false': [0.22695166437999914, 0.23703924182825492], 'false,false,true': [0.22399191078287758, 0.236388888888889], 'false,false,false': [0.2369387755102046, 0.22222222222222227], 'true': [0.20615092409962613, 0.2451962418555376], 'true,false': [0.24930204770967385, 0.23065381461728476], 'true,false,false': [0.2425683709869201, 0.21606648199445938], 'false': [0.24130030206960087, 0.2277436320903041]}, {'': [0.2218059664830649, 0.23410559107174925], 'false,false': [0.226905253019356, 0.23612152197787734], 'false,false,true': [0.22399191078288133, 0.23638888888888981], 'false,false,false': [0.23693877551020454, 0.22222222222222227], 'true': [0.20615092409964622, 0.244922460027759], 'true,false': [0.24930204770968112, 0.23041779785065256], 'true,false,false': [0.2425683709869199, 0.21606648199445944], 'false': [0.2413003020696011, 0.22759744849142924]}, {'': [0.22149511958425072, 0.23400675680342486], 'false,false': [0.2268765476281951, 0.23566753796717704], 'false,false,true': [0.22399191078287944, 0.23638888888888968], 'false,false,false': [0.23693877551020423, 0.2222222222222222], 'true': [0.2061509240996428, 0.2447992393773726], 'true,false': [0.2493020477096826, 0.23031537475751396], 'true,false,false': [0.2425683709869201, 0.21606648199445985], 'false': [0.2413003020695891, 0.22751730944693815]}, {'': [0.22135773511707516, 0.23395370668259863], 'false,false': [0.2268603291488267, 0.23545586246789318], 'false,false,true': [0.22399191078288677, 0.23638888888889076], 'false,false,false': [0.23693877551020448, 0.2222222222222222], 'true': [0.20615092409964247, 0.2447449879995213], 'true,false': [0.24930204770968067, 0.23027052866389358], 'true,false,false': [0.24256837098692016, 0.2160664819944599], 'false': [0.24130030206960312, 0.22747614030301067]}, {'': [0.22129238688703073, 0.23392693981779758], 'false,false': [0.22685183589635688, 0.23535793803151908], 'false,false,true': [0.22399191078287783, 0.2363888888888883], 'false,false,false': [0.2369387755102038, 0.2222222222222222], 'true': [0.20615092409963987, 0.24471979574130742], 'true,false': [0.24930204770967984, 0.23024900471071066], 'true,false,false': [0.24256837098692016, 0.21606648199445963], 'false': [0.2413003020695922, 0.22745577639407163]}, {'': [0.22125772762908844, 0.23391412106310633], 'false,false': [0.22684767814799472, 0.23531162224611782], 'false,false,true': [0.22399191078287461, 0.23638888888888765], 'false,false,false': [0.23693877551020406, 0.2222222222222222], 'true': [0.20615092409964367, 0.2447069637354301], 'true,false': [0.24930204770968106, 0.23023727303954142], 'true,false,false': [0.24256837098692055, 0.2160664819944599], 'false': [0.24130030206959446, 0.2274459547228002]}, {'': [0.22123715799831398, 0.2339082732165608], 'false,false': [0.22684577289124333, 0.2352888730177238], 'false,false,true': [0.2239919107828797, 0.23638888888888818], 'false,false,false': [0.23693877551020393, 0.2222222222222222], 'true': [0.20615092409964259, 0.24469971936920534], 'true,false': [0.24930204770968134, 0.23023003165586436], 'true,false,false': [0.24256837098692047, 0.2160664819944598], 'false': [0.24130030206959635, 0.22744130769797452]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false,false;location(A, I).;true;true', '0;true;location(A, D), location(B, D).;true;true', '0;false,false,false;location(B, K).;true;true', '0;true,false;location(B, E), location(A, F).;true;true', '0;true,false,false;location(B, G).;true;true', '0;false,false,true;location(B, J).;true;true', '0;false;location(B, H), location(A, H).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false,false;location(A, I).;true;true', '1;true;location(B, D), location(A, D).;true;true', '1;false,false,false;location(B, K).;true;true', '1;true,false;location(A, E), location(B, F).;true;true', '1;true,false,false;location(B, G).;true;true', '1;false,false,true;location(B, J).;true;true', '1;false;location(B, H), location(A, H).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false,false;location(A, I).;true;true', '2;true;location(A, D), location(B, D).;true;true', '2;false,false,false;location(B, K).;true;true', '2;true,false;location(A, E), location(B, F).;true;true', '2;true,false,false;location(B, G).;true;true', '2;false,false,true;location(B, J).;true;true', '2;false;location(B, H), location(A, H).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false,false;location(A, I).;true;true', '3;true;location(A, D), location(B, D).;true;true', '3;false,false,false;location(B, K).;true;true', '3;true,false;location(A, E), location(B, F).;true;true', '3;true,false,false;location(B, G).;true;true', '3;false,false,true;location(B, J).;true;true', '3;false;location(A, H), location(B, H).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false,false;location(A, I).;true;true', '4;true;location(A, D), location(B, D).;true;true', '4;false,false,false;location(B, K).;true;true', '4;true,false;location(A, E), location(B, F).;true;true', '4;true,false,false;location(B, G).;true;true', '4;false,false,true;location(B, J).;true;true', '4;false;location(B, H), location(A, H).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false,false;location(A, I).;true;true', '5;true;location(B, D), location(A, D).;true;true', '5;false,false,false;location(B, K).;true;true', '5;true,false;location(B, E), location(A, F).;true;true', '5;true,false,false;location(B, G).;true;true', '5;false,false,true;location(B, J).;true;true', '5;false;location(B, H), location(A, H).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false,false;location(A, I).;true;true', '6;true;location(A, D), location(B, D).;true;true', '6;false,false,false;location(B, K).;true;true', '6;true,false;location(B, E), location(A, F).;true;true', '6;true,false,false;location(B, G).;true;true', '6;false,false,true;location(B, J).;true;true', '6;false;location(B, H), location(A, H).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false,false;location(A, I).;true;true', '7;true;location(A, D), location(B, D).;true;true', '7;false,false,false;location(B, K).;true;true', '7;true,false;location(A, E), location(B, F).;true;true', '7;true,false,false;location(B, G).;true;true', '7;false,false,true;location(B, J).;true;true', '7;false;location(A, H), location(B, H).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false,false;location(A, I).;true;true', '8;true;location(A, D), location(B, D).;true;true', '8;false,false,false;location(B, K).;true;true', '8;true,false;location(A, E), location(B, F).;true;true', '8;true,false,false;location(B, G).;true;true', '8;false,false,true;location(B, J).;true;true', '8;false;location(A, H), location(B, H).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false,false;location(A, I).;true;true', '9;true;location(B, D), location(A, D).;true;true', '9;false,false,false;location(B, K).;true;true', '9;true,false;location(A, E), location(B, F).;true;true', '9;true,false,false;location(B, G).;true;true', '9;false,false,true;location(B, J).;true;true', '9;false;location(B, H), location(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.567550644501217;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.3845677217922672;  // std dev = 0,499, 511,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=269 */
%   | | else return 0.49005077559031057;  // std dev = 0,482, 163,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=103 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(A, H) )
%   | | then return 0.15922420391671543;  // std dev = 0,459, 93,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( complex(B, I) )
%   | | | then return 0.218338508559229;  // std dev = 6,973, 211,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=76 */
%   | | | else return 0.29389487306110296;  // std dev = 12,902, 677,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=295 */
%   | else if ( location(A, J) )
%   | | then return 0.20714222369011154;  // std dev = 0,477, 1.043,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=364 */
%   | | else if ( location(B, K) )
%   | | | then return 0.2438632208137968;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.48364869063218346;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.3524106315351794;  // std dev = 0,497, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( complex(B, F) )
%   | | then return 0.17517247414795356;  // std dev = 0,475, 223,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=77 */
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.1882042618867697;  // std dev = 6,407, 177,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=65 */
%   | | | else return 0.2627364841612918;  // std dev = 11,965, 581,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=257 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1697475557536913;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.2143511256997193;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.21151259256393073;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.448295606241962;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3883190233165489;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.2902050529474562;  // std dev = 0,497, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( enzyme(B, F), proteinclass(B, G) )
%   | | then return 0.053339997841949996;  // std dev = 0,436, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.15843384170734162;  // std dev = 6,812, 203,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=72 */
%   | | | else return 0.21107401752105873;  // std dev = 13,405, 735,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=316 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.14455530125879668;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.18208438803666382;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.17896364446649446;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.36236334632262296;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29855873029574753;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.23044215453715067;  // std dev = 0,496, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(A, E), location(B, E) )
%   | then if ( proteinclass(A, F) )
%   | | then return 0.0712253153679099;  // std dev = 0,457, 93,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( complex(B, G), proteinclass(B, H) )
%   | | | then return 0.08804131148116058;  // std dev = 3,532, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.173717523188276;  // std dev = 14,213, 829,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=353 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.12093345470420683;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.15122104587245017;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.14807402856123347;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.2807538536965854;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22487749244220934;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.17828450216520125;  // std dev = 0,496, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( complex(A, F), enzyme(B, G) )
%   | | then return 0.0392762578347027;  // std dev = 0,455, 69,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.15837454613923496;  // std dev = 9,328, 356,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=156 */
%   | | | else return 0.11939034796268674;  // std dev = 11,504, 556,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=222 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.09963001734040752;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.12318567022288945;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.12021650075834085;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.21248070121827137;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.1687529738602281;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.13573484646061407;  // std dev = 0,496, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( complex(B, F), enzyme(A, G) )
%   | | then return -0.12808296713233766;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, H), phenotype(B, H) )
%   | | | then return 0.2521176546391212;  // std dev = 2,561, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.09887418913596366;  // std dev = 15,026, 947,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=383 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.08103628458439185;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.09878594245957287;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09612302546826221;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.15948988228171157;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1272269162096211;  // std dev = 0,454, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else return 0.10244361614550546;  // std dev = 0,496, 674,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=372 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then return 0.015183492051668463;  // std dev = 0,454, 93,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( phenotype(A, G), phenotype(B, H) )
%   | | | then return 0.13248213458825636;  // std dev = 5,277, 114,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=53 */
%   | | | else return 0.07949671776273118;  // std dev = 13,638, 774,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=318 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.06523339984308635;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.07825479835541141;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.07595544632153971;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.1197552993815748;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.08897433551328617;  // std dev = 0,471, 1.727,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=1.119 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( complex(B, E) )
%   | | then if ( complex(A, F), proteinclass(B, G) )
%   | | | then return -0.15472300192509478;  // std dev = 1,621, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.05428297127060723;  // std dev = 6,793, 202,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=74 */
%   | | else if ( complex(A, H), proteinclass(B, I) )
%   | | | then return 0.22911775285186972;  // std dev = 2,177, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.0652013368544457;  // std dev = 13,352, 737,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=310 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.052082122818787144;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.06141608332517077;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, L) )
%   | | | then return 0.0594854701793814;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.09028081829440963;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.06756935900505845;  // std dev = 0,471, 1.727,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=1.119 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( enzyme(B, E) )
%   | | then if ( phenotype(B, F), phenotype(A, G) )
%   | | | then return 0.13786871770636064;  // std dev = 2,804, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.003440990614223435;  // std dev = 6,622, 199,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08677349321716532;  // std dev = 7,968, 261,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=120 */
%   | | | else return 0.038733217888364965;  // std dev = 10,789, 489,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=196 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04131512270372763;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.04786583730221734;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.04627771889188591;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.06840311429118527;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.05150690208182696;  // std dev = 0,471, 1.727,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=1.119 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( phenotype(A, E), phenotype(B, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.012339166328359782;  // std dev = 3,998, 71,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | | else return 0.18186662383115032;  // std dev = 3,559, 53,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.06345507663678378;  // std dev = 7,874, 259,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=114 */
%   | | | else return 0.01773691548228823;  // std dev = 11,827, 598,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=228 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03261032932331791;  // std dev = 13,411, 803,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=272 */
%   | | | else return 0.037112516827202055;  // std dev = 7,532, 240,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.03582555770979722;  // std dev = 4,073, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.052078905701252655;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */


Results
   AUC ROC   = 0.662945
   AUC PR    = 0.640647
   CLL	      = -0.650229
   Precision = 0.610638 at threshold = 0.5
   Recall    = 0.672919
   F1        = 0.640268


Total learning time: 15.999 seconds
Total inference time: 2.249 seconds
AUC ROC: 0.662945


Refined model AUC ROC: 0.662945


Dataset: 23_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:50:42
{'Inference time': 2.249, 'parameter': {'Inference time': 2.916, 'F1': 0.596415, 'Precision': [0.676923, 0.5], 'CLL': -0.650358, 'AUC PR': 0.639445, 'Recall': 0.533021, 'AUC ROC': 0.659909, 'Learning time': 8.319}, 'F1': 0.640268, 'Precision': [0.610638, 0.5], 'CLL': -0.650229, 'AUC PR': 0.640647, 'Recall': 0.672919, 'AUC ROC': 0.662945, 'Learning time': 24.318}


Starting fold 2

Target train facts examples: 2686
Target train pos examples: 1170
Target train neg examples: 1170

Target test facts examples: 7855
Target test pos examples: 3304
Target test neg examples: 3304

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5562396272236126;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.35156998773108694;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17158177092040747;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.2064635418410813;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.1732174282501933;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.23674975814477767;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.47430857537785825;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.30317774637630635;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.14938567260251434;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.1794276831042992;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.15079689965815796;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.20542006997356724;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.38149298670006143;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.2520637084123687;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12785924542692037;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.15272780331256142;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.1290339675088438;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.17400764051819093;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2938819202326711;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.20296879299425333;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10775421981946369;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.12757834951141211;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.10869931551455488;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.1442352319110377;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22159258374828678;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.15943686530432158;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08959143162556192;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.10485458340484954;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.09032816395423073;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.11737119043132027;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.16625489529072818;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.12308674488567212;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0736421957991981;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.08502650713703157;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.07420005712342488;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.09409426096432397;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1251717082984892;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.09395638405968725;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.059961914857492145;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.06820571425208284;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.060372997377890814;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.07455848112606789;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.08637026299843623;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09486056901044464;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07121888579831709;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0484489776252308;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.054248253976175664;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04874395952992497;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.05855546579072468;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.06628370899125427;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07239316110820908;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.05375584041077379;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03890590197710942;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.042862381007345546;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.039111789795398005;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.04568085486206103;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.05057564362187433;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.05559882967380606;  // std dev = 13,290, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.040472683614925994;  // std dev = 10,676, 456,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.031089749543891404;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03369402773605268;  // std dev = 8,989, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03122900433078257;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.03545962111618176;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.038438849075129386;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.639283
   AUC PR    = 0.63162
   CLL	      = -0.663137
   Precision = 0.694047 at threshold = 0.5
   Recall    = 0.455206
   F1        = 0.549808


Total learning time: 6.642 seconds
Total inference time: 3.312 seconds
AUC ROC: 0.639283


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(B, E), location(A, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(A, D), location(B, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(A, H), location(B, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'location(A, I)', 'true': 'location(B, D), location(A, D)', 'false,false,false': 'location(B, K)', 'true,false': 'location(A, E), location(B, F)', 'true,false,false': 'location(B, G)', 'false,false,true': 'location(B, J)', 'false': 'location(B, H), location(A, H)'}, {'true,false,true': [10.676, 231, 225], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [8.875, 250, 115], 'true,true': [13.29, 253, 585], 'true,false,false,true': [1.155, 2, 4], 'false,false,true,false': [7.561, 151, 92], 'true,false,false,false': [3.797, 46, 21], 'false,true': [8.989, 232, 124], 'false,false,false,true': [1.491, 5, 4]}]]
[{'': [0.23771745860335297, 0.22575626182360164], 'false,false': [0.22454715633656774, 0.2469135802469134], 'true': [0.210760077693794, 0.2492486805007158], 'false,false,false': [0.2469135802469134, nan], 'true,false': [0.2499567174515269, 0.22518296115593936], 'true,false,false': [0.22222222222222213, 0.2151926932501672], 'false,false,true': [0.2158003377744441, 0.23526223983471511], 'false': [0.2269915414720391, 0.22502882930686421]}, {'': [0.2337020257545967, 0.22556979018861045], 'false,false': [0.22429458581525363, 0.24691358024691354], 'true': [0.21076007769378413, 0.24815562637669605], 'false,false,false': [0.24691358024691354, nan], 'true,false': [0.24995671745152864, 0.22251048033178678], 'true,false,false': [0.2222222222222222, 0.21519269325016682], 'false,false,true': [0.21580033777444657, 0.23526223983471642], 'false': [0.22699154147203834, 0.22473838772026197]}, {'': [0.2297440322919262, 0.22539912164907852], 'false,false': [0.22406399487373327, 0.24691358024691365], 'true': [0.21076007769379462, 0.2471213233661675], 'false,false,false': [0.24691358024691365, nan], 'true,false': [0.2499567174515289, 0.2199188683995748], 'true,false,false': [0.22222222222222224, 0.21519269325016688], 'false,false,true': [0.2158003377744413, 0.23526223983471367], 'false': [0.22699154147203873, 0.2244723560523311]}, {'': [0.22699776319568354, 0.22526442936007554], 'false,false': [0.223881685766399, 0.2469135802469136], 'true': [0.2107600776937911, 0.2463310650221526], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.24995671745152503, 0.21802818598145807], 'true,false,false': [0.2222222222222222, 0.21519269325016693], 'false,false,true': [0.21580033777444305, 0.2352622398347128], 'false': [0.22699154147203607, 0.22426245395522698]}, {'': [0.22550363259366282, 0.2251706730898762], 'false,false': [0.22375416653189414, 0.2469135802469136], 'true': [0.21076007769378982, 0.24582095058319473], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.2499567174515214, 0.21690968448066736], 'true,false,false': [0.22222222222222224, 0.21519269325016752], 'false,false,true': [0.21580033777444318, 0.23526223983471273], 'false': [0.22699154147203798, 0.22411650694693555]}, {'': [0.22478513374592185, 0.22511185424679847], 'false,false': [0.22367365761929023, 0.2469135802469136], 'true': [0.21076007769379523, 0.24552959705128122], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.2499567174515205, 0.21632641504601413], 'true,false,false': [0.2222222222222222, 0.21519269325016707], 'false,false,true': [0.21580033777443677, 0.23526223983471564], 'false': [0.22699154147203257, 0.22402511344461085]}, {'': [0.22445047899319512, 0.22507797018435757], 'false,false': [0.2236269781044274, 0.2469135802469136], 'true': [0.2107600776937915, 0.24537695363142137], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.24995671745152617, 0.21604016626960126], 'true,false,false': [0.2222222222222222, 0.2151926932501673], 'false,false,true': [0.2158003377744402, 0.23526223983471556], 'false': [0.22699154147204062, 0.22397259256883134]}, {'': [0.22429120107974837, 0.22505979358055175], 'false,false': [0.22360179407062597, 0.2469135802469136], 'true': [0.21076007769379587, 0.24530181436408524], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.24995671745152548, 0.215902468940363], 'true,false,false': [0.2222222222222222, 0.21519269325016663], 'false,false,true': [0.2158003377744379, 0.23526223983471198], 'false': [0.22699154147203476, 0.22394450212477138]}, {'': [0.22421161685558283, 0.22505063770754735], 'false,false': [0.223589050441228, 0.2469135802469136], 'true': [0.21076007769379299, 0.24526656666216237], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.24995671745152034, 0.21583609878113952], 'true,false,false': [0.2222222222222222, 0.21519269325016763], 'false,false,true': [0.2158003377744395, 0.23526223983471414], 'false': [0.22699154147203804, 0.22393040144128562]}, {'': [0.22416934508422273, 0.22504629834272483], 'false,false': [0.22358299102605192, 0.2469135802469136], 'true': [0.21076007769379304, 0.24525070522986447], 'false,false,false': [0.2469135802469136, nan], 'true,false': [0.24995671745152523, 0.21580369581154663], 'true,false,false': [0.2222222222222222, 0.21519269325016704], 'false,false,true': [0.21580033777444105, 0.23526223983471284], 'false': [0.22699154147203668, 0.22392374538181992]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false,false;location(A, I).;true;true', '0;true;location(A, D), location(B, D).;true;true', '0;false,false,false;location(B, K).;true;true', '0;true,false;location(B, E), location(A, F).;true;true', '0;true,false,false;location(B, G).;true;true', '0;false,false,true;location(B, J).;true;true', '0;false;location(B, H), location(A, H).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false,false;location(A, I).;true;true', '1;true;location(B, D), location(A, D).;true;true', '1;false,false,false;location(B, K).;true;true', '1;true,false;location(A, E), location(B, F).;true;true', '1;true,false,false;location(B, G).;true;true', '1;false,false,true;location(B, J).;true;true', '1;false;location(B, H), location(A, H).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false,false;location(A, I).;true;true', '2;true;location(A, D), location(B, D).;true;true', '2;false,false,false;location(B, K).;true;true', '2;true,false;location(A, E), location(B, F).;true;true', '2;true,false,false;location(B, G).;true;true', '2;false,false,true;location(B, J).;true;true', '2;false;location(B, H), location(A, H).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false,false;location(A, I).;true;true', '3;true;location(A, D), location(B, D).;true;true', '3;false,false,false;location(B, K).;true;true', '3;true,false;location(A, E), location(B, F).;true;true', '3;true,false,false;location(B, G).;true;true', '3;false,false,true;location(B, J).;true;true', '3;false;location(A, H), location(B, H).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false,false;location(A, I).;true;true', '4;true;location(A, D), location(B, D).;true;true', '4;false,false,false;location(B, K).;true;true', '4;true,false;location(A, E), location(B, F).;true;true', '4;true,false,false;location(B, G).;true;true', '4;false,false,true;location(B, J).;true;true', '4;false;location(B, H), location(A, H).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false,false;location(A, I).;true;true', '5;true;location(B, D), location(A, D).;true;true', '5;false,false,false;location(B, K).;true;true', '5;true,false;location(B, E), location(A, F).;true;true', '5;true,false,false;location(B, G).;true;true', '5;false,false,true;location(B, J).;true;true', '5;false;location(B, H), location(A, H).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false,false;location(A, I).;true;true', '6;true;location(A, D), location(B, D).;true;true', '6;false,false,false;location(B, K).;true;true', '6;true,false;location(B, E), location(A, F).;true;true', '6;true,false,false;location(B, G).;true;true', '6;false,false,true;location(B, J).;true;true', '6;false;location(B, H), location(A, H).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false,false;location(A, I).;true;true', '7;true;location(A, D), location(B, D).;true;true', '7;false,false,false;location(B, K).;true;true', '7;true,false;location(A, E), location(B, F).;true;true', '7;true,false,false;location(B, G).;true;true', '7;false,false,true;location(B, J).;true;true', '7;false;location(A, H), location(B, H).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false,false;location(A, I).;true;true', '8;true;location(A, D), location(B, D).;true;true', '8;false,false,false;location(B, K).;true;true', '8;true,false;location(A, E), location(B, F).;true;true', '8;true,false,false;location(B, G).;true;true', '8;false,false,true;location(B, J).;true;true', '8;false;location(A, H), location(B, H).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false,false;location(A, I).;true;true', '9;true;location(B, D), location(A, D).;true;true', '9;false,false,false;location(B, K).;true;true', '9;true,false;location(A, E), location(B, F).;true;true', '9;true,false,false;location(B, G).;true;true', '9;false,false,true;location(B, J).;true;true', '9;false;location(B, H), location(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5562396272236126;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then if ( phenotype(B, G) )
%   | | | then return 0.44292402160469885;  // std dev = 8,377, 289,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=169 */
%   | | | else return 0.19347827641687884;  // std dev = 6,101, 167,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | | else if ( location(B, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17158177092040747;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( location(B, I), location(A, I) )
%   | then if ( proteinclass(B, J) )
%   | | then return 0.06941654073331519;  // std dev = 0,408, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( proteinclass(A, K) )
%   | | | then return 0.1464372233877992;  // std dev = 4,772, 111,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | | else return 0.3006776707316968;  // std dev = 6,552, 174,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=77 */
%   | else return 0.20012624466190768;  // std dev = 0,474, 617,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=211 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.47430857537785825;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(B, G), phenotype(A, G) )
%   | | | then return 0.5388738001827554;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | | | else return 0.25371401444925024;  // std dev = 9,592, 378,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=167 */
%   | | else return 0.1739536123537018;  // std dev = 0,472, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( complex(A, I), complex(B, J) )
%   | | then return 0.04336669810118211;  // std dev = 0,405, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else return 0.20539922923445167;  // std dev = 0,482, 298,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=112 */
%   | else if ( location(A, K) )
%   | | then return 0.17246126627746694;  // std dev = 0,474, 608,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=207 */
%   | | else if ( location(B, L) )
%   | | | then return 0.27644518440612564;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.38149298670006143;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(B, G) )
%   | | | then return 0.3202710830238718;  // std dev = 8,303, 289,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=169 */
%   | | | else return 0.1299176165325717;  // std dev = 6,101, 167,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | | else return 0.14820289790217442;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.152080978248548;  // std dev = 0,473, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.12156632455752556;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.1850986544521065;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.23419601026100104;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2938819202326711;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.36556275144093664;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | | | else return 0.16623932470627814;  // std dev = 9,531, 378,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=167 */
%   | | else return 0.1239968052573504;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.12704486683767852;  // std dev = 0,472, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.10188573192126978;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.15456733690132962;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.1926816246767825;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22159258374828678;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else return 0.14933911505906433;  // std dev = 0,483, 529,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=250 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( proteinclass(B, F) )
%   | | then return -0.0053090933060010795;  // std dev = 0,407, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.05732344489240343;  // std dev = 4,774, 111,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | | else return 0.17928384988375753;  // std dev = 6,534, 174,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=77 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.08429706620654455;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.12655795800323869;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.1546846479887188;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.16625489529072818;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else return 0.1167547283934295;  // std dev = 0,482, 529,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=250 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( phenotype(A, F), complex(B, G) )
%   | | then return -0.014518509388711598;  // std dev = 0,417, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.006417089972458573;  // std dev = 4,495, 109,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.16707585956720045;  // std dev = 6,642, 180,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=82 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.06899476218009226;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.10196053050243667;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.12184827160351228;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1251717082984892;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then if ( complex(B, G), complex(A, H) )
%   | | | then return -0.07126391094034719;  // std dev = 3,715, 65,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.12463238572495913;  // std dev = 9,525, 391,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=204 */
%   | | else return 0.05038764317539864;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(B, I), location(A, I) )
%   | then return 0.06599630276037248;  // std dev = 0,467, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, J) )
%   | | then if ( location(B, K) )
%   | | | then return 0.05597176201997874;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.08110016115730874;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, L) )
%   | | | then return 0.0946670905565277;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09486056901044464;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( complex(B, G) )
%   | | | then return -0.005329628836846302;  // std dev = 5,944, 154,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=63 */
%   | | | else return 0.11420420985527287;  // std dev = 8,301, 302,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=162 */
%   | | else return 0.039884251171061626;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.05261402435704366;  // std dev = 0,466, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04508313093248248;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.06387730518043325;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.07284258250062342;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07239316110820908;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(B, G) )
%   | | | then return 0.09805489640225022;  // std dev = 8,160, 289,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=169 */
%   | | | else return -0.016378179816690618;  // std dev = 6,087, 167,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | | else return 0.03142088350781891;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.04168976180147442;  // std dev = 0,466, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.036105978748924794;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.04994051625692971;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.055679893723435986;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.05559882967380606;  // std dev = 0,459, 838,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.1445189324877268;  // std dev = 3,804, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | | | else return 0.021086106601620094;  // std dev = 9,433, 378,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=167 */
%   | | else return 0.02466306335975298;  // std dev = 0,471, 73,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.032878282984819866;  // std dev = 0,466, 356,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.028785909837721526;  // std dev = 8,875, 365,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=115 */
%   | | | else return 0.038828733567206;  // std dev = 7,561, 243,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.04236986756194019;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.652134
   AUC PR    = 0.637017
   CLL	      = -0.658205
   Precision = 0.681641 at threshold = 0.5
   Recall    = 0.477603
   F1        = 0.561666


Total learning time: 10.709 seconds
Total inference time: 3.116 seconds
AUC ROC: 0.652134


Refined model AUC ROC: 0.652134


Dataset: 23_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:51:07
{'Inference time': 3.116, 'parameter': {'Inference time': 3.312, 'F1': 0.549808, 'Precision': [0.694047, 0.5], 'CLL': -0.663137, 'AUC PR': 0.63162, 'Recall': 0.455206, 'AUC ROC': 0.639283, 'Learning time': 6.642}, 'F1': 0.561666, 'Precision': [0.681641, 0.5], 'CLL': -0.658205, 'AUC PR': 0.637017, 'Recall': 0.477603, 'AUC ROC': 0.652134, 'Learning time': 17.351}


Starting fold 3

Target train facts examples: 2735
Target train pos examples: 686
Target train neg examples: 686

Target test facts examples: 7806
Target test pos examples: 3788
Target test neg examples: 3788

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.8422759192264946;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(B, E), complex(A, F) )
%   | | then return 0.40430278125335956;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.44638422921716026;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.44753440995984345;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.07873717039363003;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.15864154593695212;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.19685861251886666;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.24661047356104718;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.7067928809885279;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.3476540604304693;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.3829554279400075;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.38391790453968017;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.06887966056323501;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.13821230858086225;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.1711666569656202;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.21386428419624534;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.546532671731518;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.28655280101211755;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.31348639267501904;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.3142154009413985;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05980111774488638;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.11853585471834487;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.14591849261338255;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.1808733953208984;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.4107600745171794;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.22783106515201532;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.24686056424534744;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.24737154281199183;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.051567304829340646;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.10022302344294394;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.12218859594180279;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.14954920056435286;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.31453028742199585;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.1764900247707465;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.18939831465027135;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.18974437318873044;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.04420042637308792;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.0836882717380606;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.10074445248872474;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.1213060374308238;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.24898070263849761;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(B, E), complex(A, F) )
%   | | then return 0.1345088673686722;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.14324053978445078;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.1434770507160002;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03768709786100571;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.06914171842427921;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.08199661575582595;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.09689679926167619;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2034060566407764;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(B, E), complex(A, F) )
%   | | then return 0.1015901018918313;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10764416962019947;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.10781195559837833;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.031987384699931856;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.05661878540344678;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.06604137340859045;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.07648604296604988;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.17057177948828914;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.07638450291184605;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.0807434453280414;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.08086813941829898;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.027043513399075046;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.046027556251590135;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0527493013123843;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.059837244815194854;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.14606880652934245;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.057323436379231936;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.060585260580884884;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.06068187479673812;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.02278740859340225;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.03719731433190602;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0418581368628386;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.04650256755798923;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.1272096167610593;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.04299447790971289;  // std dev = 5,677, 130,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.04551511900055701;  // std dev = 4,971, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.0455923145707384;  // std dev = 9,308, 358,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.01914668781678519;  // std dev = 3,419, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.029918872549047418;  // std dev = 6,532, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0330474237550208;  // std dev = 5,270, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.035962858395013377;  // std dev = 7,859, 260,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=101 */


Results
   AUC ROC   = 0.643874
   AUC PR    = 0.648854
   CLL	      = -0.657353
   Precision = 0.620455 at threshold = 0.5
   Recall    = 0.626188
   F1        = 0.623308


Total learning time: 4.204 seconds
Total inference time: 3.215 seconds
AUC ROC: 0.643874


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(B, E), complex(A, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(B, D), complex(A, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(A, H), complex(B, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(B, D), complex(A, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(B, E), complex(A, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(B, E), complex(A, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(A, H), complex(B, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(A, D), complex(B, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(A, H), complex(B, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'false,false': 'complex(A, I)', 'true': 'complex(B, D), complex(A, D)', 'false,false,false': 'complex(B, K)', 'true,false': 'complex(A, E), complex(B, F)', 'true,false,false': 'complex(B, G)', 'false,false,true': 'complex(B, J)', 'false': 'complex(B, H), complex(A, H)'}, {'true,false,true': [5.677, 59, 71], 'false,false,false,false': [7.859, 159, 101], 'false,false,true,true': [3.419, 53, 15], 'true,true': [1.403, 2, 124], 'true,false,false,true': [4.971, 42, 60], 'false,false,true,false': [6.532, 142, 61], 'true,false,false,false': [9.308, 147, 211], 'false,true': [0.0, 0, 1], 'false,false,false,true': [5.27, 82, 42]}]]
[{'': [0.22724790112667806, 0.22289559785842009], 'false,false': [0.20179463787257834, 0.23371717664930872], 'true': [0.015621063240114865, 0.24365412237863085], 'false,false,false': [0.22398543184183256, 0.23755917159763565], 'true,false': [0.2478698224852065, 0.2420557655954662], 'true,false,false': [0.24221453287197192, 0.24201023688399648], 'false,false,true': [0.1719290657439441, 0.21019680166953855], 'false': [0.0, 0.22256045684983622]}, {'': [0.21933830510144808, 0.22195303731065344], 'false,false': [0.20149809403139562, 0.2335745873462862], 'true': [0.015621063240114186, 0.24356003923553543], 'false,false,false': [0.22398543184183178, 0.23755917159763731], 'true,false': [0.2478698224852092, 0.24205569716169364], 'true,false,false': [0.24221453287197292, 0.24201023688398587], 'false,false,true': [0.17192906574394407, 0.21019680166953897], 'false': [0.0, 0.22182708841950594]}, {'': [0.21162204376993227, 0.22109290262286294], 'false,false': [0.20124298538378205, 0.23344313086539137], 'true': [0.015621063240112214, 0.24346664744032512], 'false,false,false': [0.22398543184183267, 0.23755917159763404], 'true,false': [0.24786982248520711, 0.2420556290120421], 'true,false,false': [0.24221453287197195, 0.2420102368839926], 'false,false,true': [0.17192906574394462, 0.2101968016695372], 'false': [0.0, 0.22117043573155637]}, {'': [0.20739940477443636, 0.22044880348051102], 'false,false': [0.20103953885233095, 0.2333396604103137], 'true': [0.01562106324011038, 0.24340152214294494], 'false,false,false': [0.2239854318418311, 0.23755917159763434], 'true,false': [0.2478698224852076, 0.24205558235682256], 'true,false,false': [0.24221453287197284, 0.24201023688399373], 'false,false,true': [0.17192906574394512, 0.21019680166953783], 'false': [0.0, 0.22064944562455382]}, {'': [0.20565555533496946, 0.22001655116431623], 'false,false': [0.2008876501135748, 0.23326842178415794], 'true': [0.015621063240110183, 0.24336649829543022], 'false,false,false': [0.22398543184183056, 0.23755917159763396], 'true,false': [0.24786982248520684, 0.2420555579652066], 'true,false,false': [0.2422145328719721, 0.24201023688399423], 'false,false,true': [0.171929065743945, 0.21019680166953722], 'false': [0.0, 0.22027667380972202]}, {'': [0.2049514628678897, 0.2197434269460574], 'false,false': [0.20078053208540556, 0.23322452659500414], 'true': [0.015621063240110726, 0.24335031414551275], 'false,false,false': [0.2239854318418317, 0.2375591715976315], 'true,false': [0.2478698224852075, 0.24205554695188924], 'true,false,false': [0.24221453287197198, 0.24201023688399306], 'false,false,true': [0.17192906574394431, 0.2101968016695381], 'false': [0.0, 0.22003177663067353]}, {'': [0.20463344036018546, 0.2195788829315808], 'false,false': [0.2007086020346669, 0.23319983664731636], 'true': [0.015621063240110521, 0.2433432257081995], 'false,false,false': [0.2239854318418308, 0.2375591715976342], 'true,false': [0.2478698224852075, 0.24205554215695546], 'true,false,false': [0.24221453287197264, 0.24201023688399], 'false,false,true': [0.17192906574394393, 0.21019680166954052], 'false': [0.0, 0.21988161237938492]}, {'': [0.20445987307199356, 0.21948374336596166], 'false,false': [0.20066230512843095, 0.23318696911901762], 'true': [0.015621063240111081, 0.24334006410150796], 'false,false,false': [0.22398543184183134, 0.23755917159763454], 'true,false': [0.247869822485207, 0.2420555399819574], 'true,false,false': [0.24221453287197303, 0.24201023688399378], 'false,false,true': [0.1719290657439447, 0.2101968016695395], 'false': [0.0, 0.21979452200139385]}, {'': [0.20434144928958425, 0.21943056003565348], 'false,false': [0.20063359445879136, 0.2331807010595204], 'true': [0.015621063240110934, 0.2433385652335106], 'false,false,false': [0.2239854318418318, 0.23755917159763126], 'true,false': [0.24786982248520678, 0.24205553890954748], 'true,false,false': [0.2422145328719721, 0.24201023688399076], 'false,false,true': [0.17192906574394504, 0.21019680166953855], 'false': [0.0, 0.21974628695153464]}, {'': [0.20424461850573203, 0.21940158764121], 'false,false': [0.2006163762671746, 0.23317784320151633], 'true': [0.015621063240110927, 0.2433377959245002], 'false,false,false': [0.2239854318418317, 0.23755917159763337], 'true,false': [0.24786982248520717, 0.24205553832709517], 'true,false,false': [0.2422145328719725, 0.24201023688399242], 'false,false,true': [0.17192906574394437, 0.21019680166953905], 'false': [0.0, 0.2197206251870292]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false;complex(B, H), complex(A, H).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false;complex(B, H), complex(A, H).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false;complex(B, H), complex(A, H).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false;complex(A, H), complex(B, H).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false;complex(B, H), complex(A, H).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false;complex(B, H), complex(A, H).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false;complex(B, H), complex(A, H).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false;complex(A, H), complex(B, H).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false;complex(A, H), complex(B, H).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false;complex(B, H), complex(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.8422759192264946;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( location(A, E), location(B, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.41838989895493134;  // std dev = 6,395, 166,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=93 */
%   | | | else return 0.6069412056309101;  // std dev = 6,240, 207,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=155 */
%   | | else if ( location(A, G), location(B, H) )
%   | | | then return 0.2194392576801587;  // std dev = 5,981, 155,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   | | | else return 0.47105216090596375;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.08672036367093978;  // std dev = 0,420, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | else if ( location(A, L), phenotype(B, M) )
%   | | | then return 0.12130682983635296;  // std dev = 5,078, 133,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | | | else return 0.25605469426181254;  // std dev = 9,567, 382,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=152 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.7067928809885279;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( location(A, E), location(B, E) )
%   | | then if ( complex(B, F), proteinclass(B, G) )
%   | | | then return 0.2290570265951282;  // std dev = 3,402, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return 0.4777247879281579;  // std dev = 8,245, 326,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=227 */
%   | | else if ( location(A, H), location(B, I) )
%   | | | then return 0.19057424068539597;  // std dev = 5,981, 155,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   | | | else return 0.40356976758444996;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   else if ( complex(B, J), complex(A, J) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.07583261299461783;  // std dev = 0,420, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | else if ( phenotype(B, M), location(A, N) )
%   | | | then return 0.10588930248614369;  // std dev = 5,078, 133,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | | | else return 0.2219432840021417;  // std dev = 9,567, 382,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=152 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.546532671731518;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( location(B, E), enzyme(A, F) )
%   | | then if ( phenotype(B, G), enzyme(B, H) )
%   | | | then return 0.4925717758769327;  // std dev = 1,314, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.08142372824372719;  // std dev = 4,147, 80,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | else if ( location(A, I), location(B, I) )
%   | | | then return 0.40581246791869263;  // std dev = 7,902, 312,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=222 */
%   | | | else return 0.22610767060715178;  // std dev = 6,766, 190,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=86 */
%   else if ( complex(B, J), complex(A, J) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, K), phenotype(B, L) )
%   | | then return 0.07310025506174364;  // std dev = 0,429, 156,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.025743853869365858;  // std dev = 1,981, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.17681337405574207;  // std dev = 10,444, 466,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=176 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.4107600745171794;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.0382137349548698;  // std dev = 0,454, 63,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( location(A, G), location(B, G) )
%   | | | then return 0.3080097349664966;  // std dev = 8,214, 333,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=234 */
%   | | | else return 0.18759965620763192;  // std dev = 6,832, 194,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=88 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I), location(B, J) )
%   | | then if ( proteinclass(B, K), phenotype(B, L) )
%   | | | then return -0.07273218518346466;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.0798539918880332;  // std dev = 6,455, 208,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=59 */
%   | | else if ( enzyme(A, M), proteinclass(A, N) )
%   | | | then return 0.37927109028812167;  // std dev = 2,422, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.1310653102303805;  // std dev = 9,545, 403,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=143 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.31453028742199585;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( proteinclass(A, G), complex(A, H) )
%   | | | then return 0.33439432798154217;  // std dev = 1,948, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.15022497380139677;  // std dev = 2,002, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( phenotype(A, I), phenotype(B, I) )
%   | | | then return 0.380374926964875;  // std dev = 2,461, 38,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return 0.18733211918661766;  // std dev = 10,481, 500,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=295 */
%   else if ( complex(B, J), complex(A, J) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.03512161744242782;  // std dev = 0,417, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | else if ( proteinclass(A, M), enzyme(B, N) )
%   | | | then return 0.459398579945786;  // std dev = 1,456, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.10735946617159838;  // std dev = 10,669, 505,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=180 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.18686124120603248;  // std dev = 0,398, 498,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=371 */
%   | else if ( phenotype(A, E), phenotype(B, F) )
%   | | then return 0.26809126264232747;  // std dev = 0,465, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | else if ( location(A, G), phenotype(A, H) )
%   | | | then return -0.09290312174790137;  // std dev = 2,953, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.1369023037749582;  // std dev = 5,633, 133,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=64 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, J), location(B, J) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.0675617334602959;  // std dev = 1,764, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.13231998572989095;  // std dev = 7,868, 268,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=103 */
%   | | else if ( proteinclass(A, M), location(A, N) )
%   | | | then return 0.1761246088692687;  // std dev = 3,591, 54,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | | else return 0.02878964361297297;  // std dev = 7,795, 303,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=87 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( proteinclass(B, D), location(B, E) )
%   | then if ( enzyme(B, F), phenotype(B, G) )
%   | | then if ( complex(B, H), enzyme(A, I) )
%   | | | then return 0.4466521673001147;  // std dev = 0,480, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13807689669084192;  // std dev = 2,259, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.1417266035354739;  // std dev = 1,332, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.04873613596210309;  // std dev = 4,351, 89,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=48 */
%   | else return 0.13921151411575852;  // std dev = 0,416, 574,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=389 */
%   else if ( complex(B, K), complex(A, K) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( proteinclass(B, L), location(A, M) )
%   | | then return -0.013245868178973068;  // std dev = 0,421, 77,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return -0.049556701048878514;  // std dev = 2,018, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.08146746945210755;  // std dev = 11,023, 543,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=194 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.19260610410883383;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( complex(A, E), location(B, F) )
%   | | then if ( phenotype(B, G), phenotype(A, G) )
%   | | | then return 0.1880133356426083;  // std dev = 2,567, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.009227187743973327;  // std dev = 6,835, 214,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=96 */
%   | | else if ( location(B, H), location(A, H) )
%   | | | then return 0.1443699396431814;  // std dev = 6,072, 207,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=155 */
%   | | | else return 0.06700277995441017;  // std dev = 5,551, 132,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=64 */
%   else if ( complex(A, I), complex(B, I) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(B, J), complex(A, K) )
%   | | then return -0.02615137849561908;  // std dev = 0,407, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( complex(B, L), enzyme(A, M) )
%   | | | then return 0.26640397971817154;  // std dev = 2,072, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.0527755849055832;  // std dev = 11,094, 569,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=194 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.09294733526021137;  // std dev = 0,395, 498,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=371 */
%   | else if ( enzyme(A, E), enzyme(B, E) )
%   | | then return 0.5025707539313439;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(B, F), proteinclass(B, G) )
%   | | | then return 0.25608215525097655;  // std dev = 1,535, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.011580632465739517;  // std dev = 6,624, 201,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=82 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(B, I), location(A, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.01412079774510434;  // std dev = 5,010, 134,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | | | else return 0.11320911173802384;  // std dev = 6,259, 164,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=71 */
%   | | else if ( function(A, K), complex(B, L) )
%   | | | then return -0.01738093647208589;  // std dev = 4,212, 94,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | | else return 0.02799119621458835;  // std dev = 7,484, 263,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.14949953926979542;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   | else if ( enzyme(A, E), enzyme(B, E) )
%   | | then return 0.3813527497864843;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(B, F), complex(B, G) )
%   | | | then return -0.12482786993170303;  // std dev = 2,944, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.04711084073467771;  // std dev = 10,548, 542,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=317 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( proteinclass(A, I), enzyme(B, J) )
%   | | then if ( complex(A, K), location(B, L) )
%   | | | then return 0.4690713460175245;  // std dev = 0,889, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.10878489037200534;  // std dev = 0,884, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(B, M), location(A, N) )
%   | | | then return -0.020373442303181596;  // std dev = 5,179, 153,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=36 */
%   | | | else return 0.042338994260637614;  // std dev = 10,416, 491,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=176 */


Results
   AUC ROC   = 0.662724
   AUC PR    = 0.686882
   CLL	      = -0.655104
   Precision = 0.690825 at threshold = 0.5
   Recall    = 0.473073
   F1        = 0.561579


Total learning time: 17.267 seconds
Total inference time: 3.469 seconds
AUC ROC: 0.662724


Refined model AUC ROC: 0.662724


Dataset: 23_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:51:36
{'Inference time': 3.469, 'parameter': {'Inference time': 3.215, 'F1': 0.623308, 'Precision': [0.620455, 0.5], 'CLL': -0.657353, 'AUC PR': 0.648854, 'Recall': 0.626188, 'AUC ROC': 0.643874, 'Learning time': 4.204}, 'F1': 0.561579, 'Precision': [0.690825, 0.5], 'CLL': -0.655104, 'AUC PR': 0.686882, 'Recall': 0.473073, 'AUC ROC': 0.662724, 'Learning time': 21.471}


Starting fold 4

Target train facts examples: 2518
Target train pos examples: 703
Target train neg examples: 703

Target test facts examples: 8023
Target test pos examples: 3771
Target test neg examples: 3771

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(B, E), enzyme(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8482479450005014;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.19713198594696973;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.29840050742655755;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.29955518509950874;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.31384513763115324;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7115664037968114;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.6723676618346616;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.1714018988920935;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.2580644859960673;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.25904705938643413;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.2711966394345235;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5498584094813495;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.5225238410881435;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.14611270155660092;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.21643030620556;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.2172134701319946;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.22687127601953047;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.41329362677011783;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.3927742928882807;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.12234271871083906;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.17660576903558475;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.17719309578613768;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.18440609551808673;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3168391093890843;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.29850198038149095;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.10086239414833581;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.14092336656048904;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.14134184518412027;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.14645750237907293;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(B, E), enzyme(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2512865355396856;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.23321722189777613;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.08208392512169656;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.11055894068470568;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.11084536226027737;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.11433257931208109;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(B, E), enzyme(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20576704067522542;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.1874270393397717;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.06610404053265613;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.08568286543082512;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.08587289152831203;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.0881808303703385;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17299345953383616;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.15431037802711225;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.0527929365533693;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.06583923189362591;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.0659621137486487;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.06745468144626907;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1485428512905598;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.1295753122809483;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.041887550485330334;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.050294942702359346;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.05037250067041224;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.051317986797284755;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.12972553577966864;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.11055711283622811;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.03306650130581006;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.03826621685925733;  // std dev = 6,260, 159,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.03831384151193756;  // std dev = 7,945, 256,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=113 */
%   | | | else return 0.03889950372720473;  // std dev = 13,998, 790,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=360 */


Results
   AUC ROC   = 0.561947
   AUC PR    = 0.593833
   CLL	      = -0.679302
   Precision = 0.955556 at threshold = 0.5
   Recall    = 0.07982
   F1        = 0.147332


Total learning time: 4.242 seconds
Total inference time: 2.622 seconds
AUC ROC: 0.561947


Structure after Parameter Learning
[['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(B, E), enzyme(A, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(B, D), enzyme(A, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [4.21e-08, 0, 12], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(A, H), enzyme(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [4.21e-08, 0, 12], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(B, D), enzyme(A, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(B, E), enzyme(A, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [2.11e-08, 0, 12], 'true,false,false,true': [2.11e-08, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(B, E), enzyme(A, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(A, H), enzyme(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [1.05e-08, 0, 12], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(A, D), enzyme(B, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(A, H), enzyme(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [1.05e-08, 0, 12], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'false,false': 'enzyme(A, I)', 'true': 'enzyme(B, D), enzyme(A, D)', 'false,false,false': 'enzyme(B, K)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'true,false,false': 'enzyme(B, G)', 'false,false,true': 'enzyme(B, J)', 'false': 'enzyme(B, H), enzyme(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.998, 430, 360], 'false,false,true,true': [3.636, 39, 20], 'true,true': [0.0, 0, 12], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,false': [6.26, 89, 70], 'true,false,false,false': [0.995, 1, 100], 'false,true': [0.97, 1, 16], 'false,false,false,true': [7.945, 143, 113]}]]
[{'': [0.007936000000004014, 0.24769510061481725], 'false,false': [0.2424038380607709, 0.24771505032372082], 'false,false,true': [0.22407354208560717, 0.2464301253906093], 'false,false,false': [0.24656677246094055, 0.24803717352986984], 'true': [-1.4802973661668753e-16, 0.00877124285378813], 'true,false': [nan, 0.00877124285378813], 'true,false,false': [-1.4802973661668753e-16, 0.00980296049407087], 'false': [0.055363321799307655, 0.24702008392083813]}, {'': [0.007930491303254314, 0.24651748331368462], 'false,false': [0.24186200666088142, 0.24770458995919922], 'false,false,true': [0.2240735420856072, 0.24643012539060885], 'false,false,false': [0.24656677246094033, 0.2480371735298764], 'true': [1.4802973661668753e-16, 0.008767872449422762], 'true,false': [nan, 0.008767872449422448], 'true,false,false': [1.4802973661668753e-16, 0.009802960494070097], 'false': [0.05536332179930808, 0.2468581844000769]}, {'': [0.007925498651701104, 0.24536662846731686], 'false,false': [0.24135552297304358, 0.24769454574479152], 'false,false,true': [0.2240735420856079, 0.2464301253906079], 'false,false,false': [0.2465667724609379, 0.24803717352989574], 'true': [-2.590520390792032e-16, 0.008764817778715656], 'true,false': [nan, 0.008764817778715656], 'true,false,false': [-2.590520390792032e-16, 0.009802960494070343], 'false': [0.055363321799307974, 0.24670614566421012]}, {'': [0.007923554747357741, 0.24464846888618771], 'false,false': [0.2409607158199563, 0.24768692172630927], 'false,false,true': [0.22407354208560723, 0.24643012539061013], 'false,false,false': [0.24656677246093822, 0.24803717352987967], 'true': [1.4802973661668753e-16, 0.008763628433215473], 'true,false': [nan, 0.008763628433215473], 'true,false,false': [1.4802973661668753e-16, 0.009802960494069358], 'false': [0.055363321799307995, 0.2465881428554077]}, {'': [0.007923118824114823, 0.2442915518578331], 'false,false': [0.24069628604590051, 0.24768214215638812], 'false,false,true': [0.2240735420856078, 0.24643012539060835], 'false,false,false': [0.24656677246093717, 0.24803717352989013], 'true': [-5.551115123125783e-17, 0.008763361720839049], 'true,false': [nan, 0.008763361720839049], 'true,false,false': [-5.551115123125783e-17, 0.009802960494068865], 'false': [0.05536332179930792, 0.246509950191255]}, {'': [0.007923134434097185, 0.24412170030833633], 'false,false': [0.24053954355898088, 0.24767955263761768], 'false,false,true': [0.2240735420856081, 0.24643012539060885], 'false,false,false': [0.24656677246093564, 0.248037173529874], 'true': [3.700743415417188e-17, 0.008763371271546916], 'true,false': [nan, 0.008763371271546916], 'true,false,false': [3.700743415417188e-17, 0.009802960494068813], 'false': [0.05536332179930796, 0.24646424430343442]}, {'': [0.007923262695499261, 0.24403797053107937], 'false,false': [0.24045515796082925, 0.24767828939990205], 'false,false,true': [0.2240735420856076, 0.24643012539061018], 'false,false,false': [0.24656677246093625, 0.24803717352987958], 'true': [-2.7755575615628914e-17, 0.008763449746149803], 'true,false': [nan, 0.008763449746149794], 'true,false,false': [-2.7755575615628914e-17, 0.009802960494068988], 'false': [0.055363321799307995, 0.24643999242318154]}, {'': [0.007923403781754764, 0.24399397379350482], 'false,false': [0.24041308823776558, 0.24767771660320417], 'false,false,true': [0.2240735420856074, 0.24643012539060974], 'false,false,false': [0.24656677246093756, 0.24803717352988627], 'true': [9.25185853854297e-18, 0.008763536067425783], 'true,false': [nan, 0.008763536067425783], 'true,false,false': [9.25185853854297e-18, 0.009802960494069205], 'false': [0.055363321799307974, 0.2464280605068943]}, {'': [0.007923529990412985, 0.24396878505106703], 'false,false': [0.24039344317579087, 0.24767747005658292], 'false,false,true': [0.22407354208560765, 0.2464301253906091], 'false,false,false': [0.24656677246093558, 0.24803717352988916], 'true': [9.25185853854297e-18, 0.008763613286091463], 'true,false': [nan, 0.008763613286091463], 'true,false,false': [9.25185853854297e-18, 0.009802960494069257], 'false': [0.05536332179930793, 0.24642254848366404]}, {'': [0.007923635907138252, 0.24395278192646355], 'false,false': [0.24038482743632333, 0.24767736821831104], 'false,false,true': [0.22407354208560717, 0.24643012539060885], 'false,false,false': [0.24656677246093714, 0.24803717352987978], 'true': [0.0, 0.00876367808947585], 'true,false': [nan, 0.008763678089475861], 'true,false,false': [0.0, 0.009802960494069082], 'false': [0.055363321799307946, 0.24642014942986287]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '0;true;enzyme(A, D), enzyme(B, D).;true;true', '0;true,false;enzyme(B, G).;true;true', '1;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '1;true;enzyme(B, D), enzyme(A, D).;true;true', '1;true,false;enzyme(B, G).;true;true', '2;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '2;true;enzyme(A, D), enzyme(B, D).;true;true', '2;true,false;enzyme(B, G).;true;true', '3;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '3;true;enzyme(A, D), enzyme(B, D).;true;true', '3;true,false;enzyme(B, G).;true;true', '4;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '4;true;enzyme(A, D), enzyme(B, D).;true;true', '4;true,false;enzyme(B, G).;true;true', '5;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '5;true;enzyme(B, D), enzyme(A, D).;true;true', '5;true,false;enzyme(B, G).;true;true', '6;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '6;true;enzyme(A, D), enzyme(B, D).;true;true', '6;true,false;enzyme(B, G).;true;true', '7;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '7;true;enzyme(A, D), enzyme(B, D).;true;true', '7;true,false;enzyme(B, G).;true;true', '8;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '8;true;enzyme(A, D), enzyme(B, D).;true;true', '8;true,false;enzyme(B, G).;true;true', '9;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true', '9;true;enzyme(B, D), enzyme(A, D).;true;true', '9;true,false;enzyme(B, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.8501489350995105;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(B, E), proteinclass(A, F) )
%   | | then if ( enzyme(A, G), phenotype(A, E) )
%   | | | then return 0.5914822684328456;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.3196873966379739;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( enzyme(A, H), proteinclass(A, I) )
%   | | | then return -0.016851064900487777;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.22017425155520487;  // std dev = 9,551, 395,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=143 */
%   | else if ( function(A, J), function(B, J) )
%   | | then if ( phenotype(B, K), enzyme(B, L) )
%   | | | then return 0.14386322081379807;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.4765234934033981;  // std dev = 8,172, 283,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=175 */
%   | | else if ( proteinclass(A, M), enzyme(A, N) )
%   | | | then return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.31901850031690115;  // std dev = 10,691, 460,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=212 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.7130852249848937;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(A, D) )
%   | then if ( proteinclass(A, E), phenotype(B, F) )
%   | | then if ( enzyme(A, G), phenotype(A, F) )
%   | | | then return 0.5033699069850941;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.27615825449321674;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( proteinclass(A, H), enzyme(A, I) )
%   | | | then return -0.014812149378556549;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.19120515474824437;  // std dev = 9,551, 395,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=143 */
%   | else if ( phenotype(A, J), phenotype(B, J) )
%   | | then if ( location(A, K), location(B, K) )
%   | | | then return 0.7076051100187295;  // std dev = 1,368, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.1230928584702798;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(B, L), phenotype(B, M) )
%   | | | then return 0.11573288194278741;  // std dev = 3,857, 74,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.3172692745776321;  // std dev = 13,264, 710,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=363 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.5509164880993835;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(A, D) )
%   | then if ( complex(B, E), enzyme(A, F) )
%   | | then if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.5639120687898799;  // std dev = 0,833, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2835473564741904;  // std dev = 2,075, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(B, H), proteinclass(B, I) )
%   | | | then return 0.05101985073703808;  // std dev = 3,161, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.16991034252089335;  // std dev = 9,551, 397,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=147 */
%   | else if ( complex(B, J) )
%   | | then if ( function(A, K), function(B, K) )
%   | | | then return 0.2332783921389564;  // std dev = 5,033, 106,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=52 */
%   | | | else return 0.09853463839661984;  // std dev = 4,738, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | else if ( function(A, L), function(B, L) )
%   | | | then return 0.3389472855996465;  // std dev = 7,324, 233,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=139 */
%   | | | else return 0.2522256914494171;  // std dev = 9,566, 367,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=179 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.4141019373916255;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(B, D), enzyme(B, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, E), phenotype(H, F) )
%   | | | then return 0.6317140534668951;  // std dev = 0,236, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30583659394696594;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.23181335775345907;  // std dev = 0,117, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.026381183528894427;  // std dev = 3,361, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | else if ( complex(A, J) )
%   | | then if ( location(B, K), location(A, K) )
%   | | | then return 0.18423046219977968;  // std dev = 7,309, 227,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=95 */
%   | | | else return 0.10046728756083183;  // std dev = 6,910, 219,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=72 */
%   | | else if ( proteinclass(A, L), proteinclass(B, M) )
%   | | | then return 0.34661118205466157;  // std dev = 3,414, 54,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   | | | else return 0.20696804165521357;  // std dev = 13,097, 705,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=356 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.31757830255335057;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( enzyme(A, E), proteinclass(B, F) )
%   | | then if ( complex(B, G), complex(A, H) )
%   | | | then return 0.20878665943440466;  // std dev = 1,337, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14178038478556837;  // std dev = 1,892, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( complex(B, I) )
%   | | | then return 0.11010759123480089;  // std dev = 6,063, 166,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=68 */
%   | | | else return 0.21480855777044314;  // std dev = 10,204, 443,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=238 */
%   | else if ( enzyme(A, J), location(B, K) )
%   | | then if ( phenotype(A, L), phenotype(B, M) )
%   | | | then return 0.27575175739730223;  // std dev = 2,022, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return -0.016365283686343404;  // std dev = 3,498, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.08743231792471672;  // std dev = 6,815, 210,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=70 */
%   | | | else return 0.14322739577873786;  // std dev = 9,175, 345,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=164 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.2520264880163002;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( phenotype(B, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( proteinclass(B, G) )
%   | | | then return -0.029652062374737432;  // std dev = 2,107, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.3618218877468869;  // std dev = 2,548, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | else if ( complex(B, H), phenotype(A, I) )
%   | | | then return -0.04021361831570565;  // std dev = 3,676, 72,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.07477585896165026;  // std dev = 8,798, 341,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=141 */
%   | else if ( proteinclass(A, J), enzyme(A, K) )
%   | | then if ( complex(B, L), phenotype(A, M) )
%   | | | then return 0.2536595429198971;  // std dev = 1,510, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.1287235354615456;  // std dev = 1,632, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( location(B, N), location(A, N) )
%   | | | then return 0.18847971347922668;  // std dev = 9,102, 349,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=192 */
%   | | | else return 0.10297900829908704;  // std dev = 9,907, 412,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=178 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.20652583788560958;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(B, D), enzyme(B, E) )
%   | then if ( phenotype(A, F), location(B, G) )
%   | | then if ( location(A, G), phenotype(B, H) )
%   | | | then return -0.07450319880878149;  // std dev = 1,288, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.22709141822085827;  // std dev = 2,278, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( phenotype(B, I), location(A, J) )
%   | | | then return 0.019582050546472475;  // std dev = 1,702, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.19779900142996845;  // std dev = 1,269, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( enzyme(B, K), location(B, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.04367326964174711;  // std dev = 4,808, 107,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=42 */
%   | | | else return 0.20413313822892168;  // std dev = 5,635, 142,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=84 */
%   | | else if ( function(A, N), function(B, N) )
%   | | | then return 0.12095633126347444;  // std dev = 9,782, 424,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=216 */
%   | | | else return 0.049133895929299155;  // std dev = 11,183, 532,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=216 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.1737726927690092;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( phenotype(B, D) )
%   | then if ( phenotype(A, D), enzyme(A, E) )
%   | | then if ( proteinclass(B, F) )
%   | | | then return 0.061840981686002675;  // std dev = 1,502, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.374481824531812;  // std dev = 1,038, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( enzyme(A, G), enzyme(B, H) )
%   | | | then return -0.1658592721879946;  // std dev = 1,272, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.030297574827689404;  // std dev = 9,791, 432,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=174 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( complex(B, K) )
%   | | | then return 0.16487712903619306;  // std dev = 1,504, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.1173810346387383;  // std dev = 2,448, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( function(A, L), function(B, L) )
%   | | | then return 0.13409614667401715;  // std dev = 7,749, 264,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=148 */
%   | | | else return 0.07201470979544462;  // std dev = 10,727, 481,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=217 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.149339811660917;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( proteinclass(A, G), location(B, F) )
%   | | | then return 0.18917438956539553;  // std dev = 1,752, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.021387584871358986;  // std dev = 2,424, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( enzyme(B, H), proteinclass(B, I) )
%   | | | then return 0.572113494888413;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22260980830858088;  // std dev = 1,591, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( phenotype(B, J) )
%   | | then if ( proteinclass(A, K), proteinclass(B, L) )
%   | | | then return 0.12382627990030026;  // std dev = 3,137, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return -0.002024761558835643;  // std dev = 8,844, 359,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=132 */
%   | | else if ( location(B, M), proteinclass(A, N) )
%   | | | then return 0.015353320780323832;  // std dev = 6,504, 192,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=82 */
%   | | | else return 0.07702557040220614;  // std dev = 11,922, 611,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=297 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.13053687472114384;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   else if ( complex(B, D), enzyme(B, E) )
%   | then if ( phenotype(A, F), proteinclass(A, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.09070148641818625;  // std dev = 1,048, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.3557530736304322;  // std dev = 1,281, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( phenotype(B, I), location(A, J) )
%   | | | then return 0.03896888038270038;  // std dev = 2,103, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.18022932319601062;  // std dev = 1,741, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( proteinclass(B, K), phenotype(B, L) )
%   | | then if ( proteinclass(A, M) )
%   | | | then return 0.11676893322616942;  // std dev = 3,449, 55,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.09133270575489891;  // std dev = 3,946, 84,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | else if ( location(B, N), enzyme(B, P) )
%   | | | then return 0.09225848433025251;  // std dev = 6,760, 208,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=112 */
%   | | | else return 0.03926141306648959;  // std dev = 14,066, 858,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=392 */


Results
   AUC ROC   = 0.610671
   AUC PR    = 0.647334
   CLL	      = -0.674824
   Precision = 0.697614 at threshold = 0.5
   Recall    = 0.286927
   F1        = 0.406614


Total learning time: 16.718 seconds
Total inference time: 2.567 seconds
AUC ROC: 0.610671


Refined model AUC ROC: 0.610671


Dataset: 23_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:52:02
{'Inference time': 2.567, 'parameter': {'Inference time': 2.622, 'F1': 0.147332, 'Precision': [0.955556, 0.5], 'CLL': -0.679302, 'AUC PR': 0.593833, 'Recall': 0.07982, 'AUC ROC': 0.561947, 'Learning time': 4.242}, 'F1': 0.406614, 'Precision': [0.697614, 0.5], 'CLL': -0.674824, 'AUC PR': 0.647334, 'Recall': 0.286927, 'AUC ROC': 0.610671, 'Learning time': 20.96}


