Starting experiment #2 for 23_twitter_yeast

Start learning from source dataset

Source train facts examples: 1654
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29200543734166007;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.09020635136745384;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.2270809739344648;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.08314893509951238;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5851330620836346;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.22683580378638235;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.1882460224781517;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5991127905211964;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.2526203131924544;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.07886693386734875;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.19713137927354563;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.07272278883431886;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4981430915465945;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1969210904003981;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.16375184812598748;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5096464309523057;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.09446743783575556;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.21208528513787867;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06835396613002147;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.16724566458008155;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.06309589017977435;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.39886930514184443;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1670738174611126;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.13978785669186128;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.40720674267139145;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.08165239320886175;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.17334061750398871;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.05877963201700046;  // std dev = 0,422, 418,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.1389729067688014;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.05435067930596077;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.3057854255901676;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.13883879987571035;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.11731127304472054;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.3114987982673407;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.06990902274840138;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.13859145217508886;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02448873109545597;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1134469960899069;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.06771287265166642;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23000136926846015;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1133466292034283;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.0969996134762259;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.2340980963909117;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.059354635365447495;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.10895946535964378;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.020816695607487626;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09127674823220668;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.05744216078545243;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.17271568132403478;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09120438598104755;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.07921312917783944;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.1759434171915245;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.05002771289938786;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08462011211980974;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01765046826884379;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07260402664850304;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.048386137564603;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.13054546027323538;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0725536046306809;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.06403412369586667;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.1332991893384412;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.04190386852605733;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06515171598735661;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.014933472875285356;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.057244418232963515;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.0405120888832632;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.09955734732282068;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.057210435785212115;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.0513441999643536;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10201484413152792;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.03491396367325339;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.04986151465309018;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012611476250501998;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.044832884464344205;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.033746202861237945;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.07659485299962451;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.044810796027097304;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.04090517157364211;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.07882946968212366;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.02896103559795105;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.03800098417869495;  // std dev = 0,496, 892,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010633908518233313;  // std dev = 0,405, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.034935447605181504;  // std dev = 6,925, 206,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=76 */
%   | | | else return 0.027989760801495015;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05938513296081307;  // std dev = 0,446, 945,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.034921719305504965;  // std dev = 6,789, 198,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
%   | | | else return 0.032424761151944;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06142578394326317;  // std dev = 5,645, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.023934242922604824;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Starting fold 1

Target train facts examples: 2602
Target train pos examples: 1915
Target train neg examples: 1915

Target test facts examples: 7939
Target test pos examples: 2559
Target test neg examples: 2559

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5757281858199687;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.40703401228647185;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4726067664248142;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.2512523833753696;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.20245273256786203;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.25641733336790823;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.22301379996437593;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.49039368626887286;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.3499504012571147;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4048669494692854;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G), location(B, G) )
%   | then return 0.2178362234341867;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1759791001800393;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.2222533343739347;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.19364213169835515;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.3087411357856349;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3932349741772913;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.28831652347606607;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.3300144050637663;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.18409479822219876;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.149887935321414;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.18767118601653818;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.16439240018961157;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.2564123687585864;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30192599492289823;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then return 0.2290868154084235;  // std dev = 12,015, 583,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=320 */
%   | | else if ( location(B, F) )
%   | | | then return 0.2583991109331592;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(B, G), location(A, G) )
%   | then return 0.15203242302745754;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.12533403769766704;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.15478176331167337;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.13674387474216756;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.20613740734453975;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22725733148497756;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.16538530597325068;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1972175702131778;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.25125738343602533;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.12313529782067019;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.10314669920153498;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.12515360753864924;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.11177642518948794;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17058334033195305;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.12602151681448456;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1486282837621727;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.1910584974064634;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.09819212681247026;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.08377067633723646;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.09961589427446413;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09007033514012781;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.12455597792081974;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12875100599334577;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.0952113247238772;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.11152459350905382;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.14384752014289565;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.07737163105835541;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.0673112280062798;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.0783413070042076;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.07176189529512493;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.09797365505128333;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07161883731602345;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.08368236452852174;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.10803782391368284;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.0604226695435468;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.0536307730357959;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.06106136138598137;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.05667577361036688;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.0718608885005585;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.07516729268282679;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.053763594510471;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.06290665890867196;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.08123983823979983;  // std dev = 4,392, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.046875741961736224;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04245022410291989;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.04728154659705981;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.04446251095505921;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.058090788657778156;  // std dev = 14,525, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.040329012223682875;  // std dev = 11,161, 501,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=269 */
%   | | else if ( location(B, G) )
%   | | | then return 0.04740256098286105;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.061247830895451695;  // std dev = 4,393, 83,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.036190159301215656;  // std dev = 15,561, 1.015,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=399 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03342982979936466;  // std dev = 13,355, 790,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=272 */
%   | | | else return 0.03643665464031784;  // std dev = 7,440, 231,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.03470472349489552;  // std dev = 4,141, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.0407602532330562;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Results
   AUC ROC   = 0.661064
   AUC PR    = 0.641713
   CLL	      = -0.648268
   Precision = 0.619013 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.644303


Total learning time: 8.629 seconds
Total inference time: 2.207 seconds
AUC ROC: 0.661064


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(A, G), location(B, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [12.015, 263, 320], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [0.0, 0, 1], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(B, E), location(A, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(A, H), location(B, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.392, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.732, 6, 6], 'false,true': [15.561, 616, 399], 'true,false,true': [11.161, 232, 269], 'false,false,false,true': [4.141, 47, 27], 'true,false,false,false': [4.393, 31, 52], 'true,true': [14.525, 294, 747], 'false,false,true,false': [7.44, 139, 92], 'true,false,false,true': [4.434, 32, 51], 'false,false,true,true': [13.355, 518, 272]}]]
[{'': [0.2259277871320757, 0.234404439465931], 'true,false': [0.24761024922842703, 0.23582766439909286], 'true,false,false': [0.2368994048483088, 0.0], 'true': [0.20265926965594272, 0.24666827006287184], 'false': [0.23857312722947432, 0.23001365213893224], 'false,false': [0.22941154463416435, 0.23647917793401985], 'false,false,true': [0.22575869251722677, 0.2396506812091245], 'false,false,false': [0.23173849525201012, 0.25]}, {'': [0.22396676777927935, 0.2342294041959124], 'true,false': [0.2476102492284163, 0.23524344676778758], 'true,false,false': [0.2368994048483086, 0.0], 'true': [0.20265926965591025, 0.24643160901368208], 'false': [0.23857312722946983, 0.22982812520720233], 'false,false': [0.2292765953326627, 0.23587720566286918], 'false,false,true': [0.2257586925172241, 0.23965068120912517], 'false,false,false': [0.2317384952520093, 0.25000000000000006]}, {'': [0.2220102059850299, 0.23406678413312665], 'true,false': [0.24761024922842284, 0.2346765425555035], 'true,false,false': [0.23689940484830868, 0.0], 'true': [0.20265926965593234, 0.24619822863121807], 'false': [0.23857312722948298, 0.22965486817308647], 'false,false': [0.22915164944262395, 0.23530328269906675], 'false,false,true': [0.22575869251721734, 0.23965068120912197], 'false,false,false': [0.23173849525201, 0.25000000000000006]}, {'': [0.22073455490345303, 0.23393954833817496], 'true,false': [0.24761024922842947, 0.23437698357374606], 'true,false,false': [0.2368994048483083, 0.0], 'true': [0.20265926965592695, 0.2460508890462185], 'false': [0.2385731272294816, 0.22951992478663366], 'false,false': [0.22905354470793246, 0.23486478020088095], 'false,false,true': [0.22575869251721792, 0.23965068120912095], 'false,false,false': [0.23173849525200926, 0.24999999999999992]}, {'': [0.22010707435782625, 0.2338533209256294], 'true,false': [0.2486364596156994, 0.23535670883607607], 'true,false,false': [0.23689940484830926, 0.23235386211726278], 'true': [0.202659269655924, 0.24597892338370736], 'false': [0.23857312722949553, 0.22942951323119756], 'false,false': [0.2289865203411336, 0.23458500191200835], 'false,false,true': [0.2257586925172183, 0.23965068120912433], 'false,false,false': [0.23173849525200843, 0.24999999999999997]}, {'': [0.21970668555614173, 0.23380129409034625], 'true,false': [0.24863645961570244, 0.23508395860429301], 'true,false,false': [0.2368994048483086, 0.23236835084532728], 'true': [0.20265926965592113, 0.24562255808460606], 'false': [0.23857312722949303, 0.22937576503083915], 'false,false': [0.22894569049530117, 0.23442940052342937], 'false,false,true': [0.22575869251723277, 0.2396506812091229], 'false,false,false': [0.23173849525200843, 0.25000000000000006]}, {'': [0.21951090316355845, 0.2337726805308763], 'true,false': [0.24863645961569794, 0.23490661092816825], 'true,false,false': [0.23689940484830843, 0.23239143121493974], 'true': [0.2026592696559198, 0.24541658059254495], 'false': [0.23857312722949486, 0.2293466527952507], 'false,false': [0.22892303624567745, 0.2343510472843121], 'false,false,true': [0.22575869251721845, 0.23965068120912275], 'false,false,false': [0.23173849525200838, 0.25]}, {'': [0.219411126120273, 0.2337580884839746], 'true,false': [0.248636459615701, 0.2348065177442162], 'true,false,false': [0.23689940484830915, 0.23241703643919218], 'true': [0.20265926965592118, 0.24530437615806946], 'false': [0.2385731272294912, 0.22933200976890047], 'false,false': [0.2289114036660797, 0.2343142976844266], 'false,false,true': [0.22575869251722094, 0.23965068120912217], 'false,false,false': [0.23173849525200896, 0.25000000000000006]}, {'': [0.21935690052343632, 0.23375112087717356], 'true,false': [0.2486364596156981, 0.23475446141520226], 'true,false,false': [0.23689940484830901, 0.23244146524990197], 'true': [0.20265926965592354, 0.24524423874825663], 'false': [0.23857312722948973, 0.22932509619927346], 'false,false': [0.22890582415116284, 0.23429795704688985], 'false,false,true': [0.22575869251722167, 0.23965068120912442], 'false,false,false': [0.23173849525200824, 0.2499999999999999]}, {'': [0.2193252352984809, 0.23374800065981244], 'true,false': [0.2486364596156948, 0.2347290977562546], 'true,false,false': [0.23689940484830863, 0.23246294491472433], 'true': [0.2026592696559208, 0.2452118766986677], 'false': [0.23857312722949203, 0.22932202534905938], 'false,false': [0.22890332067005864, 0.23429101490628235], 'false,false,true': [0.22575869251723238, 0.239650681209123], 'false,false,false': [0.23173849525200868, 0.25000000000000006]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;true,false;location(A, E).;true;true
0;true,false,false;location(B, F).;true;true
0;true;location(A, D), location(B, D).;true;true
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;true,false;location(A, E).;true;true
1;true,false,false;location(B, F).;true;true
1;true;location(B, D), location(A, D).;true;true
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;true,false;location(A, E).;true;true
2;true,false,false;location(B, F).;true;true
2;true;location(A, D), location(B, D).;true;true
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;true,false;location(A, E).;true;true
3;true,false,false;location(B, F).;true;true
3;true;location(A, D), location(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5757281858199687;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.6842358916212514;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return 0.3550939452828082;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=244 */
%   | | else if ( location(B, G) )
%   | | | then return 0.4726067664248142;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(B, H), phenotype(A, I) )
%   | then return 0.11861405137858272;  // std dev = 0,439, 215,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( complex(B, J), location(A, K) )
%   | | then return 0.1689993749822072;  // std dev = 0,463, 341,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=106 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.28062404178514067;  // std dev = 13,097, 703,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=297 */
%   | | | else return 0.24864719697668064;  // std dev = 14,332, 863,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=337 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.49039368626887286;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.5792891135108365;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return 0.30615824281771936;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=244 */
%   | | else if ( location(B, G) )
%   | | | then return 0.4048669494692854;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(B, H), phenotype(A, I) )
%   | then return 0.10355308262844407;  // std dev = 0,439, 215,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( complex(B, J), location(A, K) )
%   | | then return 0.14715710814909755;  // std dev = 0,463, 341,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=106 */
%   | | else if ( phenotype(B, L), phenotype(A, L) )
%   | | | then return 0.44149238673110663;  // std dev = 2,224, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.2249654971300752;  // std dev = 19,269, 1.545,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=621 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3932349741772913;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else return 0.2922123130159104;  // std dev = 0,488, 667,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=372 */
%   else if ( phenotype(A, E), function(B, F) )
%   | then if ( location(B, G), location(A, G) )
%   | | then if ( complex(A, H), enzyme(B, I) )
%   | | | then return 0.0431830942402701;  // std dev = 3,433, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return 0.20597866414065766;  // std dev = 9,559, 379,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=156 */
%   | | else return 0.11251362557471245;  // std dev = 0,462, 538,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=168 */
%   | else if ( function(B, J) )
%   | | then if ( location(A, K), complex(B, L) )
%   | | | then return 0.1282837325752548;  // std dev = 6,526, 198,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=62 */
%   | | | else return 0.20338156177434902;  // std dev = 14,802, 902,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=375 */
%   | | else if ( proteinclass(A, M), phenotype(A, N) )
%   | | | then return 0.7902424249228857;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2902424249228855;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30192599492289823;  // std dev = 0,450, 1.041,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=747 */
%   | else if ( location(A, E) )
%   | | then if ( enzyme(B, F) )
%   | | | then return 0.014444003603434698;  // std dev = 4,512, 95,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return 0.2681136780705888;  // std dev = 10,643, 488,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=289 */
%   | | else if ( location(B, G) )
%   | | | then return 0.2670184821005584;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.48254842677737586;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(B, H), phenotype(A, I) )
%   | then return 0.07331189907103298;  // std dev = 0,438, 215,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( phenotype(B, J), enzyme(A, K) )
%   | | then return -0.038298720776831024;  // std dev = 0,389, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( complex(B, L), location(A, M) )
%   | | | then return 0.11775024320270629;  // std dev = 8,418, 323,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=105 */
%   | | | else return 0.162272195313774;  // std dev = 19,188, 1.532,000 (wgt'ed) examples reached here.  /* #neg=907 #pos=625 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then if ( proteinclass(B, F), phenotype(A, E) )
%   | | | then return 0.4720544082952898;  // std dev = 0,944, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.15167067828538136;  // std dev = 5,260, 122,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=72 */
%   | | else if ( proteinclass(B, G), proteinclass(A, H) )
%   | | | then return 0.22909328915956625;  // std dev = 1,807, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.056246280978124515;  // std dev = 5,599, 142,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | else return 0.2364518197962408;  // std dev = 0,455, 1.410,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=968 */
%   else if ( phenotype(B, I), enzyme(A, J) )
%   | then return -0.004361147787195403;  // std dev = 0,410, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( enzyme(B, K), complex(A, L) )
%   | | then return 0.03348556549956987;  // std dev = 0,426, 159,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=38 */
%   | | else if ( location(A, M), location(B, M) )
%   | | | then return 0.14282255122052415;  // std dev = 14,822, 909,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=375 */
%   | | | else return 0.1091340406689735;  // std dev = 15,160, 999,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=371 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.15737991135709636;  // std dev = 0,461, 1.708,000 (wgt'ed) examples reached here.  /* #neg=589 #pos=1.119 */
%   else if ( function(B, D), phenotype(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(B, G) )
%   | | | then return 0.03313935085490033;  // std dev = 4,957, 138,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=32 */
%   | | | else return 0.11109962594640159;  // std dev = 10,520, 469,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=187 */
%   | | else if ( phenotype(B, H), complex(B, I) )
%   | | | then return 0.24663242293021231;  // std dev = 3,080, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.018818693400348235;  // std dev = 8,403, 342,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=101 */
%   | else if ( function(B, J) )
%   | | then if ( enzyme(A, K), proteinclass(A, L) )
%   | | | then return 0.014040087220657447;  // std dev = 2,873, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.10761975667019862;  // std dev = 15,896, 1.058,000 (wgt'ed) examples reached here.  /* #neg=633 #pos=425 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.05906548705768593;  // std dev = 1,792, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.3707235733339657;  // std dev = 2,021, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.26684730208753965;  // std dev = 0,344, 258,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=222 */
%   | else return 0.1709396227673299;  // std dev = 0,481, 46,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   else if ( enzyme(B, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( proteinclass(B, H) )
%   | | | then return 0.533985210342322;  // std dev = 0,872, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18371326471218113;  // std dev = 1,946, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.02270905492196878;  // std dev = 6,731, 232,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=67 */
%   | | | else return 0.05084773340768756;  // std dev = 9,971, 434,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=181 */
%   | else if ( complex(A, J), complex(B, J) )
%   | | then return 0.37807691845454355;  // std dev = 0,190, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else if ( function(B, K), phenotype(A, L) )
%   | | | then return 0.06519875150387215;  // std dev = 17,539, 1.344,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=633 */
%   | | | else return 0.10907599618607516;  // std dev = 18,313, 1.467,000 (wgt'ed) examples reached here.  /* #neg=715 #pos=752 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(B, C), phenotype(B, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return -0.019185721994654358;  // std dev = 0,429, 57,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | else return 0.13786869426676807;  // std dev = 0,436, 591,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=370 */
%   else if ( complex(B, G), phenotype(A, H) )
%   | then if ( enzyme(B, I), location(A, J) )
%   | | then if ( proteinclass(A, K), location(B, J) )
%   | | | then return -0.15272382542796653;  // std dev = 1,313, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07915855519580661;  // std dev = 3,022, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else return -0.07339580409564682;  // std dev = 0,432, 97,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | else if ( enzyme(B, L) )
%   | | then if ( phenotype(B, M), proteinclass(B, N) )
%   | | | then return 0.16517202157405642;  // std dev = 3,458, 75,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
%   | | | else return 0.017393853761414026;  // std dev = 11,046, 555,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=205 */
%   | | else if ( phenotype(A, P), phenotype(B, P) )
%   | | | then return 0.1905847961497244;  // std dev = 4,203, 116,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=93 */
%   | | | else return 0.06837280072088886;  // std dev = 23,047, 2.290,000 (wgt'ed) examples reached here.  /* #neg=1.166 #pos=1.124 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(B, C), complex(B, D) )
%   then if ( phenotype(A, C) )
%   | then return 0.1767159954601536;  // std dev = 0,349, 144,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=119 */
%   | else if ( complex(A, D) )
%   | | then return 0.3015342097894272;  // std dev = 0,076, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( function(A, E), function(B, E) )
%   | | | then return 0.09648789086467158;  // std dev = 7,642, 278,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=187 */
%   | | | else return 0.020355700940962507;  // std dev = 6,693, 207,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=69 */
%   else if ( phenotype(B, F), phenotype(A, F) )
%   | then return 0.14661635169482112;  // std dev = 0,385, 160,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=125 */
%   | else if ( phenotype(A, G), function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.046335485579924805;  // std dev = 12,904, 737,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=370 */
%   | | | else return -0.0020092828637008637;  // std dev = 12,684, 732,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=260 */
%   | | else if ( complex(B, J), location(A, K) )
%   | | | then return 0.009574062402041528;  // std dev = 5,492, 134,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=55 */
%   | | | else return 0.06572595050627013;  // std dev = 18,167, 1.419,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=711 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then if ( enzyme(B, D), complex(B, E) )
%   | then if ( proteinclass(A, F) )
%   | | then return -0.5630135308228743;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.21208105201458394;  // std dev = 1,037, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( function(A, G), function(B, G) )
%   | | then return 0.14704017169889513;  // std dev = 0,335, 254,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=221 */
%   | | else return 0.048601112239680326;  // std dev = 0,476, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.23937347981849283;  // std dev = 0,179, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( proteinclass(B, I), location(A, J) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.3634422431986857;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.007636813662193182;  // std dev = 11,442, 574,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=254 */
%   | | else if ( phenotype(A, K), location(B, L) )
%   | | | then return 0.023520971860268094;  // std dev = 16,883, 1.286,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=569 */
%   | | | else return 0.05602551226998814;  // std dev = 19,312, 1.632,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=815 */


Results
   AUC ROC   = 0.682623
   AUC PR    = 0.693729
   CLL	      = -0.637164
   Precision = 0.657315 at threshold = 0.5
   Recall    = 0.595154
   F1        = 0.624692


Total learning time: 34.662 seconds
Total inference time: 2.686 seconds
AUC ROC: 0.682623


Refined model AUC ROC: 0.682623


Dataset: 23_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:18:14
{'Recall': 0.595154, 'Learning time': 43.291, 'F1': 0.624692, 'Precision': [0.657315, 0.5], 'AUC PR': 0.693729, 'CLL': -0.637164, 'parameter': {'Recall': 0.671747, 'Learning time': 8.629, 'F1': 0.644303, 'Precision': [0.619013, 0.5], 'AUC PR': 0.641713, 'CLL': -0.648268, 'AUC ROC': 0.661064, 'Inference time': 2.207}, 'AUC ROC': 0.682623, 'Inference time': 2.686}


Starting fold 2

Target train facts examples: 2686
Target train pos examples: 1170
Target train neg examples: 1170

Target test facts examples: 7855
Target test pos examples: 3304
Target test neg examples: 3304

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5529232818928568;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.3591672650384081;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.17856237179201465;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.17937798537883787;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.2321326749369086;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.4715677637025921;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.3096019020340061;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(A, G), location(B, G) )
%   | then return 0.15540673758506965;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1561099456434237;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.2014631058629979;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.3794857313889192;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.25708430335729765;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.3027909085849406;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.13286678789882134;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.1334508643879969;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.17078231966394156;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.29250616963481685;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E) )
%   | | then return 0.20662610136742468;  // std dev = 11,079, 491,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=246 */
%   | | else if ( location(B, F) )
%   | | | then return 0.2393401664098931;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( location(B, G), location(A, G) )
%   | then return 0.11177696953660793;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, H) )
%   | | then if ( location(B, I) )
%   | | | then return 0.11224516657087355;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.1417287681464071;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, J) )
%   | | | then return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2206305251671384;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.17818909875966968;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1843038277162846;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.035947719449323325;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.09272100366587427;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.09308417727823429;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.11550552605316856;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16552939712634876;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(B, E), location(A, F) )
%   | | then return 0.13719027731221242;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.13977569193759043;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02784598355276367;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.0760060907193902;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.07627941954993961;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.09275758601491853;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12458030777641482;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.10437806132464765;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1052107561348137;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.021508458667723534;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(A, H), location(B, H) )
%   | then return 0.061698809093155824;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.061898789279218464;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.07363337642475215;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.09435248460884635;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.07886719962599706;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.07895904348963037;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.016577669551537565;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.04969117809332778;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.04983350236659652;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.05793638917824381;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.07194480084847392;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.05936523998587631;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.0592222778258641;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.012756658380341837;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03976956721428066;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03986795857633476;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.0452814457676571;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.05519924085201672;  // std dev = 13,363, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( location(A, E), location(B, F) )
%   | | then return 0.044596674252573666;  // std dev = 10,422, 435,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=225 */
%   | | else if ( location(B, G) )
%   | | | then return 0.04444053765471761;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.009804427613342742;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( location(B, H), location(A, H) )
%   | then return 0.03167119169531126;  // std dev = 9,180, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, I) )
%   | | then if ( location(B, J) )
%   | | | then return 0.03173697758939641;  // std dev = 8,835, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.035213399803294236;  // std dev = 7,589, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else if ( location(B, K) )
%   | | | then return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.644496
   AUC PR    = 0.635119
   CLL	      = -0.664825
   Precision = 0.676772 at threshold = 0.5
   Recall    = 0.479722
   F1        = 0.561459


Total learning time: 6.146 seconds
Total inference time: 3.228 seconds
AUC ROC: 0.644496


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(A, G), location(B, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [2.63e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, F)', 'true,false': 'location(A, E)', 'false': 'location(B, G), location(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(B, I)', 'false,false,false': 'location(B, J)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [11.079, 245, 246], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [0.0, 0, 0], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [2.63e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(B, E), location(A, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(A, H), location(B, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.86e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(B, D), location(A, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true': 'location(A, D), location(B, D)', 'true,false,false': 'location(B, G)', 'true,false': 'location(A, E), location(B, F)', 'false': 'location(B, H), location(A, H)', 'false,false': 'location(A, I)', 'false,false,true': 'location(B, J)', 'false,false,false': 'location(B, K)'}, {'false,false,false,false': [1.32e-09, 3, 0], 'false,true': [9.18, 263, 124], 'true,false,true': [10.422, 210, 225], 'false,false,false,true': [1.155, 2, 4], 'true,false,false,false': [3.623, 35, 21], 'true,true': [13.363, 257, 585], 'false,false,true,false': [7.589, 154, 92], 'true,false,false,true': [1.309, 3, 4], 'false,false,true,true': [8.835, 243, 115]}]]
[{'': [0.23483793717979465, 0.22277499999999573], 'false,false,false': [0.22222222222222213, 0.0], 'true,false,false': [0.24489795918367332, nan], 'true,false': [0.24999896300413862, 0.24489795918367332], 'false': [0.21774866627940617, 0.22572910484899184], 'false,false': [0.22526150168852507, 0.2469135802469134], 'false,false,true': [0.218040947535972, 0.23411990217463302], 'true': [0.21206295383122495, 0.24999596780697392]}, {'': [0.23221617029452066, 0.2223713878319356], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.24489795918367355, nan], 'true,false': [0.24999896300413743, 0.24489795918367355], 'false': [0.21774866627939862, 0.2251289835571047], 'false,false': [0.22508620670864884, 0.22129878558573596], 'false,false,true': [0.21804094753597164, 0.23411990217463371], 'true': [0.21206295383122042, 0.24997595498263928]}, {'': [0.2296077261759118, 0.22200076078409592], 'false,false,false': [0.22222222222222224, 2.3129646346357427e-18], 'true,false,false': [0.2448979591836735, nan], 'true,false': [0.24999896300413751, 0.2448979591836735], 'false': [0.21774866627940231, 0.22457851631678385], 'false,false': [0.22492609036975134, 0.19821944611854894], 'false,false,true': [0.21804094753596484, 0.23411990217463113], 'true': [0.21206295383121893, 0.24995621416113467]}, {'': [0.22784436146179837, 0.22172033338545216], 'false,false,false': [0.2222222222222222, -1.1564823173178713e-18], 'true,false,false': [0.24489795918367344, nan], 'true,false': [0.24999896300413216, 0.24489795918367344], 'false': [0.21774866627940329, 0.22416330173934715], 'false,false': [0.2247995090856411, 0.18063518427729497], 'false,false,true': [0.21804094753597258, 0.23411990217463116], 'true': [0.21206295383122498, 0.24994209381101123]}, {'': [0.22693258152033915, 0.22153638558230151], 'false,false,false': [0.22222222222222224, 2.3129646346357427e-18], 'true,false,false': [0.24489795918367346, 0.23437499999999972], 'true,false': [0.2497027348394772, 0.23771799890782702], 'false': [0.2177486662794043, 0.22389183576042013], 'false,false': [0.22471101865756862, 0.16884368943588668], 'false,false,true': [0.21804094753596528, 0.2341199021746294], 'true': [0.2120629538312195, 0.2499341772844101]}, {'': [0.22621455252043762, 0.22142510038593888], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.2448979591836735, 0.23437500000000044], 'true,false': [0.24970273483947988, 0.23678157666180236], 'false': [0.2177486662794074, 0.2237276313715651], 'false,false': [0.2246552092389442, 0.16145163178405963], 'false,false,true': [0.2180409475359656, 0.234119902174633], 'true': [0.2120629538312215, 0.24910586756011374]}, {'': [0.2258439659509145, 0.22136008812616761], 'false,false,false': [0.2222222222222222, 0.0], 'true,false,false': [0.24489795918367344, 0.23437500000000006], 'true,false': [0.24970273483947394, 0.2362361756723854], 'false': [0.2177486662793985, 0.22363118780209013], 'false,false': [0.22462290229340787, 0.15690703181708032], 'false,false,true': [0.21804094753597075, 0.23411990217463197], 'true': [0.21206295383122964, 0.24859722175941404]}, {'': [0.2256478298181946, 0.22132236134499278], 'false,false,false': [0.2222222222222222, 1.1564823173178713e-18], 'true,false,false': [0.2448979591836735, 0.23437500000000014], 'true,false': [0.24970273483947802, 0.23592855702676918], 'false': [0.21774866627939915, 0.22357457918026793], 'false,false': [0.2246055106496044, 0.15409061351220688], 'false,false,true': [0.21804094753596787, 0.2341199021746322], 'true': [0.21206295383122625, 0.2482988566744131]}, {'': [0.22554055512278723, 0.22130020470708583], 'false,false,false': [0.2222222222222222, -5.782411586589357e-19], 'true,false,false': [0.24489795918367344, 0.23437499999999994], 'true,false': [0.2497027348394776, 0.23575745756761365], 'false': [0.21774866627940268, 0.22354078744949876], 'false,false': [0.2245967353935799, 0.1523086979512101], 'false,false,true': [0.2180409475359664, 0.2341199021746318], 'true': [0.21206295383122659, 0.24812838838071027]}, {'': [0.22547991565153294, 0.2212868459216228], 'false,false,false': [0.2222222222222222, 5.782411586589357e-19], 'true,false,false': [0.24489795918367352, 0.23437500000000028], 'true,false': [0.2497027348394745, 0.23566270263707984], 'false': [0.21774866627940226, 0.22352002582752162], 'false,false': [0.2245925783384848, 0.15115234510925923], 'false,false,true': [0.21804094753597172, 0.23411990217463333], 'true': [0.21206295383122498, 0.24803239409594763]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;location(B, G), location(A, G).;true;true
0;false,false;location(A, H).;true;true
0;false,false,false;location(B, J).;true;true
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;location(A, G), location(B, G).;true;true
1;false,false;location(A, H).;true;true
1;false,false,false;location(B, J).;true;true
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;location(B, G), location(A, G).;true;true
2;false,false;location(A, H).;true;true
2;false,false,false;location(B, J).;true;true
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;location(B, G), location(A, G).;true;true
3;false,false;location(A, H).;true;true
3;false,false,false;location(B, J).;true;true
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;location(B, H), location(A, H).;true;true
4;false,false;location(A, I).;true;true
4;false,false,false;location(B, K).;true;true
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;location(B, H), location(A, H).;true;true
5;false,false;location(A, I).;true;true
5;false,false,false;location(B, K).;true;true
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;location(A, H), location(B, H).;true;true
6;false,false;location(A, I).;true;true
6;false,false,false;location(B, K).;true;true
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;location(B, H), location(A, H).;true;true
7;false,false;location(A, I).;true;true
7;false,false,false;location(B, K).;true;true
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;location(B, H), location(A, H).;true;true
8;false,false;location(A, I).;true;true
8;false,false,false;location(B, K).;true;true
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;location(B, H), location(A, H).;true;true
9;false,false;location(A, I).;true;true
9;false,false,false;location(B, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5529232818928568;  // std dev = 0,461, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( phenotype(B, E), location(B, F) )
%   | | then if ( proteinclass(B, G), phenotype(A, E) )
%   | | | then return 0.6968586125188665;  // std dev = 2,048, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.41708429631623967;  // std dev = 8,052, 263,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=147 */
%   | | else if ( complex(B, H), complex(A, I) )
%   | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.2592788786023383;  // std dev = 6,521, 177,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=71 */
%   else if ( location(B, J), location(A, J) )
%   | then return 0.17856237179201465;  // std dev = 0,467, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, K) )
%   | | then return 0.20086416688758724;  // std dev = 0,475, 604,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=207 */
%   | | else if ( location(B, L) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.7077108966114685;  // std dev = 0,254, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( phenotype(B, E), location(B, F) )
%   | | then if ( proteinclass(A, G), location(A, F) )
%   | | | then return 0.5521944864279601;  // std dev = 5,707, 187,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=145 */
%   | | | else return 0.4121163073025223;  // std dev = 11,504, 570,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=357 */
%   | | else if ( location(B, H), location(A, H) )
%   | | | then return 0.3595272298588835;  // std dev = 8,222, 278,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=162 */
%   | | | else return 0.20426467907162155;  // std dev = 6,910, 204,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=77 */
%   else if ( location(A, I), location(B, I) )
%   | then return 0.15540673758506965;  // std dev = 0,467, 387,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=124 */
%   | else if ( location(A, J) )
%   | | then if ( proteinclass(A, K), function(B, L) )
%   | | | then return 0.0732768815813597;  // std dev = 5,153, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.20662524008185337;  // std dev = 10,370, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.2570488579851775;  // std dev = 0,470, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.38125488217096054;  // std dev = 0,455, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( phenotype(B, E), phenotype(A, E) )
%   | | then return 0.4111806316165127;  // std dev = 0,451, 85,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=60 */
%   | | else if ( location(B, F), phenotype(B, G) )
%   | | | then return 0.2700057669778419;  // std dev = 7,230, 211,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=115 */
%   | | | else return 0.16692938186252784;  // std dev = 6,852, 202,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( proteinclass(A, I), proteinclass(B, J) )
%   | | then return -0.06254664879368764;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.14578668453964713;  // std dev = 0,471, 363,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=121 */
%   | else if ( location(A, K) )
%   | | then if ( function(B, L), proteinclass(A, M) )
%   | | | then return 0.06277893162600826;  // std dev = 5,153, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.175720411418844;  // std dev = 10,370, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.21536374721867504;  // std dev = 0,466, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.2943387714629202;  // std dev = 0,455, 842,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=585 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.05740484863408099;  // std dev = 0,462, 64,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( phenotype(B, G), location(B, H) )
%   | | | then return 0.26250072950363623;  // std dev = 7,738, 257,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=157 */
%   | | | else return 0.16365902580949854;  // std dev = 6,512, 177,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=71 */
%   else if ( location(B, I), location(A, I) )
%   | then if ( proteinclass(A, J) )
%   | | then return 0.06029671428499134;  // std dev = 0,440, 132,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else return 0.13824194102453077;  // std dev = 0,477, 255,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=89 */
%   | else if ( location(A, K) )
%   | | then if ( location(B, L) )
%   | | | then return 0.10064723282254988;  // std dev = 8,801, 358,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
%   | | | else return 0.15783104837075485;  // std dev = 7,557, 246,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
%   | | else return 0.17581317240585922;  // std dev = 0,463, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.3978776626681026;  // std dev = 0,255, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( phenotype(A, E), phenotype(B, E) )
%   | | then return 0.28094924997261367;  // std dev = 0,432, 264,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=197 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1275109200668425;  // std dev = 13,033, 706,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=373 */
%   | | | else return 0.22648986794193599;  // std dev = 7,563, 269,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=171 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(B, H) )
%   | | then return -0.004124952735251591;  // std dev = 0,407, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else return 0.11382693095204986;  // std dev = 0,475, 317,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=109 */
%   | else if ( location(A, I) )
%   | | then if ( phenotype(B, J), phenotype(A, J) )
%   | | | then return 0.4694816899796206;  // std dev = 1,431, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.09587265990048499;  // std dev = 11,463, 594,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=200 */
%   | | else return 0.14056418209618585;  // std dev = 0,460, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.30142046943709383;  // std dev = 0,255, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( proteinclass(B, E), phenotype(B, F) )
%   | | then return 0.20689490864799953;  // std dev = 0,441, 300,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=214 */
%   | | else return 0.11586171452982474;  // std dev = 0,483, 939,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=527 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( proteinclass(B, H) )
%   | | then return -0.0034236989906138;  // std dev = 0,407, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( complex(B, I), proteinclass(A, J) )
%   | | | then return 0.23248581885873412;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.08416625160682947;  // std dev = 8,140, 298,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=100 */
%   | else if ( location(A, K) )
%   | | then if ( complex(A, L), proteinclass(B, M) )
%   | | | then return -0.09849126272442411;  // std dev = 1,957, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.09270090601992435;  // std dev = 11,374, 573,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=202 */
%   | | else return 0.11063876789286281;  // std dev = 0,458, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2342654269002982;  // std dev = 0,255, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.06785253321800312;  // std dev = 0,486, 534,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=298 */
%   | | else return 0.1322599286314408;  // std dev = 0,463, 705,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=443 */
%   else if ( location(A, G), location(B, G) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.045633958897765704;  // std dev = 0,402, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.11274010258739302;  // std dev = 5,950, 153,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=57 */
%   | | | else return 0.04138459729735678;  // std dev = 6,383, 196,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=59 */
%   | else if ( location(A, K) )
%   | | then if ( proteinclass(A, L), function(B, M) )
%   | | | then return -4.2315255264402347E-4;  // std dev = 5,123, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | | | else return 0.08775704581461469;  // std dev = 10,332, 459,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=172 */
%   | | else return 0.08611616405499423;  // std dev = 0,456, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( proteinclass(B, D), complex(B, E) )
%   | then return 0.16523691560116813;  // std dev = 0,408, 194,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=147 */
%   | else if ( enzyme(A, F), phenotype(B, G) )
%   | | then return 0.17158037249099037;  // std dev = 0,429, 135,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=98 */
%   | | else return 0.06118568940275153;  // std dev = 0,472, 1.011,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=590 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( proteinclass(A, I) )
%   | | then return 0.005819809530902725;  // std dev = 0,435, 132,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else if ( complex(B, J), complex(A, K) )
%   | | | then return -0.08980304865004719;  // std dev = 1,810, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.08591213852588475;  // std dev = 7,322, 234,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=85 */
%   | else if ( location(A, L) )
%   | | then if ( location(B, M), proteinclass(A, N) )
%   | | | then return -0.036439229667880456;  // std dev = 3,307, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.06440891728953668;  // std dev = 11,043, 534,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=193 */
%   | | else return 0.06651023845985021;  // std dev = 0,455, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( proteinclass(B, D), complex(B, E) )
%   | then return 0.12740150413648707;  // std dev = 0,408, 194,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=147 */
%   | else if ( phenotype(B, F), phenotype(A, F) )
%   | | then return 0.12251595520003947;  // std dev = 0,426, 247,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=186 */
%   | | else return 0.038435163860008;  // std dev = 0,477, 899,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=502 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then if ( proteinclass(B, J), proteinclass(A, K) )
%   | | | then return -0.1137753370245307;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.08438824491722478;  // std dev = 6,089, 159,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=60 */
%   | | else return 0.013580144570038317;  // std dev = 0,449, 217,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=63 */
%   | else if ( location(A, L) )
%   | | then if ( proteinclass(A, M), enzyme(A, N) )
%   | | | then return -0.13925752296592367;  // std dev = 1,581, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.04959566199362408;  // std dev = 11,396, 578,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=204 */
%   | | else return 0.05109514996144969;  // std dev = 0,455, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.15274877855313224;  // std dev = 0,253, 101,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=94 */
%   | else if ( proteinclass(A, E), proteinclass(B, E) )
%   | | then return 0.4214727524042266;  // std dev = 0,111, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.04046966865985401;  // std dev = 0,472, 1.230,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=732 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( proteinclass(B, G) )
%   | | then return -0.022515653021826173;  // std dev = 0,403, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( proteinclass(A, H), complex(B, I) )
%   | | | then return 0.168639976428686;  // std dev = 2,166, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.034472282141949445;  // std dev = 8,100, 298,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=100 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.06559445700493027;  // std dev = 7,416, 241,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | | else return 0.010518354673641053;  // std dev = 8,804, 363,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=117 */
%   | | else return 0.039110129757098544;  // std dev = 0,454, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.665958
   AUC PR    = 0.69771
   CLL	      = -0.649286
   Precision = 0.680144 at threshold = 0.5
   Recall    = 0.514225
   F1        = 0.58566


Total learning time: 23.392 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.665958


Refined model AUC ROC: 0.665958


Dataset: 23_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:18:51
{'Recall': 0.514225, 'Learning time': 29.538, 'F1': 0.58566, 'Precision': [0.680144, 0.5], 'AUC PR': 0.69771, 'CLL': -0.649286, 'parameter': {'Recall': 0.479722, 'Learning time': 6.146, 'F1': 0.561459, 'Precision': [0.676772, 0.5], 'AUC PR': 0.635119, 'CLL': -0.664825, 'AUC ROC': 0.644496, 'Inference time': 3.228}, 'AUC ROC': 0.665958, 'Inference time': 2.821}


Starting fold 3

Target train facts examples: 2735
Target train pos examples: 686
Target train neg examples: 686

Target test facts examples: 7806
Target test pos examples: 3788
Target test neg examples: 3788

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.8501489350995105;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.43197443845521255;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.19406224779300618;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.7130852249848937;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, F), function(B, F) )
%   | then return 0.3708864693780713;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.16875994531535027;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.5509164880993835;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.3043212216780253;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.14393055087761256;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.4141019373916255;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F), function(A, F) )
%   | then return 0.24041898599049621;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, G) )
%   | | then if ( function(B, H) )
%   | | | then return 0.12060962648218426;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.31757830255335057;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.1850349419762722;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.09953476139856494;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.2520264880163002;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(B, E), function(A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.14027114595289142;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.08109986026654882;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.20652583788560958;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(A, G), function(B, G) )
%   | then return 0.10555600320806177;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.06539668501014714;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.1737726927690092;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.0792094935913147;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.05229958774624011;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.149339811660917;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.05941132337546053;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.04155436179278542;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.13053687472114384;  // std dev = 0,996, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else if ( function(A, E), function(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, G), function(A, G) )
%   | then return 0.04458789055409383;  // std dev = 12,073, 596,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=342 */
%   | else if ( function(A, H) )
%   | | then if ( function(B, I) )
%   | | | then return 0.03284990266125654;  // std dev = 12,004, 646,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=217 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, J) )
%   | | | then return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.641066
   AUC PR    = 0.650162
   CLL	      = -0.658227
   Precision = 0.630181 at threshold = 0.5
   Recall    = 0.626188
   F1        = 0.628178


Total learning time: 3.823 seconds
Total inference time: 2.491 seconds
AUC ROC: 0.641066


Structure after Parameter Learning
[['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E)', 'false': 'function(A, F), function(B, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E)', 'false': 'function(B, F), function(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(B, H)', 'false,false,false': 'function(B, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(B, E), function(A, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(A, G), function(B, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(B, D), function(A, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'function(A, D), function(B, D)', 'true,false': 'function(A, E), function(B, F)', 'false': 'function(B, G), function(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(B, I)', 'false,false,false': 'function(B, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [12.004, 429, 217], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,true': [0.996, 1, 124], 'false,false,true,false': [0.0, 0, 0], 'false,true': [12.073, 254, 342]}]]
[{'': [0.007873519778285758, 0.24752401907612634], 'true,false': [0.0, nan], 'true': [0.007936000000004014, 0.0], 'false': [0.24454979505427688, 0.22340591715976577], 'false,false': [0.22307555904878087, 0.25], 'false,false,true': [0.22307555904878087, nan], 'false,false,false': [0.25, nan]}, {'': [0.00787333718298307, 0.24360418610210924], 'true,false': [0.0, nan], 'true': [0.00793600000000214, 0.0], 'false': [0.2445497950542741, 0.22336108884361539], 'false,false': [0.2230755590487836, 0.25], 'false,false,true': [0.2230755590487836, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873171784791532, 0.23983807147367778], 'true,false': [0.0, nan], 'true': [0.007935999999998672, 0.0], 'false': [0.24454979505428565, 0.2233186282233166], 'false,false': [0.22307555904877585, 0.25], 'false,false,true': [0.22307555904877585, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873107515539967, 0.23700754740977792], 'true,false': [0.0, nan], 'true': [0.007936000000000347, 0.0], 'false': [0.2445497950542774, 0.2232859862909864], 'false,false': [0.22307555904878434, 0.25], 'false,false,true': [0.22307555904878434, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873093183907791, 0.2352539500178455], 'true,false': [0.0, nan], 'true': [0.007935999999999695, 0.0], 'false': [0.24454979505427388, 0.22326482892984384], 'false,false': [0.22307555904878065, 0.24999999999999997], 'false,false,true': [0.22307555904878065, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873093787569715, 0.2343055914382714], 'true,false': [0.0, nan], 'true': [0.00793599999999958, 0.0], 'false': [0.24454979505427807, 0.22325279753480812], 'false,false': [0.22307555904878043, 0.24999999999999997], 'false,false,true': [0.22307555904878043, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.0078730981121957, 0.23383536314949327], 'true,false': [0.0, nan], 'true': [0.007935999999999851, 0.0], 'false': [0.24454979505427382, 0.22324658165373243], 'false,false': [0.2230755590487742, 0.25], 'false,false,true': [0.2230755590487742, nan], 'false,false,false': [0.25, nan]}, {'': [0.007873102857139307, 0.23361408284313243], 'true,false': [0.0, nan], 'true': [0.007936000000000235, 0.0], 'false': [0.24454979505427726, 0.22324358816080112], 'false,false': [0.22307555904878174, 0.24999999999999997], 'false,false,true': [0.22307555904878174, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873107107679108, 0.23351316510179398], 'true,false': [0.0, nan], 'true': [0.007935999999999947, 0.0], 'false': [0.24454979505427848, 0.22324222331877763], 'false,false': [0.22307555904877802, 0.24999999999999997], 'false,false,true': [0.22307555904877802, nan], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.007873110685765697, 0.23346807475874934], 'true,false': [0.0, nan], 'true': [0.007936000000000117, 0.0], 'false': [0.24454979505427535, 0.2232416306151069], 'false,false': [0.22307555904877588, 0.25], 'false,false,true': [0.22307555904877588, nan], 'false,false,false': [0.25, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
0;true;function(A, D), function(B, D).;true;true
1;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
1;true;function(B, D), function(A, D).;true;true
2;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
2;true;function(A, D), function(B, D).;true;true
3;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
3;true;function(A, D), function(B, D).;true;true
4;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
4;true;function(A, D), function(B, D).;true;true
5;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
5;true;function(A, D), function(B, D).;true;true
6;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
6;true;function(B, D), function(A, D).;true;true
7;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
7;true;function(B, D), function(A, D).;true;true
8;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
8;true;function(B, D), function(A, D).;true;true
9;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
9;true;function(A, D), function(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.8502124271630025;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.1308762078267851;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.3559067826331413;  // std dev = 7,467, 223,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=111 */
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.265556342506919;  // std dev = 3,611, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.4652917922423655;  // std dev = 8,952, 336,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=204 */
%   | else if ( function(A, H), function(B, H) )
%   | | then if ( phenotype(A, I), location(B, J) )
%   | | | then return 0.22178529873587502;  // std dev = 3,908, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.39250008013768106;  // std dev = 5,709, 131,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=70 */
%   | | else if ( proteinclass(A, K) )
%   | | | then return 0.29363280606725306;  // std dev = 3,904, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return 0.13412296107353813;  // std dev = 7,845, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.7131359472613099;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( phenotype(A, E), phenotype(B, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.34145896494019373;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6124699749692041;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.09145896494019326;  // std dev = 3,354, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.3365071455598598;  // std dev = 11,993, 582,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=312 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.08951250595225947;  // std dev = 4,710, 117,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | | else return 0.19625236189160183;  // std dev = 9,272, 374,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=138 */
%   | | else if ( function(A, M), function(B, M) )
%   | | | then return 0.45513395113830185;  // std dev = 2,644, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.23902506914887256;  // std dev = 3,284, 45,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.5508883307803626;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else return 0.5588883307803618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, E), location(B, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.2145608152752924;  // std dev = 2,915, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.04163506426016872;  // std dev = 1,851, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( proteinclass(B, I), phenotype(B, J) )
%   | | | then return 0.10141720193163796;  // std dev = 3,445, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.3052088315148096;  // std dev = 11,670, 563,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=319 */
%   | else if ( proteinclass(A, K), proteinclass(B, K) )
%   | | then return 0.767061381365791;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.0767045744713495;  // std dev = 4,709, 117,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | | else return 0.1806882150776113;  // std dev = 10,189, 447,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=173 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(A, D), function(B, D) )
%   | then return 0.4140809454804519;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else return 0.4201307425777103;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, E), phenotype(B, E) )
%   | then if ( proteinclass(B, F), complex(A, G) )
%   | | then return -0.08373207454585382;  // std dev = 0,995, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( function(A, H), function(B, H) )
%   | | | then return 0.5326005054148004;  // std dev = 2,154, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | | else return 0.0076289245040038044;  // std dev = 1,013, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( function(A, I), function(B, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1714795713176106;  // std dev = 7,406, 233,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=101 */
%   | | | else return 0.34143225577863207;  // std dev = 8,372, 318,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=206 */
%   | | else if ( location(A, K), phenotype(B, L) )
%   | | | then return -0.028043099345274262;  // std dev = 5,230, 156,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=36 */
%   | | | else return 0.1174194295415018;  // std dev = 10,519, 487,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=181 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.3176030845543681;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( proteinclass(A, G), complex(A, H) )
%   | | | then return 0.25357803140973395;  // std dev = 2,310, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.11547557036421398;  // std dev = 2,026, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.18752646825349595;  // std dev = 7,303, 226,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=116 */
%   | | | else return 0.284218485872837;  // std dev = 8,116, 312,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=209 */
%   | else if ( phenotype(B, J), location(A, K) )
%   | | then if ( enzyme(A, L), complex(B, M) )
%   | | | then return 0.19729211056125703;  // std dev = 1,912, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.04534947598786447;  // std dev = 4,887, 147,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=31 */
%   | | else if ( location(A, N), complex(A, P) )
%   | | | then return 0.055122035251043866;  // std dev = 6,498, 203,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=64 */
%   | | | else return 0.12335419112159915;  // std dev = 8,234, 284,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=117 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.25205131086411964;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( proteinclass(A, G), complex(A, H) )
%   | | | then return 0.203982272913843;  // std dev = 2,308, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.09357578746047071;  // std dev = 2,033, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( location(B, I), location(A, I) )
%   | | | then return 0.2157150687422325;  // std dev = 8,664, 356,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=234 */
%   | | | else return 0.12912430145771067;  // std dev = 6,609, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | else if ( phenotype(B, J), location(A, K) )
%   | | then if ( proteinclass(A, L) )
%   | | | then return 0.09086478878818494;  // std dev = 2,109, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.032704895973226726;  // std dev = 4,835, 143,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=31 */
%   | | else if ( proteinclass(B, M), location(A, N) )
%   | | | then return -0.0407091708504763;  // std dev = 3,146, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.0895192731536655;  // std dev = 9,982, 435,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=167 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.20655129545627307;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( phenotype(A, E), phenotype(B, E) )
%   | | then if ( complex(A, F), proteinclass(B, G) )
%   | | | then return -0.1561802431685668;  // std dev = 1,002, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.33017842239210193;  // std dev = 2,098, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | else if ( phenotype(A, H), location(B, I) )
%   | | | then return 0.043134109344793344;  // std dev = 6,590, 199,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=87 */
%   | | | else return 0.1585413324274802;  // std dev = 8,810, 352,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=220 */
%   | else if ( phenotype(B, J), location(A, K) )
%   | | then if ( enzyme(A, L), location(B, K) )
%   | | | then return 0.1076251254055126;  // std dev = 1,838, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.02774962206823932;  // std dev = 4,935, 147,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=32 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.08543562527218405;  // std dev = 1,804, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.06881842286592829;  // std dev = 10,300, 459,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=176 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.17379883547840053;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( function(A, D), function(B, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(B, F), complex(B, G) )
%   | | | then return 0.15239708531272048;  // std dev = 4,153, 86,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | | | else return 0.015904066568903082;  // std dev = 6,414, 184,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=76 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.03710832030998379;  // std dev = 5,034, 108,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=60 */
%   | | | else return 0.17568771051845702;  // std dev = 6,454, 218,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=154 */
%   | else if ( proteinclass(A, I), enzyme(A, J) )
%   | | then if ( location(B, K), complex(A, L) )
%   | | | then return -0.05906208894606856;  // std dev = 1,980, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.37979092232540945;  // std dev = 2,050, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( proteinclass(B, M), location(A, N) )
%   | | | then return -0.04245852759414587;  // std dev = 3,637, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return 0.03282254406426327;  // std dev = 10,658, 532,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=181 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( function(B, D), function(A, D) )
%   | then return 0.14931776814434072;  // std dev = 0,089, 125,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=124 */
%   | else return 0.15546415708340444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, E), enzyme(B, E) )
%   | then if ( complex(A, F) )
%   | | then return -0.039503600856830225;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(G, E), proteinclass(G, H) )
%   | | | then return 0.5636023998957314;  // std dev = 0,177, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42553923500246554;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( function(A, I), function(B, I) )
%   | | then if ( complex(B, J), enzyme(B, K) )
%   | | | then return -0.05360359899356145;  // std dev = 3,112, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.07964901877938738;  // std dev = 10,724, 544,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=317 */
%   | | else if ( location(A, L), proteinclass(B, M) )
%   | | | then return -0.04089149576998075;  // std dev = 3,718, 79,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | | else return 0.03423918104616799;  // std dev = 11,071, 571,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=200 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.13056416691207756;  // std dev = 0,089, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( function(A, F), function(B, F) )
%   | | | then return 0.14619250004566273;  // std dev = 2,398, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.1853052773999393;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.35068516791831;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22412081386703728;  // std dev = 0,744, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.10457248433575868;  // std dev = 2,506, 59,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | | else return 0.008171794724172293;  // std dev = 6,561, 198,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=74 */
%   | | else if ( complex(B, K), function(A, L) )
%   | | | then return 0.008282091983388432;  // std dev = 8,190, 315,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=129 */
%   | | | else return 0.06592439487744996;  // std dev = 11,715, 622,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=312 */


Results
   AUC ROC   = 0.659428
   AUC PR    = 0.690666
   CLL	      = -0.657038
   Precision = 0.709482 at threshold = 0.5
   Recall    = 0.401003
   F1        = 0.512397


Total learning time: 17.598 seconds
Total inference time: 3.162 seconds
AUC ROC: 0.659428


Refined model AUC ROC: 0.659428


Dataset: 23_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:19:18
{'Recall': 0.401003, 'Learning time': 21.421, 'F1': 0.512397, 'Precision': [0.709482, 0.5], 'AUC PR': 0.690666, 'CLL': -0.657038, 'parameter': {'Recall': 0.626188, 'Learning time': 3.823, 'F1': 0.628178, 'Precision': [0.630181, 0.5], 'AUC PR': 0.650162, 'CLL': -0.658227, 'AUC ROC': 0.641066, 'Inference time': 2.491}, 'AUC ROC': 0.659428, 'Inference time': 3.162}


Starting fold 4

Target train facts examples: 2518
Target train pos examples: 703
Target train neg examples: 703

Target test facts examples: 8023
Target test pos examples: 3771
Target test neg examples: 3771

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false,false;tweets(B, J).;false;false
0;true,false,false;tweets(B, F).;false;false
0;true,false;tweets(A, E).;false;true
0;false;tweets(B, G), tweets(A, G).;false;true
0;false,false;tweets(A, H).;true;true
0;false,false,true;tweets(B, I).;false;false
0;true;tweets(A, D), tweets(B, D).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false,false;tweets(B, J).;false;false
1;true,false,false;tweets(B, F).;false;false
1;true,false;tweets(A, E).;false;true
1;false;tweets(A, G), tweets(B, G).;false;true
1;false,false;tweets(A, H).;true;true
1;false,false,true;tweets(B, I).;false;false
1;true;tweets(B, D), tweets(A, D).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false,false;tweets(B, J).;false;false
2;true,false,false;tweets(B, F).;false;false
2;true,false;tweets(A, E).;false;true
2;false;tweets(B, G), tweets(A, G).;false;true
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(B, I).;false;false
2;true;tweets(A, D), tweets(B, D).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false,false;tweets(B, J).;false;false
3;true,false,false;tweets(B, F).;false;false
3;true,false;tweets(A, E).;false;true
3;false;tweets(B, G), tweets(A, G).;false;true
3;false,false;tweets(A, H).;true;true
3;false,false,true;tweets(B, I).;false;false
3;true;tweets(A, D), tweets(B, D).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false,false;tweets(B, K).;false;false
4;true,false,false;tweets(B, G).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;false;tweets(B, H), tweets(A, H).;false;true
4;false,false;tweets(A, I).;true;true
4;false,false,true;tweets(B, J).;false;false
4;true;tweets(A, D), tweets(B, D).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false,false;tweets(B, K).;false;false
5;true,false,false;tweets(B, G).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;false;tweets(B, H), tweets(A, H).;false;true
5;false,false;tweets(A, I).;true;true
5;false,false,true;tweets(B, J).;false;false
5;true;tweets(A, D), tweets(B, D).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false,false;tweets(B, K).;false;false
6;true,false,false;tweets(B, G).;false;false
6;true,false;tweets(A, E), tweets(B, F).;false;true
6;false;tweets(A, H), tweets(B, H).;false;true
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(B, J).;false;false
6;true;tweets(B, D), tweets(A, D).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false,false;tweets(B, K).;false;false
7;true,false,false;tweets(B, G).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;false;tweets(B, H), tweets(A, H).;false;true
7;false,false;tweets(A, I).;true;true
7;false,false,true;tweets(B, J).;false;false
7;true;tweets(B, D), tweets(A, D).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false,false;tweets(B, K).;false;false
8;true,false,false;tweets(B, G).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;false;tweets(B, H), tweets(A, H).;false;true
8;false,false;tweets(A, I).;true;true
8;false,false,true;tweets(B, J).;false;false
8;true;tweets(B, D), tweets(A, D).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false,false;tweets(B, K).;false;false
9;true,false,false;tweets(B, G).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;false;tweets(B, H), tweets(A, H).;false;true
9;false,false;tweets(A, I).;true;true
9;false,false,true;tweets(B, J).;false;false
9;true;tweets(A, D), tweets(B, D).;false;true


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8470378239884007;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.26750566024571243;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.31379409638983136;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.30927675464837984;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7105993940723567;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(A, G), enzyme(B, G) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.23172769795212014;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.27115327770785763;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.26731462248230453;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5491847262103361;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.19532070447499686;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.2268368930846089;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.2237906669392987;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.41277954404907885;  // std dev = 0,994, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.1690588431090709;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.1606358440297439;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.18438051344183984;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.18211127712533035;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3168425472758126;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.12942697422617847;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.14643943473025656;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.14483464060294043;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.22699179224124724;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(B, E), enzyme(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2512900483939143;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.10684292618038639;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.10261215167075714;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.11432030648835526;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.1132290343649292;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.1812058810760637;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20577023034156253;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.08036987809703344;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.08817272315581082;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.08745147187332257;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.14804913120500338;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17299624814408496;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.062390427518588636;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.06744943487504143;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.06698283639999936;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then return 0.12328872166165511;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.14854526489605638;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.04928605546308811;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.04812236044261775;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.051314649224567535;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.05101827554032202;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then return 0.10427374705508957;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1297276262983249;  // std dev = 0,995, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(B, J) )
%   | | | then return 0.037650749190837426;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.036945933350026564;  // std dev = 6,430, 171,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=70 */
%   | | else if ( enzyme(B, K) )
%   | | | then return 0.03889741736945186;  // std dev = 7,843, 248,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=113 */
%   | | | else return 0.03871272929453029;  // std dev = 14,057, 798,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=360 */


Results
   AUC ROC   = 0.527381
   AUC PR    = 0.563771
   CLL	      = -0.680098
   Precision = 0.961783 at threshold = 0.5
   Recall    = 0.080085
   F1        = 0.147858


Total learning time: 4.301 seconds
Total inference time: 2.74 seconds
AUC ROC: 0.527381


Structure after Parameter Learning
[['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(A, G), enzyme(B, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [5.96e-08, 0, 16], 'true,false,true': [4.21e-08, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, F)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, G), enzyme(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(B, I)', 'false,false,false': 'enzyme(B, J)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [5.16e-08, 0, 16], 'true,false,true': [4.21e-08, 0, 11], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.994, 1, 89], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [4.21e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(B, E), enzyme(A, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [2.11e-08, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [2.11e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(A, H), enzyme(B, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(B, D), enzyme(A, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [1.05e-08, 0, 12], 'false,false,true,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(A, D), enzyme(B, D)', 'true,false,false': 'enzyme(B, G)', 'true,false': 'enzyme(A, E), enzyme(B, F)', 'false': 'enzyme(B, H), enzyme(A, H)', 'false,false': 'enzyme(A, I)', 'false,false,true': 'enzyme(B, J)', 'false,false,false': 'enzyme(B, K)'}, {'false,false,false,false': [14.057, 438, 360], 'false,true': [0.0, 0, 16], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [7.843, 135, 113], 'true,false,false,false': [0.995, 1, 100], 'true,true': [0.961, 1, 12], 'false,false,true,false': [6.43, 101, 70], 'true,false,false,true': [0.0, 0, 12], 'false,false,true,true': [3.39, 27, 20]}]]
[{'': [0.015621063240114865, 0.24772888183593214], 'true,false': [-1.6148698540002277e-16, 0.009707804690505412], 'true,false,false': [-1.4802973661668753e-16, 0.010987654320987871], 'true': [0.07100591715976314, 0.00877124285378813], 'false': [-2.220446049250313e-16, 0.24702008392083769], 'false,false': [0.2424038380607709, 0.24771505032372082], 'false,false,true': [0.2444545043005882, 0.24178379672377806], 'false,false,false': [0.2480326482830416, 0.24761150997793907]}, {'': [0.015461575111338447, 0.24644785194164492], 'true,false': [1.6148698540002277e-16, 0.00970316366017141], 'true,false,false': [1.4802973661668753e-16, 0.010987654320987635], 'true': [0.07100591715976333, 0.00876399508294676], 'false': [2.220446049250313e-16, 0.24695648837194728], 'false,false': [0.24239179781074652, 0.24771402453317345], 'false,false,true': [0.24445450430058804, 0.24178379672378164], 'false,false,false': [0.2480326482830414, 0.24761150997795012]}, {'': [0.015314150748178547, 0.24519886234524826], 'true,false': [-2.0185873175002846e-16, 0.009698955910747783], 'true,false,false': [-2.590520390792032e-16, 0.010987654320986608], 'true': [0.07100591715976351, 0.008757423955117485], 'false': [-2.220446049250313e-16, 0.24689584427945993], 'false,false': [0.24238038832587921, 0.2477130376901582], 'false,false,true': [0.24445450430058865, 0.2417837967237787], 'false,false,false': [0.2480326482830372, 0.24761150997794926]}, {'': [0.015252435595846896, 0.24446503720180832], 'true,false': [1.6148698540002277e-16, 0.009697315522229464], 'true,false,false': [1.4802973661668753e-16, 0.010987654320986964], 'true': [0.0710059171597632, 0.008754862204984793], 'false': [1.6653345369377348e-16, 0.2468494109413185], 'false,false': [0.24237158963211222, 0.24771229064372416], 'false,false,true': [0.24445450430058868, 0.2417837967237763], 'false,false,false': [0.2480326482830401, 0.24761150997795806]}, {'': [0.015235919210622655, 0.24412554225982527], 'true,false': [nan, 0.008754285686624726], 'true,false,false': [-5.551115123125783e-17, 0.009792808945660009], 'true': [0.07100591715976336, 0.008754285686624726], 'false': [0.0, 0.24681971950186082], 'false,false': [0.24236586827141854, 0.24771182504537975], 'false,false,true': [0.24445450430058854, 0.2417837967237793], 'false,false,false': [0.24803264828303867, 0.2476115099779483]}, {'': [0.01523420388898935, 0.24397201855381287], 'true,false': [nan, 0.008754989640999439], 'true,false,false': [3.700743415417188e-17, 0.009793585924016662], 'true': [0.07100591715976326, 0.008754989640999432], 'false': [2.7755575615628914e-17, 0.2468032172037979], 'false,false': [0.24236261853455623, 0.24771157461857277], 'false,false,true': [0.2444545043005879, 0.24178379672377956], 'false,false,false': [0.24803264828303825, 0.2476115099779465]}, {'': [0.015236186283915964, 0.24389761951181033], 'true,false': [nan, 0.008755778345150773], 'true,false,false': [-2.7755575615628914e-17, 0.009794380341893262], 'true': [0.07100591715976336, 0.008755778345150766], 'false': [-3.469446951953614e-17, 0.2467949551039558], 'false,false': [0.24236095480180056, 0.24771145330735117], 'false,false,true': [0.24445450430058863, 0.2417837967237773], 'false,false,false': [0.24803264828304064, 0.24761150997796147]}, {'': [0.015238693008556403, 0.24385762715717435], 'true,false': [nan, 0.008756522000236305], 'true,false,false': [9.25185853854297e-18, 0.009795115501647748], 'true': [0.07100591715976333, 0.008756522000236331], 'false': [-1.3877787807814457e-17, 0.24679112556983154], 'false,false': [0.2423601685436053, 0.24771139859300312], 'false,false,true': [0.24445450430058815, 0.24178379672377873], 'false,false,false': [0.24803264828303948, 0.24761150997795406]}, {'': [0.01524079767711713, 0.2438333212319709], 'true,false': [nan, 0.008757182870388978], 'true,false,false': [9.25185853854297e-18, 0.00979576822149935], 'true': [0.07100591715976333, 0.008757182870389], 'false': [-2.42861286636753e-17, 0.24678945355550513], 'false,false': [0.24235982048915428, 0.2477113751008551], 'false,false,true': [0.24445450430058813, 0.24178379672377906], 'false,false,false': [0.2480326482830375, 0.24761150997795117]}, {'': [0.015242296449210156, 0.24381656568964086], 'true,false': [nan, 0.008757757573019153], 'true,false,false': [0.0, 0.009796338450450864], 'true': [0.07100591715976332, 0.008757757573019153], 'false': [0.0, 0.24678876087084892], 'false,false': [0.24235967548683066, 0.24771136538258495], 'false,false,true': [0.2444545043005881, 0.2417837967237787], 'false,false,false': [0.2480326482830382, 0.24761150997795928]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
0;false;enzyme(B, G), enzyme(A, G).;true;true
0;true,false;enzyme(A, E).;true;true
0;true,false,false;enzyme(B, F).;true;true
0;true;enzyme(A, D), enzyme(B, D).;true;true
1;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
1;false;enzyme(A, G), enzyme(B, G).;true;true
1;true,false;enzyme(A, E).;true;true
1;true,false,false;enzyme(B, F).;true;true
1;true;enzyme(B, D), enzyme(A, D).;true;true
2;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
2;false;enzyme(B, G), enzyme(A, G).;true;true
2;true,false;enzyme(A, E).;true;true
2;true,false,false;enzyme(B, F).;true;true
2;true;enzyme(A, D), enzyme(B, D).;true;true
3;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
3;false;enzyme(B, G), enzyme(A, G).;true;true
3;true,false;enzyme(A, E).;true;true
3;true,false,false;enzyme(B, F).;true;true
3;true;enzyme(A, D), enzyme(B, D).;true;true
4;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
4;true,false;enzyme(B, G).;true;true
4;false;enzyme(B, H), enzyme(A, H).;true;true
4;true;enzyme(A, D), enzyme(B, D).;true;true
5;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
5;true,false;enzyme(B, G).;true;true
5;false;enzyme(B, H), enzyme(A, H).;true;true
5;true;enzyme(A, D), enzyme(B, D).;true;true
6;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
6;true,false;enzyme(B, G).;true;true
6;false;enzyme(A, H), enzyme(B, H).;true;true
6;true;enzyme(B, D), enzyme(A, D).;true;true
7;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
7;true,false;enzyme(B, G).;true;true
7;false;enzyme(B, H), enzyme(A, H).;true;true
7;true;enzyme(B, D), enzyme(A, D).;true;true
8;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
8;true,false;enzyme(B, G).;true;true
8;false;enzyme(B, H), enzyme(A, H).;true;true
8;true;enzyme(B, D), enzyme(A, D).;true;true
9;;interaction(A, B) :- complex(A, C), complex(B, C).;true;true
9;true,false;enzyme(B, G).;true;true
9;false;enzyme(B, H), enzyme(A, H).;true;true
9;true;enzyme(A, D), enzyme(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.8483450135308838;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, H) )
%   | | then if ( phenotype(A, I), phenotype(B, I) )
%   | | | then return 0.4797705567211331;  // std dev = 2,950, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.20607520238061644;  // std dev = 9,923, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.2562970832476592;  // std dev = 7,194, 216,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=86 */
%   | | | else return 0.3832789177684853;  // std dev = 11,995, 577,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=303 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.4850122940520397;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7332857516252526;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7116439657737714;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(A, H), enzyme(B, H) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(B, J), phenotype(A, J) )
%   | | | then return 0.4108414989934923;  // std dev = 2,950, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.1790938455658265;  // std dev = 9,923, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.22215052390145212;  // std dev = 7,194, 216,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=86 */
%   | | | else return 0.3299538535248726;  // std dev = 11,995, 577,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=303 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.5700463889571605;  // std dev = 0,087, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3174587482888988;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5499124435739007;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, H) )
%   | | then if ( proteinclass(A, I), phenotype(B, J) )
%   | | | then return 0.2836225377936512;  // std dev = 3,625, 55,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | | | else return 0.1513023080986432;  // std dev = 9,711, 416,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=146 */
%   | | else if ( function(B, K), function(A, K) )
%   | | | then return 0.3085905325773966;  // std dev = 8,902, 322,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=176 */
%   | | | else return 0.20937915416981512;  // std dev = 10,754, 471,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=213 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( location(B, E), proteinclass(A, F) )
%   | | then return 0.25780265483898224;  // std dev = 0,741, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4428843158496017;  // std dev = 0,060, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4133348790388199;  // std dev = 0,099, 102,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=101 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(B, I), phenotype(A, I) )
%   | | then if ( location(A, J), location(B, J) )
%   | | | then return 0.46361106753149395;  // std dev = 2,831, 46,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | | | else return 0.03961253333227834;  // std dev = 1,804, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.10900593441735767;  // std dev = 8,397, 310,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=110 */
%   | | | else return 0.18905952585158198;  // std dev = 14,752, 894,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=412 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.33885382415602094;  // std dev = 0,144, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.14824396160170242;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.32668072568058987;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3161296597031157;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(B, H), phenotype(A, H) )
%   | | then if ( enzyme(A, I), complex(B, J) )
%   | | | then return 0.5975877125909247;  // std dev = 0,200, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20100320896395196;  // std dev = 3,300, 48,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09473066685930905;  // std dev = 9,913, 434,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=151 */
%   | | | else return 0.15677214500787237;  // std dev = 13,763, 770,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=371 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( location(B, E), proteinclass(A, F) )
%   | | then return 0.126386781530377;  // std dev = 0,704, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2789768368751544;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.2592410341147577;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2508019477870411;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( function(B, I), function(A, I) )
%   | | then if ( location(B, J), location(A, J) )
%   | | | then return 0.19870245412267476;  // std dev = 8,744, 332,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=182 */
%   | | | else return 0.06635184432691542;  // std dev = 7,577, 242,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=96 */
%   | | else if ( enzyme(B, K), location(B, L) )
%   | | | then return 0.15390553149751182;  // std dev = 5,867, 143,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=69 */
%   | | | else return 0.0649452909548394;  // std dev = 11,305, 547,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=216 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.22671977366167284;  // std dev = 0,049, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.05766949823587827;  // std dev = 0,701, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.21262776496785343;  // std dev = 1,83e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.20542471373803453;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(A, G), enzyme(B, G) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(B, H), enzyme(B, I) )
%   | | then if ( complex(A, J), proteinclass(B, K) )
%   | | | then return 0.14907088169587063;  // std dev = 1,634, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.03281004488851948;  // std dev = 4,274, 86,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | else if ( function(B, L), function(A, L) )
%   | | | then return 0.13084635473883313;  // std dev = 10,964, 509,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=256 */
%   | | | else return 0.06501019632698908;  // std dev = 12,441, 657,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=271 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.060228193906576244;  // std dev = 0,681, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19899281288495618;  // std dev = 0,071, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.17919869786799647;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.17274248928841252;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(B, J), phenotype(A, J) )
%   | | | then return 0.2587051444194823;  // std dev = 1,831, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.020467355834102304;  // std dev = 6,516, 193,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=69 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.010733153285306269;  // std dev = 7,710, 265,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=93 */
%   | | | else return 0.09998081880554727;  // std dev = 13,711, 781,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=380 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(B, D), enzyme(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return 0.16890856742847524;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.010952262787441361;  // std dev = 0,680, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.15433672425781753;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.14835259559484415;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, G), enzyme(A, G) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.042021254468741706;  // std dev = 3,208, 59,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.030738732217744414;  // std dev = 9,695, 412,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=152 */
%   | | else if ( enzyme(B, K), phenotype(A, L) )
%   | | | then return -0.03028815086628745;  // std dev = 4,205, 73,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | | else return 0.07758126143392019;  // std dev = 13,113, 720,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=359 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(A, D), enzyme(B, D) )
%   | then if ( proteinclass(A, E), location(B, F) )
%   | | then return 0.024871416955109776;  // std dev = 0,660, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15497753536623637;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.13524933115506058;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.12957712499781537;  // std dev = 0,099, 101,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   else if ( enzyme(B, H), enzyme(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( proteinclass(B, I), phenotype(B, J) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.4781692081736786;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.059174932077324785;  // std dev = 5,596, 138,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | | else if ( complex(B, K), complex(A, L) )
%   | | | then return -0.032919270712566805;  // std dev = 4,477, 102,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.05663263253411398;  // std dev = 15,502, 1.019,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=475 */


Results
   AUC ROC   = 0.628374
   AUC PR    = 0.667763
   CLL	      = -0.664676
   Precision = 0.789716 at threshold = 0.5
   Recall    = 0.272872
   F1        = 0.405597


Total learning time: 12.416 seconds
Total inference time: 2.802 seconds
AUC ROC: 0.628374


Refined model AUC ROC: 0.628374


Dataset: 23_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:19:41
{'Recall': 0.272872, 'Learning time': 16.717, 'F1': 0.405597, 'Precision': [0.789716, 0.5], 'AUC PR': 0.667763, 'CLL': -0.664676, 'parameter': {'Recall': 0.080085, 'Learning time': 4.301, 'F1': 0.147858, 'Precision': [0.961783, 0.5], 'AUC PR': 0.563771, 'CLL': -0.680098, 'AUC ROC': 0.527381, 'Inference time': 2.74}, 'AUC ROC': 0.628374, 'Inference time': 2.802}


